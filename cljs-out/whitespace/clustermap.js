if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2322";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__18134__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__18134 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18134__delegate.call(this, args);
    };
    G__18134.cljs$lang$maxFixedArity = 0;
    G__18134.cljs$lang$applyTo = function(arglist__18135) {
      var args = cljs.core.seq(arglist__18135);
      return G__18134__delegate(args);
    };
    G__18134.cljs$core$IFn$_invoke$arity$variadic = G__18134__delegate;
    return G__18134;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3546__auto__ = ty;
    if (cljs.core.truth_(and__3546__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3546__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4414__auto___18136 = len;
  var i_18137 = 0;
  while (true) {
    if (i_18137 < n__4414__auto___18136) {
      new_arr[i_18137] = arr[i_18137];
      var G__18138 = i_18137 + 1;
      i_18137 = G__18138;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__18139__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__18139 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18139__delegate.call(this, array, i, idxs);
    };
    G__18139.cljs$lang$maxFixedArity = 2;
    G__18139.cljs$lang$applyTo = function(arglist__18140) {
      var array = cljs.core.first(arglist__18140);
      arglist__18140 = cljs.core.next(arglist__18140);
      var i = cljs.core.first(arglist__18140);
      var idxs = cljs.core.rest(arglist__18140);
      return G__18139__delegate(array, i, idxs);
    };
    G__18139.cljs$core$IFn$_invoke$arity$variadic = G__18139__delegate;
    return G__18139;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__18141__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__18141 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18141__delegate.call(this, array, idx, idx2, idxv);
    };
    G__18141.cljs$lang$maxFixedArity = 3;
    G__18141.cljs$lang$applyTo = function(arglist__18142) {
      var array = cljs.core.first(arglist__18142);
      arglist__18142 = cljs.core.next(arglist__18142);
      var idx = cljs.core.first(arglist__18142);
      arglist__18142 = cljs.core.next(arglist__18142);
      var idx2 = cljs.core.first(arglist__18142);
      var idxv = cljs.core.rest(arglist__18142);
      return G__18141__delegate(array, idx, idx2, idxv);
    };
    G__18141.cljs$core$IFn$_invoke$arity$variadic = G__18141__delegate;
    return G__18141;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj18144 = {};
  return obj18144;
}();
cljs.core.IFn = function() {
  var obj18146 = {};
  return obj18146;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj18148 = {};
  return obj18148;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3546__auto__ = value;
    if (and__3546__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4185__auto__ = value == null ? null : value;
    return function() {
      var or__3558__auto__ = cljs.core._clone[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._clone["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj18150 = {};
  return obj18150;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._count[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._count["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj18152 = {};
  return obj18152;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._empty[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._empty["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj18154 = {};
  return obj18154;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._conj[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._conj["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj18156 = {};
  return obj18156;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._nth[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._nth["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._nth[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._nth["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj18158 = {};
  return obj18158;
}();
cljs.core.ISeq = function() {
  var obj18160 = {};
  return obj18160;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._rest[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._rest["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj18162 = {};
  return obj18162;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._next[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._next["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj18164 = {};
  return obj18164;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._lookup[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._lookup["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._lookup[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._lookup["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj18166 = {};
  return obj18166;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj18168 = {};
  return obj18168;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._dissoc[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._dissoc["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj18170 = {};
  return obj18170;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._key[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._key["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._val[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._val["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj18172 = {};
  return obj18172;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._disjoin[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._disjoin["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj18174 = {};
  return obj18174;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._peek[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._peek["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._pop[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pop["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj18176 = {};
  return obj18176;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_n[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj18178 = {};
  return obj18178;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._deref[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._deref["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj18180 = {};
  return obj18180;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj18182 = {};
  return obj18182;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._meta[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._meta["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj18184 = {};
  return obj18184;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._with_meta[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._with_meta["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj18186 = {};
  return obj18186;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._reduce[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._reduce["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._reduce[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._reduce["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj18188 = {};
  return obj18188;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj18190 = {};
  return obj18190;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._equiv[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._equiv["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj18192 = {};
  return obj18192;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._hash[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._hash["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj18194 = {};
  return obj18194;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._seq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._seq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj18196 = {};
  return obj18196;
}();
cljs.core.IList = function() {
  var obj18198 = {};
  return obj18198;
}();
cljs.core.IRecord = function() {
  var obj18200 = {};
  return obj18200;
}();
cljs.core.IReversible = function() {
  var obj18202 = {};
  return obj18202;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._rseq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._rseq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj18204 = {};
  return obj18204;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._entry_key[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._entry_key["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._comparator[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._comparator["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj18206 = {};
  return obj18206;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3546__auto__ = writer;
    if (and__3546__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4185__auto__ = writer == null ? null : writer;
    return function() {
      var or__3558__auto__ = cljs.core._write[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._write["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3546__auto__ = writer;
    if (and__3546__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4185__auto__ = writer == null ? null : writer;
    return function() {
      var or__3558__auto__ = cljs.core._flush[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._flush["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj18208 = {};
  return obj18208;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._pr_writer[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj18210 = {};
  return obj18210;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3546__auto__ = d;
    if (and__3546__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4185__auto__ = d == null ? null : d;
    return function() {
      var or__3558__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj18212 = {};
  return obj18212;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._notify_watches[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._add_watch[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._add_watch["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._remove_watch[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj18214 = {};
  return obj18214;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._as_transient[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._as_transient["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj18216 = {};
  return obj18216;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj18218 = {};
  return obj18218;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj18220 = {};
  return obj18220;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj18222 = {};
  return obj18222;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj18224 = {};
  return obj18224;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj18226 = {};
  return obj18226;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._compare[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._compare["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj18228 = {};
  return obj18228;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._drop_first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._drop_first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj18230 = {};
  return obj18230;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj18232 = {};
  return obj18232;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_next[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj18234 = {};
  return obj18234;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._name[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._name["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._namespace[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._namespace["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj18236 = {};
  return obj18236;
}();
cljs.core.IReset = function() {
  var obj18238 = {};
  return obj18238;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj18240 = {};
  return obj18240;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__18241 = i + 2;
        var G__18242 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__18241;
        h1 = G__18242;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj18244 = {};
  return obj18244;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__18245 = i + 1;
          var G__18246 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__18245;
          hash = G__18246;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj18250 = {};
      return obj18250;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__18252 = o;
    if (G__18252) {
      var bit__4201__auto__ = G__18252.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4201__auto__ || G__18252.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3546__auto__) {
        return b.ns;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3969__auto__ = self__._hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__18254 = null;
  var G__18254__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__18254__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__18254 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18254__2.call(this, self__, coll);
      case 3:
        return G__18254__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18254.cljs$core$IFn$_invoke$arity$2 = G__18254__2;
  G__18254.cljs$core$IFn$_invoke$arity$3 = G__18254__3;
  return G__18254;
}();
cljs.core.Symbol.prototype.apply = function(self__, args18253) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18253)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__18256 = value;
  if (G__18256) {
    var bit__4208__auto__ = G__18256.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4208__auto__ || G__18256.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__18256.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18256);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18256);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18258 = coll;
      if (G__18258) {
        var bit__4201__auto__ = G__18258.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4201__auto__ || G__18258.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18260 = coll;
      if (G__18260) {
        var bit__4201__auto__ = G__18260.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__18260.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18262 = coll;
      if (G__18262) {
        var bit__4201__auto__ = G__18262.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__18262.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18264 = coll;
      if (G__18264) {
        var bit__4201__auto__ = G__18264.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4201__auto__ || G__18264.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__18265__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__18266 = y;
            var G__18267 = cljs.core.first.call(null, more);
            var G__18268 = cljs.core.next.call(null, more);
            x = G__18266;
            y = G__18267;
            more = G__18268;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18265 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18265__delegate.call(this, x, y, more);
    };
    G__18265.cljs$lang$maxFixedArity = 2;
    G__18265.cljs$lang$applyTo = function(arglist__18269) {
      var x = cljs.core.first(arglist__18269);
      arglist__18269 = cljs.core.next(arglist__18269);
      var y = cljs.core.first(arglist__18269);
      var more = cljs.core.rest(arglist__18269);
      return G__18265__delegate(x, y, more);
    };
    G__18265.cljs$core$IFn$_invoke$arity$variadic = G__18265__delegate;
    return G__18265;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18270 = n + 1;
      var G__18271 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18272 = cljs.core.next.call(null, coll__$1);
      n = G__18270;
      hash_code = G__18271;
      coll__$1 = G__18272;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18273 = n + 1;
      var G__18274 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18275 = cljs.core.next.call(null, coll__$1);
      n = G__18273;
      hash_code = G__18274;
      coll__$1 = G__18275;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18276 = nval;
            var G__18277 = n + 1;
            val = G__18276;
            n = G__18277;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18278 = nval;
          var G__18279 = n + 1;
          val__$1 = G__18278;
          n = G__18279;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18280 = nval;
          var G__18281 = n + 1;
          val__$1 = G__18280;
          n = G__18281;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18282 = nval;
            var G__18283 = n + 1;
            val = G__18282;
            n = G__18283;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18284 = nval;
          var G__18285 = n + 1;
          val__$1 = G__18284;
          n = G__18285;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18286 = nval;
          var G__18287 = n + 1;
          val__$1 = G__18286;
          n = G__18287;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__18289 = x;
  if (G__18289) {
    var bit__4208__auto__ = G__18289.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4208__auto__ || G__18289.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__18289.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__18289);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__18289);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__18291 = x;
  if (G__18291) {
    var bit__4208__auto__ = G__18291.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4208__auto__ || G__18291.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__18291.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__18291);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__18291);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__18292 = sn;
      s = G__18292;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__18293__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__18294 = conj.call(null, coll, x);
          var G__18295 = cljs.core.first.call(null, xs);
          var G__18296 = cljs.core.next.call(null, xs);
          coll = G__18294;
          x = G__18295;
          xs = G__18296;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__18293 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18293__delegate.call(this, coll, x, xs);
    };
    G__18293.cljs$lang$maxFixedArity = 2;
    G__18293.cljs$lang$applyTo = function(arglist__18297) {
      var coll = cljs.core.first(arglist__18297);
      arglist__18297 = cljs.core.next(arglist__18297);
      var x = cljs.core.first(arglist__18297);
      var xs = cljs.core.rest(arglist__18297);
      return G__18293__delegate(coll, x, xs);
    };
    G__18293.cljs$core$IFn$_invoke$arity$variadic = G__18293__delegate;
    return G__18293;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__18298 = cljs.core.next.call(null, s);
      var G__18299 = acc + 1;
      s = G__18298;
      acc = G__18299;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18301 = coll;
      if (G__18301) {
        var bit__4201__auto__ = G__18301.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4201__auto__ || G__18301.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__18302 = cljs.core.next.call(null, coll);
              var G__18303 = n - 1;
              coll = G__18302;
              n = G__18303;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__18304 = cljs.core.next.call(null, coll);
              var G__18305 = n - 1;
              var G__18306 = not_found;
              coll = G__18304;
              n = G__18305;
              not_found = G__18306;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__18311 = coll;
          if (G__18311) {
            var bit__4201__auto__ = G__18311.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4201__auto__ || G__18311.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__18312 = coll;
                  if (G__18312) {
                    var bit__4208__auto__ = G__18312.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4208__auto__ || G__18312.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18312.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18312);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18312);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__18313 = coll;
          if (G__18313) {
            var bit__4201__auto__ = G__18313.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4201__auto__ || G__18313.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__18314 = coll;
                  if (G__18314) {
                    var bit__4208__auto__ = G__18314.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4208__auto__ || G__18314.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__18314.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18314);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18314);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__18317 = o;
        if (G__18317) {
          var bit__4201__auto__ = G__18317.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4201__auto__ || G__18317.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__18318 = o;
        if (G__18318) {
          var bit__4201__auto__ = G__18318.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4201__auto__ || G__18318.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__18319__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__18320 = ret;
          var G__18321 = cljs.core.first.call(null, kvs);
          var G__18322 = cljs.core.second.call(null, kvs);
          var G__18323 = cljs.core.nnext.call(null, kvs);
          coll = G__18320;
          k = G__18321;
          v = G__18322;
          kvs = G__18323;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__18319 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18319__delegate.call(this, coll, k, v, kvs);
    };
    G__18319.cljs$lang$maxFixedArity = 3;
    G__18319.cljs$lang$applyTo = function(arglist__18324) {
      var coll = cljs.core.first(arglist__18324);
      arglist__18324 = cljs.core.next(arglist__18324);
      var k = cljs.core.first(arglist__18324);
      arglist__18324 = cljs.core.next(arglist__18324);
      var v = cljs.core.first(arglist__18324);
      var kvs = cljs.core.rest(arglist__18324);
      return G__18319__delegate(coll, k, v, kvs);
    };
    G__18319.cljs$core$IFn$_invoke$arity$variadic = G__18319__delegate;
    return G__18319;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__18325__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18326 = ret;
            var G__18327 = cljs.core.first.call(null, ks);
            var G__18328 = cljs.core.next.call(null, ks);
            coll = G__18326;
            k = G__18327;
            ks = G__18328;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18325 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18325__delegate.call(this, coll, k, ks);
    };
    G__18325.cljs$lang$maxFixedArity = 2;
    G__18325.cljs$lang$applyTo = function(arglist__18329) {
      var coll = cljs.core.first(arglist__18329);
      arglist__18329 = cljs.core.next(arglist__18329);
      var k = cljs.core.first(arglist__18329);
      var ks = cljs.core.rest(arglist__18329);
      return G__18325__delegate(coll, k, ks);
    };
    G__18325.cljs$core$IFn$_invoke$arity$variadic = G__18325__delegate;
    return G__18325;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3558__auto__ = goog.isFunction(f);
  if (or__3558__auto__) {
    return or__3558__auto__;
  } else {
    var G__18333 = f;
    if (G__18333) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto____$1 = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto____$1)) {
          return or__3558__auto____$1;
        } else {
          return G__18333.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__18333.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__18333);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__18333);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__18335 = null;
  var G__18335__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__18335__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__18335__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__18335__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__18335__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__18335__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__18335__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__18335__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__18335__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__18335__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__18335__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__18335__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__18335__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__18335__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__18335__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__18335__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__18335__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__18335__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__18335__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__18335__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__18335__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__18335__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__18335 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18335__1.call(this, self__);
      case 2:
        return G__18335__2.call(this, self__, a);
      case 3:
        return G__18335__3.call(this, self__, a, b);
      case 4:
        return G__18335__4.call(this, self__, a, b, c);
      case 5:
        return G__18335__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18335__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18335__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18335__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18335__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18335__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18335__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18335__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18335__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18335__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18335__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18335__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18335__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18335__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18335__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18335__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18335__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18335__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18335.cljs$core$IFn$_invoke$arity$1 = G__18335__1;
  G__18335.cljs$core$IFn$_invoke$arity$2 = G__18335__2;
  G__18335.cljs$core$IFn$_invoke$arity$3 = G__18335__3;
  G__18335.cljs$core$IFn$_invoke$arity$4 = G__18335__4;
  G__18335.cljs$core$IFn$_invoke$arity$5 = G__18335__5;
  G__18335.cljs$core$IFn$_invoke$arity$6 = G__18335__6;
  G__18335.cljs$core$IFn$_invoke$arity$7 = G__18335__7;
  G__18335.cljs$core$IFn$_invoke$arity$8 = G__18335__8;
  G__18335.cljs$core$IFn$_invoke$arity$9 = G__18335__9;
  G__18335.cljs$core$IFn$_invoke$arity$10 = G__18335__10;
  G__18335.cljs$core$IFn$_invoke$arity$11 = G__18335__11;
  G__18335.cljs$core$IFn$_invoke$arity$12 = G__18335__12;
  G__18335.cljs$core$IFn$_invoke$arity$13 = G__18335__13;
  G__18335.cljs$core$IFn$_invoke$arity$14 = G__18335__14;
  G__18335.cljs$core$IFn$_invoke$arity$15 = G__18335__15;
  G__18335.cljs$core$IFn$_invoke$arity$16 = G__18335__16;
  G__18335.cljs$core$IFn$_invoke$arity$17 = G__18335__17;
  G__18335.cljs$core$IFn$_invoke$arity$18 = G__18335__18;
  G__18335.cljs$core$IFn$_invoke$arity$19 = G__18335__19;
  G__18335.cljs$core$IFn$_invoke$arity$20 = G__18335__20;
  G__18335.cljs$core$IFn$_invoke$arity$21 = G__18335__21;
  G__18335.cljs$core$IFn$_invoke$arity$22 = G__18335__22;
  return G__18335;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args18334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18334)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__18339 = o;
    if (G__18339) {
      var bit__4208__auto__ = G__18339.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4208__auto__ || G__18339.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__18339.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18339);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18339);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3546__auto__ = !(o == null);
    if (and__3546__auto__) {
      var G__18343 = o;
      if (G__18343) {
        var bit__4208__auto__ = G__18343.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4208__auto__ || G__18343.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__18343.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18343);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__18343);
      }
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__18344__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__18345 = ret;
            var G__18346 = cljs.core.first.call(null, ks);
            var G__18347 = cljs.core.next.call(null, ks);
            coll = G__18345;
            k = G__18346;
            ks = G__18347;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__18344 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18344__delegate.call(this, coll, k, ks);
    };
    G__18344.cljs$lang$maxFixedArity = 2;
    G__18344.cljs$lang$applyTo = function(arglist__18348) {
      var coll = cljs.core.first(arglist__18348);
      arglist__18348 = cljs.core.next(arglist__18348);
      var k = cljs.core.first(arglist__18348);
      var ks = cljs.core.rest(arglist__18348);
      return G__18344__delegate(coll, k, ks);
    };
    G__18344.cljs$core$IFn$_invoke$arity$variadic = G__18344__delegate;
    return G__18344;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18350 = x;
    if (G__18350) {
      var bit__4208__auto__ = G__18350.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4208__auto__ || G__18350.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__18350.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__18350);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__18350);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18352 = x;
    if (G__18352) {
      var bit__4208__auto__ = G__18352.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4208__auto__ || G__18352.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__18352.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18352);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18352);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__18354 = x;
  if (G__18354) {
    var bit__4208__auto__ = G__18354.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4208__auto__ || G__18354.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__18354.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__18354);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__18354);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__18356 = x;
  if (G__18356) {
    var bit__4208__auto__ = G__18356.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4208__auto__ || G__18356.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__18356.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18356);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18356);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__18358 = x;
  if (G__18358) {
    var bit__4208__auto__ = G__18358.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4208__auto__ || G__18358.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__18358.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__18358);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__18358);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__18360 = x;
  if (G__18360) {
    var bit__4208__auto__ = G__18360.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4208__auto__ || G__18360.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__18360.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__18360);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__18360);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__18362 = x;
    if (G__18362) {
      var bit__4208__auto__ = G__18362.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4208__auto__ || G__18362.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__18362.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18362);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18362);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__18364 = x;
  if (G__18364) {
    var bit__4208__auto__ = G__18364.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4208__auto__ || G__18364.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__18364.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__18364);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__18364);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__18366 = x;
  if (G__18366) {
    var bit__4201__auto__ = G__18366.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4201__auto__ || G__18366.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj18370 = {};
    return obj18370;
  };
  var js_obj__1 = function() {
    var G__18371__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__18371 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18371__delegate.call(this, keyvals);
    };
    G__18371.cljs$lang$maxFixedArity = 0;
    G__18371.cljs$lang$applyTo = function(arglist__18372) {
      var keyvals = cljs.core.seq(arglist__18372);
      return G__18371__delegate(keyvals);
    };
    G__18371.cljs$core$IFn$_invoke$arity$variadic = G__18371__delegate;
    return G__18371;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18373 = i__$1 + 1;
      var G__18374 = j__$1 + 1;
      var G__18375 = len__$1 - 1;
      i__$1 = G__18373;
      j__$1 = G__18374;
      len__$1 = G__18375;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18376 = i__$1 - 1;
      var G__18377 = j__$1 - 1;
      var G__18378 = len__$1 - 1;
      i__$1 = G__18376;
      j__$1 = G__18377;
      len__$1 = G__18378;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj18380 = {};
  return obj18380;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__18382 = s;
    if (G__18382) {
      var bit__4208__auto__ = G__18382.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4208__auto__ || G__18382.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__18382.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18382);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__18382);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__18384 = s;
  if (G__18384) {
    var bit__4208__auto__ = G__18384.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4208__auto__ || G__18384.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__18384.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18384);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18384);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3558__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3558__auto__) {
    return or__3558__auto__;
  } else {
    var G__18388 = f;
    if (G__18388) {
      var bit__4208__auto__ = G__18388.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4208__auto__ || G__18388.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__18388.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__18388);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__18388);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__18389__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__18390 = cljs.core.conj.call(null, s, x__$1);
              var G__18391 = etc;
              s = G__18390;
              xs = G__18391;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__18389 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18389__delegate.call(this, x, y, more);
    };
    G__18389.cljs$lang$maxFixedArity = 2;
    G__18389.cljs$lang$applyTo = function(arglist__18392) {
      var x = cljs.core.first(arglist__18392);
      arglist__18392 = cljs.core.next(arglist__18392);
      var y = cljs.core.first(arglist__18392);
      var more = cljs.core.rest(arglist__18392);
      return G__18389__delegate(x, y, more);
    };
    G__18389.cljs$core$IFn$_invoke$arity$variadic = G__18389__delegate;
    return G__18389;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3558__auto__ = cljs.core.seq.call(null, coll);
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__18394 = x;
            if (G__18394) {
              var bit__4201__auto__ = G__18394.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4201__auto__ || G__18394.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__18395 = xs;
        var G__18396 = ys;
        var G__18397 = len;
        var G__18398 = n + 1;
        xs = G__18395;
        ys = G__18396;
        len = G__18397;
        n = G__18398;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18399 = nval;
          var G__18400 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__18399;
          coll__$1 = G__18400;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__18403 = coll;
      if (G__18403) {
        var bit__4201__auto__ = G__18403.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4201__auto__ || G__18403.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__18404 = coll;
      if (G__18404) {
        var bit__4201__auto__ = G__18404.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4201__auto__ || G__18404.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__18405 = null;
    var G__18405__0 = function() {
      return f.call(null);
    };
    var G__18405__1 = function(x) {
      return x;
    };
    var G__18405__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__18405 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__18405__0.call(this);
        case 1:
          return G__18405__1.call(this, x);
        case 2:
          return G__18405__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18405.cljs$core$IFn$_invoke$arity$0 = G__18405__0;
    G__18405.cljs$core$IFn$_invoke$arity$1 = G__18405__1;
    G__18405.cljs$core$IFn$_invoke$arity$2 = G__18405__2;
    return G__18405;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__18406__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__18406 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18406__delegate.call(this, x, y, more);
    };
    G__18406.cljs$lang$maxFixedArity = 2;
    G__18406.cljs$lang$applyTo = function(arglist__18407) {
      var x = cljs.core.first(arglist__18407);
      arglist__18407 = cljs.core.next(arglist__18407);
      var y = cljs.core.first(arglist__18407);
      var more = cljs.core.rest(arglist__18407);
      return G__18406__delegate(x, y, more);
    };
    G__18406.cljs$core$IFn$_invoke$arity$variadic = G__18406__delegate;
    return G__18406;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__18408__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__18408 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18408__delegate.call(this, x, y, more);
    };
    G__18408.cljs$lang$maxFixedArity = 2;
    G__18408.cljs$lang$applyTo = function(arglist__18409) {
      var x = cljs.core.first(arglist__18409);
      arglist__18409 = cljs.core.next(arglist__18409);
      var y = cljs.core.first(arglist__18409);
      var more = cljs.core.rest(arglist__18409);
      return G__18408__delegate(x, y, more);
    };
    G__18408.cljs$core$IFn$_invoke$arity$variadic = G__18408__delegate;
    return G__18408;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__18410__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__18410 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18410__delegate.call(this, x, y, more);
    };
    G__18410.cljs$lang$maxFixedArity = 2;
    G__18410.cljs$lang$applyTo = function(arglist__18411) {
      var x = cljs.core.first(arglist__18411);
      arglist__18411 = cljs.core.next(arglist__18411);
      var y = cljs.core.first(arglist__18411);
      var more = cljs.core.rest(arglist__18411);
      return G__18410__delegate(x, y, more);
    };
    G__18410.cljs$core$IFn$_invoke$arity$variadic = G__18410__delegate;
    return G__18410;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__18412__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__18412 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18412__delegate.call(this, x, y, more);
    };
    G__18412.cljs$lang$maxFixedArity = 2;
    G__18412.cljs$lang$applyTo = function(arglist__18413) {
      var x = cljs.core.first(arglist__18413);
      arglist__18413 = cljs.core.next(arglist__18413);
      var y = cljs.core.first(arglist__18413);
      var more = cljs.core.rest(arglist__18413);
      return G__18412__delegate(x, y, more);
    };
    G__18412.cljs$core$IFn$_invoke$arity$variadic = G__18412__delegate;
    return G__18412;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__18414__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__18415 = y;
            var G__18416 = cljs.core.first.call(null, more);
            var G__18417 = cljs.core.next.call(null, more);
            x = G__18415;
            y = G__18416;
            more = G__18417;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18414 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18414__delegate.call(this, x, y, more);
    };
    G__18414.cljs$lang$maxFixedArity = 2;
    G__18414.cljs$lang$applyTo = function(arglist__18418) {
      var x = cljs.core.first(arglist__18418);
      arglist__18418 = cljs.core.next(arglist__18418);
      var y = cljs.core.first(arglist__18418);
      var more = cljs.core.rest(arglist__18418);
      return G__18414__delegate(x, y, more);
    };
    G__18414.cljs$core$IFn$_invoke$arity$variadic = G__18414__delegate;
    return G__18414;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__18419__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__18420 = y;
            var G__18421 = cljs.core.first.call(null, more);
            var G__18422 = cljs.core.next.call(null, more);
            x = G__18420;
            y = G__18421;
            more = G__18422;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18419 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18419__delegate.call(this, x, y, more);
    };
    G__18419.cljs$lang$maxFixedArity = 2;
    G__18419.cljs$lang$applyTo = function(arglist__18423) {
      var x = cljs.core.first(arglist__18423);
      arglist__18423 = cljs.core.next(arglist__18423);
      var y = cljs.core.first(arglist__18423);
      var more = cljs.core.rest(arglist__18423);
      return G__18419__delegate(x, y, more);
    };
    G__18419.cljs$core$IFn$_invoke$arity$variadic = G__18419__delegate;
    return G__18419;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__18424__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__18425 = y;
            var G__18426 = cljs.core.first.call(null, more);
            var G__18427 = cljs.core.next.call(null, more);
            x = G__18425;
            y = G__18426;
            more = G__18427;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18424 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18424__delegate.call(this, x, y, more);
    };
    G__18424.cljs$lang$maxFixedArity = 2;
    G__18424.cljs$lang$applyTo = function(arglist__18428) {
      var x = cljs.core.first(arglist__18428);
      arglist__18428 = cljs.core.next(arglist__18428);
      var y = cljs.core.first(arglist__18428);
      var more = cljs.core.rest(arglist__18428);
      return G__18424__delegate(x, y, more);
    };
    G__18424.cljs$core$IFn$_invoke$arity$variadic = G__18424__delegate;
    return G__18424;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__18429__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__18430 = y;
            var G__18431 = cljs.core.first.call(null, more);
            var G__18432 = cljs.core.next.call(null, more);
            x = G__18430;
            y = G__18431;
            more = G__18432;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18429 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18429__delegate.call(this, x, y, more);
    };
    G__18429.cljs$lang$maxFixedArity = 2;
    G__18429.cljs$lang$applyTo = function(arglist__18433) {
      var x = cljs.core.first(arglist__18433);
      arglist__18433 = cljs.core.next(arglist__18433);
      var y = cljs.core.first(arglist__18433);
      var more = cljs.core.rest(arglist__18433);
      return G__18429__delegate(x, y, more);
    };
    G__18429.cljs$core$IFn$_invoke$arity$variadic = G__18429__delegate;
    return G__18429;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3865__auto__ = x;
    var y__3866__auto__ = y;
    return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  };
  var max__3 = function() {
    var G__18434__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3865__auto__ = x;
        var y__3866__auto__ = y;
        return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
      }(), more);
    };
    var G__18434 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18434__delegate.call(this, x, y, more);
    };
    G__18434.cljs$lang$maxFixedArity = 2;
    G__18434.cljs$lang$applyTo = function(arglist__18435) {
      var x = cljs.core.first(arglist__18435);
      arglist__18435 = cljs.core.next(arglist__18435);
      var y = cljs.core.first(arglist__18435);
      var more = cljs.core.rest(arglist__18435);
      return G__18434__delegate(x, y, more);
    };
    G__18434.cljs$core$IFn$_invoke$arity$variadic = G__18434__delegate;
    return G__18434;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3872__auto__ = x;
    var y__3873__auto__ = y;
    return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
  };
  var min__3 = function() {
    var G__18436__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3872__auto__ = x;
        var y__3873__auto__ = y;
        return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
      }(), more);
    };
    var G__18436 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18436__delegate.call(this, x, y, more);
    };
    G__18436.cljs$lang$maxFixedArity = 2;
    G__18436.cljs$lang$applyTo = function(arglist__18437) {
      var x = cljs.core.first(arglist__18437);
      arglist__18437 = cljs.core.next(arglist__18437);
      var y = cljs.core.first(arglist__18437);
      var more = cljs.core.rest(arglist__18437);
      return G__18436__delegate(x, y, more);
    };
    G__18436.cljs$core$IFn$_invoke$arity$variadic = G__18436__delegate;
    return G__18436;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__18438__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__18438 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18438__delegate.call(this, x, y, more);
    };
    G__18438.cljs$lang$maxFixedArity = 2;
    G__18438.cljs$lang$applyTo = function(arglist__18439) {
      var x = cljs.core.first(arglist__18439);
      arglist__18439 = cljs.core.next(arglist__18439);
      var y = cljs.core.first(arglist__18439);
      var more = cljs.core.rest(arglist__18439);
      return G__18438__delegate(x, y, more);
    };
    G__18438.cljs$core$IFn$_invoke$arity$variadic = G__18438__delegate;
    return G__18438;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__18440__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__18440 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18440__delegate.call(this, x, y, more);
    };
    G__18440.cljs$lang$maxFixedArity = 2;
    G__18440.cljs$lang$applyTo = function(arglist__18441) {
      var x = cljs.core.first(arglist__18441);
      arglist__18441 = cljs.core.next(arglist__18441);
      var y = cljs.core.first(arglist__18441);
      var more = cljs.core.rest(arglist__18441);
      return G__18440__delegate(x, y, more);
    };
    G__18440.cljs$core$IFn$_invoke$arity$variadic = G__18440__delegate;
    return G__18440;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__18442__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__18442 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18442__delegate.call(this, x, y, more);
    };
    G__18442.cljs$lang$maxFixedArity = 2;
    G__18442.cljs$lang$applyTo = function(arglist__18443) {
      var x = cljs.core.first(arglist__18443);
      arglist__18443 = cljs.core.next(arglist__18443);
      var y = cljs.core.first(arglist__18443);
      var more = cljs.core.rest(arglist__18443);
      return G__18442__delegate(x, y, more);
    };
    G__18442.cljs$core$IFn$_invoke$arity$variadic = G__18442__delegate;
    return G__18442;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__18444__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__18444 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18444__delegate.call(this, x, y, more);
    };
    G__18444.cljs$lang$maxFixedArity = 2;
    G__18444.cljs$lang$applyTo = function(arglist__18445) {
      var x = cljs.core.first(arglist__18445);
      arglist__18445 = cljs.core.next(arglist__18445);
      var y = cljs.core.first(arglist__18445);
      var more = cljs.core.rest(arglist__18445);
      return G__18444__delegate(x, y, more);
    };
    G__18444.cljs$core$IFn$_invoke$arity$variadic = G__18444__delegate;
    return G__18444;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__18446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__18446 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18446__delegate.call(this, x, y, more);
    };
    G__18446.cljs$lang$maxFixedArity = 2;
    G__18446.cljs$lang$applyTo = function(arglist__18447) {
      var x = cljs.core.first(arglist__18447);
      arglist__18447 = cljs.core.next(arglist__18447);
      var y = cljs.core.first(arglist__18447);
      var more = cljs.core.rest(arglist__18447);
      return G__18446__delegate(x, y, more);
    };
    G__18446.cljs$core$IFn$_invoke$arity$variadic = G__18446__delegate;
    return G__18446;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__18448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__18448 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18448__delegate.call(this, x, y, more);
    };
    G__18448.cljs$lang$maxFixedArity = 2;
    G__18448.cljs$lang$applyTo = function(arglist__18449) {
      var x = cljs.core.first(arglist__18449);
      arglist__18449 = cljs.core.next(arglist__18449);
      var y = cljs.core.first(arglist__18449);
      var more = cljs.core.rest(arglist__18449);
      return G__18448__delegate(x, y, more);
    };
    G__18448.cljs$core$IFn$_invoke$arity$variadic = G__18448__delegate;
    return G__18448;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__18450__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__18450 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18450__delegate.call(this, x, y, more);
    };
    G__18450.cljs$lang$maxFixedArity = 2;
    G__18450.cljs$lang$applyTo = function(arglist__18451) {
      var x = cljs.core.first(arglist__18451);
      arglist__18451 = cljs.core.next(arglist__18451);
      var y = cljs.core.first(arglist__18451);
      var more = cljs.core.rest(arglist__18451);
      return G__18450__delegate(x, y, more);
    };
    G__18450.cljs$core$IFn$_invoke$arity$variadic = G__18450__delegate;
    return G__18450;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__18452__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__18453 = y;
            var G__18454 = cljs.core.first.call(null, more);
            var G__18455 = cljs.core.next.call(null, more);
            x = G__18453;
            y = G__18454;
            more = G__18455;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18452 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18452__delegate.call(this, x, y, more);
    };
    G__18452.cljs$lang$maxFixedArity = 2;
    G__18452.cljs$lang$applyTo = function(arglist__18456) {
      var x = cljs.core.first(arglist__18456);
      arglist__18456 = cljs.core.next(arglist__18456);
      var y = cljs.core.first(arglist__18456);
      var more = cljs.core.rest(arglist__18456);
      return G__18452__delegate(x, y, more);
    };
    G__18452.cljs$core$IFn$_invoke$arity$variadic = G__18452__delegate;
    return G__18452;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__18457 = n__$1 - 1;
      var G__18458 = cljs.core.next.call(null, xs);
      n__$1 = G__18457;
      xs = G__18458;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__18459__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__18460 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__18461 = cljs.core.next.call(null, more);
          sb = G__18460;
          more = G__18461;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__18459 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__18459__delegate.call(this, x, ys);
    };
    G__18459.cljs$lang$maxFixedArity = 1;
    G__18459.cljs$lang$applyTo = function(arglist__18462) {
      var x = cljs.core.first(arglist__18462);
      var ys = cljs.core.rest(arglist__18462);
      return G__18459__delegate(x, ys);
    };
    G__18459.cljs$core$IFn$_invoke$arity$variadic = G__18459__delegate;
    return G__18459;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__18463 = cljs.core.next.call(null, xs);
            var G__18464 = cljs.core.next.call(null, ys);
            xs = G__18463;
            ys = G__18464;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__18465 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__18466 = cljs.core.next.call(null, s);
        res = G__18465;
        s = G__18466;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__18467 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__18468 = cljs.core.next.call(null, s);
      h = G__18467;
      s = G__18468;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__18469 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__18470 = cljs.core.next.call(null, s__$1);
      h = G__18469;
      s__$1 = G__18470;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__18477_18483 = cljs.core.seq.call(null, fn_map);
  var chunk__18478_18484 = null;
  var count__18479_18485 = 0;
  var i__18480_18486 = 0;
  while (true) {
    if (i__18480_18486 < count__18479_18485) {
      var vec__18481_18487 = cljs.core._nth.call(null, chunk__18478_18484, i__18480_18486);
      var key_name_18488 = cljs.core.nth.call(null, vec__18481_18487, 0, null);
      var f_18489 = cljs.core.nth.call(null, vec__18481_18487, 1, null);
      var str_name_18490 = cljs.core.name.call(null, key_name_18488);
      obj[str_name_18490] = f_18489;
      var G__18491 = seq__18477_18483;
      var G__18492 = chunk__18478_18484;
      var G__18493 = count__18479_18485;
      var G__18494 = i__18480_18486 + 1;
      seq__18477_18483 = G__18491;
      chunk__18478_18484 = G__18492;
      count__18479_18485 = G__18493;
      i__18480_18486 = G__18494;
      continue;
    } else {
      var temp__4126__auto___18495 = cljs.core.seq.call(null, seq__18477_18483);
      if (temp__4126__auto___18495) {
        var seq__18477_18496__$1 = temp__4126__auto___18495;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18477_18496__$1)) {
          var c__4314__auto___18497 = cljs.core.chunk_first.call(null, seq__18477_18496__$1);
          var G__18498 = cljs.core.chunk_rest.call(null, seq__18477_18496__$1);
          var G__18499 = c__4314__auto___18497;
          var G__18500 = cljs.core.count.call(null, c__4314__auto___18497);
          var G__18501 = 0;
          seq__18477_18483 = G__18498;
          chunk__18478_18484 = G__18499;
          count__18479_18485 = G__18500;
          i__18480_18486 = G__18501;
          continue;
        } else {
          var vec__18482_18502 = cljs.core.first.call(null, seq__18477_18496__$1);
          var key_name_18503 = cljs.core.nth.call(null, vec__18482_18502, 0, null);
          var f_18504 = cljs.core.nth.call(null, vec__18482_18502, 1, null);
          var str_name_18505 = cljs.core.name.call(null, key_name_18503);
          obj[str_name_18505] = f_18504;
          var G__18506 = cljs.core.next.call(null, seq__18477_18496__$1);
          var G__18507 = null;
          var G__18508 = 0;
          var G__18509 = 0;
          seq__18477_18483 = G__18506;
          chunk__18478_18484 = G__18507;
          count__18479_18485 = G__18508;
          i__18480_18486 = G__18509;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__18511 = coll;
  if (G__18511) {
    var bit__4208__auto__ = G__18511.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4208__auto__ || G__18511.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__18511.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__18511);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__18511);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__18512 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__18512;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__18513 = i - 1;
        var G__18514 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__18513;
        r = G__18514;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__18515) {
    var xs = cljs.core.seq(arglist__18515);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3558__auto__ = coll == null;
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var G__18519 = coll;
      if (G__18519) {
        var bit__4201__auto__ = G__18519.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__18519.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__18521 = x;
  if (G__18521) {
    var bit__4208__auto__ = G__18521.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4208__auto__ || G__18521.cljs$core$IList$) {
      return true;
    } else {
      if (!G__18521.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__18521);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__18521);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3969__auto__ = self__._hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__18523 = null;
  var G__18523__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__18523__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__18523 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18523__2.call(this, self__, coll);
      case 3:
        return G__18523__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18523.cljs$core$IFn$_invoke$arity$2 = G__18523__2;
  G__18523.cljs$core$IFn$_invoke$arity$3 = G__18523__3;
  return G__18523;
}();
cljs.core.Keyword.prototype.apply = function(self__, args18522) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18522)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__18525 = x;
    if (G__18525) {
      var bit__4201__auto__ = G__18525.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4201__auto__ || G__18525.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__18526 = ls.sval();
        ls = G__18526;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__18528 = s;
    if (G__18528) {
      var bit__4201__auto__ = G__18528.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4201__auto__ || G__18528.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__18529 = cljs.core.next.call(null, s__$1);
      s__$1 = G__18529;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_18530 = 0;
  var xs_18531 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_18531) {
      ret[i_18530] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_18531));
      var G__18532 = i_18530 + 1;
      var G__18533 = cljs.core.next.call(null, xs_18531);
      i_18530 = G__18532;
      xs_18531 = G__18533;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18534 = i + 1;
          var G__18535 = cljs.core.next.call(null, s__$1);
          i = G__18534;
          s__$1 = G__18535;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___18536 = size;
      var i_18537 = 0;
      while (true) {
        if (i_18537 < n__4414__auto___18536) {
          a[i_18537] = init_val_or_seq;
          var G__18538 = i_18537 + 1;
          i_18537 = G__18538;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18539 = i + 1;
          var G__18540 = cljs.core.next.call(null, s__$1);
          i = G__18539;
          s__$1 = G__18540;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___18541 = size;
      var i_18542 = 0;
      while (true) {
        if (i_18542 < n__4414__auto___18541) {
          a[i_18542] = init_val_or_seq;
          var G__18543 = i_18542 + 1;
          i_18542 = G__18543;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18544 = i + 1;
          var G__18545 = cljs.core.next.call(null, s__$1);
          i = G__18544;
          s__$1 = G__18545;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___18546 = size;
      var i_18547 = 0;
      while (true) {
        if (i_18547 < n__4414__auto___18546) {
          a[i_18547] = init_val_or_seq;
          var G__18548 = i_18547 + 1;
          i_18547 = G__18548;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__18549 = i + 1;
          var G__18550 = cljs.core.next.call(null, s__$1);
          i = G__18549;
          s__$1 = G__18550;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___18551 = size;
      var i_18552 = 0;
      while (true) {
        if (i_18552 < n__4414__auto___18551) {
          a[i_18552] = init_val_or_seq;
          var G__18553 = i_18552 + 1;
          i_18552 = G__18553;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__18554 = cljs.core.next.call(null, s__$1);
        var G__18555 = i - 1;
        var G__18556 = sum + 1;
        s__$1 = G__18554;
        i = G__18555;
        sum = G__18556;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__18557__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__18557 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18557__delegate.call(this, x, y, zs);
    };
    G__18557.cljs$lang$maxFixedArity = 2;
    G__18557.cljs$lang$applyTo = function(arglist__18558) {
      var x = cljs.core.first(arglist__18558);
      arglist__18558 = cljs.core.next(arglist__18558);
      var y = cljs.core.first(arglist__18558);
      var zs = cljs.core.rest(arglist__18558);
      return G__18557__delegate(x, y, zs);
    };
    G__18557.cljs$core$IFn$_invoke$arity$variadic = G__18557__delegate;
    return G__18557;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__18559__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__18559 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18559__delegate.call(this, a, b, c, d, more);
    };
    G__18559.cljs$lang$maxFixedArity = 4;
    G__18559.cljs$lang$applyTo = function(arglist__18560) {
      var a = cljs.core.first(arglist__18560);
      arglist__18560 = cljs.core.next(arglist__18560);
      var b = cljs.core.first(arglist__18560);
      arglist__18560 = cljs.core.next(arglist__18560);
      var c = cljs.core.first(arglist__18560);
      arglist__18560 = cljs.core.next(arglist__18560);
      var d = cljs.core.first(arglist__18560);
      var more = cljs.core.rest(arglist__18560);
      return G__18559__delegate(a, b, c, d, more);
    };
    G__18559.cljs$core$IFn$_invoke$arity$variadic = G__18559__delegate;
    return G__18559;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__18561__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__18562 = ntcoll;
          var G__18563 = cljs.core.first.call(null, vals);
          var G__18564 = cljs.core.next.call(null, vals);
          tcoll = G__18562;
          val = G__18563;
          vals = G__18564;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18561 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18561__delegate.call(this, tcoll, val, vals);
    };
    G__18561.cljs$lang$maxFixedArity = 2;
    G__18561.cljs$lang$applyTo = function(arglist__18565) {
      var tcoll = cljs.core.first(arglist__18565);
      arglist__18565 = cljs.core.next(arglist__18565);
      var val = cljs.core.first(arglist__18565);
      var vals = cljs.core.rest(arglist__18565);
      return G__18561__delegate(tcoll, val, vals);
    };
    G__18561.cljs$core$IFn$_invoke$arity$variadic = G__18561__delegate;
    return G__18561;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__18566__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__18567 = ntcoll;
          var G__18568 = cljs.core.first.call(null, kvs);
          var G__18569 = cljs.core.second.call(null, kvs);
          var G__18570 = cljs.core.nnext.call(null, kvs);
          tcoll = G__18567;
          key = G__18568;
          val = G__18569;
          kvs = G__18570;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18566 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18566__delegate.call(this, tcoll, key, val, kvs);
    };
    G__18566.cljs$lang$maxFixedArity = 3;
    G__18566.cljs$lang$applyTo = function(arglist__18571) {
      var tcoll = cljs.core.first(arglist__18571);
      arglist__18571 = cljs.core.next(arglist__18571);
      var key = cljs.core.first(arglist__18571);
      arglist__18571 = cljs.core.next(arglist__18571);
      var val = cljs.core.first(arglist__18571);
      var kvs = cljs.core.rest(arglist__18571);
      return G__18566__delegate(tcoll, key, val, kvs);
    };
    G__18566.cljs$core$IFn$_invoke$arity$variadic = G__18566__delegate;
    return G__18566;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__18572__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__18573 = ntcoll;
          var G__18574 = cljs.core.first.call(null, ks);
          var G__18575 = cljs.core.next.call(null, ks);
          tcoll = G__18573;
          key = G__18574;
          ks = G__18575;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18572 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18572__delegate.call(this, tcoll, key, ks);
    };
    G__18572.cljs$lang$maxFixedArity = 2;
    G__18572.cljs$lang$applyTo = function(arglist__18576) {
      var tcoll = cljs.core.first(arglist__18576);
      arglist__18576 = cljs.core.next(arglist__18576);
      var key = cljs.core.first(arglist__18576);
      var ks = cljs.core.rest(arglist__18576);
      return G__18572__delegate(tcoll, key, ks);
    };
    G__18572.cljs$core$IFn$_invoke$arity$variadic = G__18572__delegate;
    return G__18572;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__18577__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__18578 = ntcoll;
          var G__18579 = cljs.core.first.call(null, vals);
          var G__18580 = cljs.core.next.call(null, vals);
          tcoll = G__18578;
          val = G__18579;
          vals = G__18580;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__18577 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18577__delegate.call(this, tcoll, val, vals);
    };
    G__18577.cljs$lang$maxFixedArity = 2;
    G__18577.cljs$lang$applyTo = function(arglist__18581) {
      var tcoll = cljs.core.first(arglist__18581);
      arglist__18581 = cljs.core.next(arglist__18581);
      var val = cljs.core.first(arglist__18581);
      var vals = cljs.core.rest(arglist__18581);
      return G__18577__delegate(tcoll, val, vals);
    };
    G__18577.cljs$core$IFn$_invoke$arity$variadic = G__18577__delegate;
    return G__18577;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4458 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4458);
      } else {
        return f.call(null, a4458);
      }
    } else {
      var b4459 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4458, b4459);
        } else {
          return f.call(null, a4458, b4459);
        }
      } else {
        var c4460 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4458, b4459, c4460);
          } else {
            return f.call(null, a4458, b4459, c4460);
          }
        } else {
          var d4461 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4458, b4459, c4460, d4461);
            } else {
              return f.call(null, a4458, b4459, c4460, d4461);
            }
          } else {
            var e4462 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4458, b4459, c4460, d4461, e4462);
              } else {
                return f.call(null, a4458, b4459, c4460, d4461, e4462);
              }
            } else {
              var f4463 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4458, b4459, c4460, d4461, e4462, f4463);
                } else {
                  return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463);
                }
              } else {
                var g4464 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4458, b4459, c4460, d4461, e4462, f4463, g4464);
                  } else {
                    return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464);
                  }
                } else {
                  var h4465 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465);
                    } else {
                      return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465);
                    }
                  } else {
                    var i4466 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466);
                      } else {
                        return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466);
                      }
                    } else {
                      var j4467 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467);
                        } else {
                          return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467);
                        }
                      } else {
                        var k4468 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468);
                          } else {
                            return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468);
                          }
                        } else {
                          var l4469 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469);
                            } else {
                              return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469);
                            }
                          } else {
                            var m4470 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470);
                              } else {
                                return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470);
                              }
                            } else {
                              var n4471 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471);
                                } else {
                                  return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471);
                                }
                              } else {
                                var o4472 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472);
                                  } else {
                                    return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472);
                                  }
                                } else {
                                  var p4473 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473);
                                    } else {
                                      return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473);
                                    }
                                  } else {
                                    var q4474 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474);
                                      } else {
                                        return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474);
                                      }
                                    } else {
                                      var r4475 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475);
                                        } else {
                                          return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475);
                                        }
                                      } else {
                                        var s4476 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476);
                                          } else {
                                            return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476);
                                          }
                                        } else {
                                          var t4477 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476, t4477);
                                            } else {
                                              return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476, t4477);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__18582__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__18582 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__18582__delegate.call(this, f, a, b, c, d, args);
    };
    G__18582.cljs$lang$maxFixedArity = 5;
    G__18582.cljs$lang$applyTo = function(arglist__18583) {
      var f = cljs.core.first(arglist__18583);
      arglist__18583 = cljs.core.next(arglist__18583);
      var a = cljs.core.first(arglist__18583);
      arglist__18583 = cljs.core.next(arglist__18583);
      var b = cljs.core.first(arglist__18583);
      arglist__18583 = cljs.core.next(arglist__18583);
      var c = cljs.core.first(arglist__18583);
      arglist__18583 = cljs.core.next(arglist__18583);
      var d = cljs.core.first(arglist__18583);
      var args = cljs.core.rest(arglist__18583);
      return G__18582__delegate(f, a, b, c, d, args);
    };
    G__18582.cljs$core$IFn$_invoke$arity$variadic = G__18582__delegate;
    return G__18582;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__18584__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__18584 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__18584__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__18584.cljs$lang$maxFixedArity = 6;
    G__18584.cljs$lang$applyTo = function(arglist__18585) {
      var obj = cljs.core.first(arglist__18585);
      arglist__18585 = cljs.core.next(arglist__18585);
      var f = cljs.core.first(arglist__18585);
      arglist__18585 = cljs.core.next(arglist__18585);
      var a = cljs.core.first(arglist__18585);
      arglist__18585 = cljs.core.next(arglist__18585);
      var b = cljs.core.first(arglist__18585);
      arglist__18585 = cljs.core.next(arglist__18585);
      var c = cljs.core.first(arglist__18585);
      arglist__18585 = cljs.core.next(arglist__18585);
      var d = cljs.core.first(arglist__18585);
      var args = cljs.core.rest(arglist__18585);
      return G__18584__delegate(obj, f, a, b, c, d, args);
    };
    G__18584.cljs$core$IFn$_invoke$arity$variadic = G__18584__delegate;
    return G__18584;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__18586__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__18586 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18586__delegate.call(this, x, y, more);
    };
    G__18586.cljs$lang$maxFixedArity = 2;
    G__18586.cljs$lang$applyTo = function(arglist__18587) {
      var x = cljs.core.first(arglist__18587);
      arglist__18587 = cljs.core.next(arglist__18587);
      var y = cljs.core.first(arglist__18587);
      var more = cljs.core.rest(arglist__18587);
      return G__18586__delegate(x, y, more);
    };
    G__18586.cljs$core$IFn$_invoke$arity$variadic = G__18586__delegate;
    return G__18586;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t18591 !== "undefined") {
  } else {
    cljs.core.t18591 = function(nil_iter, meta18592) {
      this.nil_iter = nil_iter;
      this.meta18592 = meta18592;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t18591.cljs$lang$type = true;
    cljs.core.t18591.cljs$lang$ctorStr = "cljs.core/t18591";
    cljs.core.t18591.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/t18591");
    };
    cljs.core.t18591.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t18591.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t18591.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t18591.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18593) {
      var self__ = this;
      var _18593__$1 = this;
      return self__.meta18592;
    };
    cljs.core.t18591.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18593, meta18592__$1) {
      var self__ = this;
      var _18593__$1 = this;
      return new cljs.core.t18591(self__.nil_iter, meta18592__$1);
    };
    cljs.core.__GT_t18591 = function __GT_t18591(nil_iter__$1, meta18592) {
      return new cljs.core.t18591(nil_iter__$1, meta18592);
    };
  }
  return new cljs.core.t18591(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = !(lt.stepper == null);
      if (and__3546__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__18594 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__18594;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4414__auto___18595 = self__.iters.length;
  var i_18596 = 0;
  while (true) {
    if (i_18596 < n__4414__auto___18595) {
      self__.nexts[i_18596] = self__.iters[i_18596].next();
      var G__18597 = i_18596 + 1;
      i_18596 = G__18597;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = !(lt.stepper == null);
      if (and__3546__auto__) {
        return this$.hasNext();
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18598_18602 = cljs.core.seq.call(null, colls);
  var chunk__18599_18603 = null;
  var count__18600_18604 = 0;
  var i__18601_18605 = 0;
  while (true) {
    if (i__18601_18605 < count__18600_18604) {
      var coll_18606 = cljs.core._nth.call(null, chunk__18599_18603, i__18601_18605);
      iters.push(cljs.core.iter.call(null, coll_18606));
      var G__18607 = seq__18598_18602;
      var G__18608 = chunk__18599_18603;
      var G__18609 = count__18600_18604;
      var G__18610 = i__18601_18605 + 1;
      seq__18598_18602 = G__18607;
      chunk__18599_18603 = G__18608;
      count__18600_18604 = G__18609;
      i__18601_18605 = G__18610;
      continue;
    } else {
      var temp__4126__auto___18611 = cljs.core.seq.call(null, seq__18598_18602);
      if (temp__4126__auto___18611) {
        var seq__18598_18612__$1 = temp__4126__auto___18611;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18598_18612__$1)) {
          var c__4314__auto___18613 = cljs.core.chunk_first.call(null, seq__18598_18612__$1);
          var G__18614 = cljs.core.chunk_rest.call(null, seq__18598_18612__$1);
          var G__18615 = c__4314__auto___18613;
          var G__18616 = cljs.core.count.call(null, c__4314__auto___18613);
          var G__18617 = 0;
          seq__18598_18602 = G__18614;
          chunk__18599_18603 = G__18615;
          count__18600_18604 = G__18616;
          i__18601_18605 = G__18617;
          continue;
        } else {
          var coll_18618 = cljs.core.first.call(null, seq__18598_18612__$1);
          iters.push(cljs.core.iter.call(null, coll_18618));
          var G__18619 = cljs.core.next.call(null, seq__18598_18612__$1);
          var G__18620 = null;
          var G__18621 = 0;
          var G__18622 = 0;
          seq__18598_18602 = G__18619;
          chunk__18599_18603 = G__18620;
          count__18600_18604 = G__18621;
          i__18601_18605 = G__18622;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3558__auto__ = cljs.core.seq.call(null, coll);
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__18623__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__18623 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18623__delegate.call(this, xform, coll, colls);
    };
    G__18623.cljs$lang$maxFixedArity = 2;
    G__18623.cljs$lang$applyTo = function(arglist__18624) {
      var xform = cljs.core.first(arglist__18624);
      arglist__18624 = cljs.core.next(arglist__18624);
      var coll = cljs.core.first(arglist__18624);
      var colls = cljs.core.rest(arglist__18624);
      return G__18623__delegate(xform, coll, colls);
    };
    G__18623.cljs$core$IFn$_invoke$arity$variadic = G__18623__delegate;
    return G__18623;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__18625 = pred;
        var G__18626 = cljs.core.next.call(null, coll);
        pred = G__18625;
        coll = G__18626;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3558__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        var G__18627 = pred;
        var G__18628 = cljs.core.next.call(null, coll);
        pred = G__18627;
        coll = G__18628;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__18629 = null;
    var G__18629__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__18629__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__18629__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__18629__3 = function() {
      var G__18630__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__18630 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__18630__delegate.call(this, x, y, zs);
      };
      G__18630.cljs$lang$maxFixedArity = 2;
      G__18630.cljs$lang$applyTo = function(arglist__18631) {
        var x = cljs.core.first(arglist__18631);
        arglist__18631 = cljs.core.next(arglist__18631);
        var y = cljs.core.first(arglist__18631);
        var zs = cljs.core.rest(arglist__18631);
        return G__18630__delegate(x, y, zs);
      };
      G__18630.cljs$core$IFn$_invoke$arity$variadic = G__18630__delegate;
      return G__18630;
    }();
    G__18629 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18629__0.call(this);
        case 1:
          return G__18629__1.call(this, x);
        case 2:
          return G__18629__2.call(this, x, y);
        default:
          return G__18629__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18629.cljs$lang$maxFixedArity = 2;
    G__18629.cljs$lang$applyTo = G__18629__3.cljs$lang$applyTo;
    G__18629.cljs$core$IFn$_invoke$arity$0 = G__18629__0;
    G__18629.cljs$core$IFn$_invoke$arity$1 = G__18629__1;
    G__18629.cljs$core$IFn$_invoke$arity$2 = G__18629__2;
    G__18629.cljs$core$IFn$_invoke$arity$variadic = G__18629__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18629;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__18632__delegate = function(args) {
      return x;
    };
    var G__18632 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18632__delegate.call(this, args);
    };
    G__18632.cljs$lang$maxFixedArity = 0;
    G__18632.cljs$lang$applyTo = function(arglist__18633) {
      var args = cljs.core.seq(arglist__18633);
      return G__18632__delegate(args);
    };
    G__18632.cljs$core$IFn$_invoke$arity$variadic = G__18632__delegate;
    return G__18632;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__18634 = null;
      var G__18634__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__18634__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__18634__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__18634__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__18634__4 = function() {
        var G__18635__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__18635 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18635__delegate.call(this, x, y, z, args);
        };
        G__18635.cljs$lang$maxFixedArity = 3;
        G__18635.cljs$lang$applyTo = function(arglist__18636) {
          var x = cljs.core.first(arglist__18636);
          arglist__18636 = cljs.core.next(arglist__18636);
          var y = cljs.core.first(arglist__18636);
          arglist__18636 = cljs.core.next(arglist__18636);
          var z = cljs.core.first(arglist__18636);
          var args = cljs.core.rest(arglist__18636);
          return G__18635__delegate(x, y, z, args);
        };
        G__18635.cljs$core$IFn$_invoke$arity$variadic = G__18635__delegate;
        return G__18635;
      }();
      G__18634 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18634__0.call(this);
          case 1:
            return G__18634__1.call(this, x);
          case 2:
            return G__18634__2.call(this, x, y);
          case 3:
            return G__18634__3.call(this, x, y, z);
          default:
            return G__18634__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18634.cljs$lang$maxFixedArity = 3;
      G__18634.cljs$lang$applyTo = G__18634__4.cljs$lang$applyTo;
      G__18634.cljs$core$IFn$_invoke$arity$0 = G__18634__0;
      G__18634.cljs$core$IFn$_invoke$arity$1 = G__18634__1;
      G__18634.cljs$core$IFn$_invoke$arity$2 = G__18634__2;
      G__18634.cljs$core$IFn$_invoke$arity$3 = G__18634__3;
      G__18634.cljs$core$IFn$_invoke$arity$variadic = G__18634__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18634;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__18637 = null;
      var G__18637__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__18637__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__18637__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__18637__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__18637__4 = function() {
        var G__18638__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__18638 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18638__delegate.call(this, x, y, z, args);
        };
        G__18638.cljs$lang$maxFixedArity = 3;
        G__18638.cljs$lang$applyTo = function(arglist__18639) {
          var x = cljs.core.first(arglist__18639);
          arglist__18639 = cljs.core.next(arglist__18639);
          var y = cljs.core.first(arglist__18639);
          arglist__18639 = cljs.core.next(arglist__18639);
          var z = cljs.core.first(arglist__18639);
          var args = cljs.core.rest(arglist__18639);
          return G__18638__delegate(x, y, z, args);
        };
        G__18638.cljs$core$IFn$_invoke$arity$variadic = G__18638__delegate;
        return G__18638;
      }();
      G__18637 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18637__0.call(this);
          case 1:
            return G__18637__1.call(this, x);
          case 2:
            return G__18637__2.call(this, x, y);
          case 3:
            return G__18637__3.call(this, x, y, z);
          default:
            return G__18637__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18637.cljs$lang$maxFixedArity = 3;
      G__18637.cljs$lang$applyTo = G__18637__4.cljs$lang$applyTo;
      G__18637.cljs$core$IFn$_invoke$arity$0 = G__18637__0;
      G__18637.cljs$core$IFn$_invoke$arity$1 = G__18637__1;
      G__18637.cljs$core$IFn$_invoke$arity$2 = G__18637__2;
      G__18637.cljs$core$IFn$_invoke$arity$3 = G__18637__3;
      G__18637.cljs$core$IFn$_invoke$arity$variadic = G__18637__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18637;
    }();
  };
  var comp__4 = function() {
    var G__18640__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__18641__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__18642 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__18643 = cljs.core.next.call(null, fs__$2);
                ret = G__18642;
                fs__$2 = G__18643;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__18641 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__18641__delegate.call(this, args);
          };
          G__18641.cljs$lang$maxFixedArity = 0;
          G__18641.cljs$lang$applyTo = function(arglist__18644) {
            var args = cljs.core.seq(arglist__18644);
            return G__18641__delegate(args);
          };
          G__18641.cljs$core$IFn$_invoke$arity$variadic = G__18641__delegate;
          return G__18641;
        }();
      }(fs__$1);
    };
    var G__18640 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18640__delegate.call(this, f1, f2, f3, fs);
    };
    G__18640.cljs$lang$maxFixedArity = 3;
    G__18640.cljs$lang$applyTo = function(arglist__18645) {
      var f1 = cljs.core.first(arglist__18645);
      arglist__18645 = cljs.core.next(arglist__18645);
      var f2 = cljs.core.first(arglist__18645);
      arglist__18645 = cljs.core.next(arglist__18645);
      var f3 = cljs.core.first(arglist__18645);
      var fs = cljs.core.rest(arglist__18645);
      return G__18640__delegate(f1, f2, f3, fs);
    };
    G__18640.cljs$core$IFn$_invoke$arity$variadic = G__18640__delegate;
    return G__18640;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__18646__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__18646 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18646__delegate.call(this, args);
      };
      G__18646.cljs$lang$maxFixedArity = 0;
      G__18646.cljs$lang$applyTo = function(arglist__18647) {
        var args = cljs.core.seq(arglist__18647);
        return G__18646__delegate(args);
      };
      G__18646.cljs$core$IFn$_invoke$arity$variadic = G__18646__delegate;
      return G__18646;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__18648__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__18648 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18648__delegate.call(this, args);
      };
      G__18648.cljs$lang$maxFixedArity = 0;
      G__18648.cljs$lang$applyTo = function(arglist__18649) {
        var args = cljs.core.seq(arglist__18649);
        return G__18648__delegate(args);
      };
      G__18648.cljs$core$IFn$_invoke$arity$variadic = G__18648__delegate;
      return G__18648;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__18650__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__18650 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18650__delegate.call(this, args);
      };
      G__18650.cljs$lang$maxFixedArity = 0;
      G__18650.cljs$lang$applyTo = function(arglist__18651) {
        var args = cljs.core.seq(arglist__18651);
        return G__18650__delegate(args);
      };
      G__18650.cljs$core$IFn$_invoke$arity$variadic = G__18650__delegate;
      return G__18650;
    }();
  };
  var partial__5 = function() {
    var G__18652__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__18653__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__18653 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__18653__delegate.call(this, args);
        };
        G__18653.cljs$lang$maxFixedArity = 0;
        G__18653.cljs$lang$applyTo = function(arglist__18654) {
          var args = cljs.core.seq(arglist__18654);
          return G__18653__delegate(args);
        };
        G__18653.cljs$core$IFn$_invoke$arity$variadic = G__18653__delegate;
        return G__18653;
      }();
    };
    var G__18652 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18652__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__18652.cljs$lang$maxFixedArity = 4;
    G__18652.cljs$lang$applyTo = function(arglist__18655) {
      var f = cljs.core.first(arglist__18655);
      arglist__18655 = cljs.core.next(arglist__18655);
      var arg1 = cljs.core.first(arglist__18655);
      arglist__18655 = cljs.core.next(arglist__18655);
      var arg2 = cljs.core.first(arglist__18655);
      arglist__18655 = cljs.core.next(arglist__18655);
      var arg3 = cljs.core.first(arglist__18655);
      var more = cljs.core.rest(arglist__18655);
      return G__18652__delegate(f, arg1, arg2, arg3, more);
    };
    G__18652.cljs$core$IFn$_invoke$arity$variadic = G__18652__delegate;
    return G__18652;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__18656 = null;
      var G__18656__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__18656__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__18656__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__18656__4 = function() {
        var G__18657__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__18657 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18657__delegate.call(this, a, b, c, ds);
        };
        G__18657.cljs$lang$maxFixedArity = 3;
        G__18657.cljs$lang$applyTo = function(arglist__18658) {
          var a = cljs.core.first(arglist__18658);
          arglist__18658 = cljs.core.next(arglist__18658);
          var b = cljs.core.first(arglist__18658);
          arglist__18658 = cljs.core.next(arglist__18658);
          var c = cljs.core.first(arglist__18658);
          var ds = cljs.core.rest(arglist__18658);
          return G__18657__delegate(a, b, c, ds);
        };
        G__18657.cljs$core$IFn$_invoke$arity$variadic = G__18657__delegate;
        return G__18657;
      }();
      G__18656 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__18656__1.call(this, a);
          case 2:
            return G__18656__2.call(this, a, b);
          case 3:
            return G__18656__3.call(this, a, b, c);
          default:
            return G__18656__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18656.cljs$lang$maxFixedArity = 3;
      G__18656.cljs$lang$applyTo = G__18656__4.cljs$lang$applyTo;
      G__18656.cljs$core$IFn$_invoke$arity$1 = G__18656__1;
      G__18656.cljs$core$IFn$_invoke$arity$2 = G__18656__2;
      G__18656.cljs$core$IFn$_invoke$arity$3 = G__18656__3;
      G__18656.cljs$core$IFn$_invoke$arity$variadic = G__18656__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18656;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__18659 = null;
      var G__18659__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__18659__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__18659__4 = function() {
        var G__18660__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__18660 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18660__delegate.call(this, a, b, c, ds);
        };
        G__18660.cljs$lang$maxFixedArity = 3;
        G__18660.cljs$lang$applyTo = function(arglist__18661) {
          var a = cljs.core.first(arglist__18661);
          arglist__18661 = cljs.core.next(arglist__18661);
          var b = cljs.core.first(arglist__18661);
          arglist__18661 = cljs.core.next(arglist__18661);
          var c = cljs.core.first(arglist__18661);
          var ds = cljs.core.rest(arglist__18661);
          return G__18660__delegate(a, b, c, ds);
        };
        G__18660.cljs$core$IFn$_invoke$arity$variadic = G__18660__delegate;
        return G__18660;
      }();
      G__18659 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18659__2.call(this, a, b);
          case 3:
            return G__18659__3.call(this, a, b, c);
          default:
            return G__18659__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18659.cljs$lang$maxFixedArity = 3;
      G__18659.cljs$lang$applyTo = G__18659__4.cljs$lang$applyTo;
      G__18659.cljs$core$IFn$_invoke$arity$2 = G__18659__2;
      G__18659.cljs$core$IFn$_invoke$arity$3 = G__18659__3;
      G__18659.cljs$core$IFn$_invoke$arity$variadic = G__18659__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18659;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__18662 = null;
      var G__18662__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__18662__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__18662__4 = function() {
        var G__18663__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__18663 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18663__delegate.call(this, a, b, c, ds);
        };
        G__18663.cljs$lang$maxFixedArity = 3;
        G__18663.cljs$lang$applyTo = function(arglist__18664) {
          var a = cljs.core.first(arglist__18664);
          arglist__18664 = cljs.core.next(arglist__18664);
          var b = cljs.core.first(arglist__18664);
          arglist__18664 = cljs.core.next(arglist__18664);
          var c = cljs.core.first(arglist__18664);
          var ds = cljs.core.rest(arglist__18664);
          return G__18663__delegate(a, b, c, ds);
        };
        G__18663.cljs$core$IFn$_invoke$arity$variadic = G__18663__delegate;
        return G__18663;
      }();
      G__18662 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18662__2.call(this, a, b);
          case 3:
            return G__18662__3.call(this, a, b, c);
          default:
            return G__18662__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18662.cljs$lang$maxFixedArity = 3;
      G__18662.cljs$lang$applyTo = G__18662__4.cljs$lang$applyTo;
      G__18662.cljs$core$IFn$_invoke$arity$2 = G__18662__2;
      G__18662.cljs$core$IFn$_invoke$arity$3 = G__18662__3;
      G__18662.cljs$core$IFn$_invoke$arity$variadic = G__18662__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18662;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___18665 = size;
          var i_18666 = 0;
          while (true) {
            if (i_18666 < n__4414__auto___18665) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_18666, cljs.core._nth.call(null, c, i_18666)));
              var G__18667 = i_18666 + 1;
              i_18666 = G__18667;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__18668 = null;
        var G__18668__0 = function() {
          return f1.call(null);
        };
        var G__18668__1 = function(result) {
          return f1.call(null, result);
        };
        var G__18668__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__18668 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18668__0.call(this);
            case 1:
              return G__18668__1.call(this, result);
            case 2:
              return G__18668__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18668.cljs$core$IFn$_invoke$arity$0 = G__18668__0;
        G__18668.cljs$core$IFn$_invoke$arity$1 = G__18668__1;
        G__18668.cljs$core$IFn$_invoke$arity$2 = G__18668__2;
        return G__18668;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___18669 = size;
          var i_18670 = 0;
          while (true) {
            if (i_18670 < n__4414__auto___18669) {
              var x_18671 = f.call(null, cljs.core._nth.call(null, c, i_18670));
              if (x_18671 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_18671);
              }
              var G__18672 = i_18670 + 1;
              i_18670 = G__18672;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18673 = cljs.core.seq.call(null, self__.watches);
  var chunk__18674 = null;
  var count__18675 = 0;
  var i__18676 = 0;
  while (true) {
    if (i__18676 < count__18675) {
      var vec__18677 = cljs.core._nth.call(null, chunk__18674, i__18676);
      var key = cljs.core.nth.call(null, vec__18677, 0, null);
      var f = cljs.core.nth.call(null, vec__18677, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__18679 = seq__18673;
      var G__18680 = chunk__18674;
      var G__18681 = count__18675;
      var G__18682 = i__18676 + 1;
      seq__18673 = G__18679;
      chunk__18674 = G__18680;
      count__18675 = G__18681;
      i__18676 = G__18682;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18673);
      if (temp__4126__auto__) {
        var seq__18673__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18673__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__18673__$1);
          var G__18683 = cljs.core.chunk_rest.call(null, seq__18673__$1);
          var G__18684 = c__4314__auto__;
          var G__18685 = cljs.core.count.call(null, c__4314__auto__);
          var G__18686 = 0;
          seq__18673 = G__18683;
          chunk__18674 = G__18684;
          count__18675 = G__18685;
          i__18676 = G__18686;
          continue;
        } else {
          var vec__18678 = cljs.core.first.call(null, seq__18673__$1);
          var key = cljs.core.nth.call(null, vec__18678, 0, null);
          var f = cljs.core.nth.call(null, vec__18678, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__18687 = cljs.core.next.call(null, seq__18673__$1);
          var G__18688 = null;
          var G__18689 = 0;
          var G__18690 = 0;
          seq__18673 = G__18687;
          chunk__18674 = G__18688;
          count__18675 = G__18689;
          i__18676 = G__18690;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__18694__delegate = function(x, p__18691) {
      var map__18693 = p__18691;
      var map__18693__$1 = cljs.core.seq_QMARK_.call(null, map__18693) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18693) : map__18693;
      var validator = cljs.core.get.call(null, map__18693__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__18693__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__18694 = function(x, var_args) {
      var p__18691 = null;
      if (arguments.length > 1) {
        p__18691 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__18694__delegate.call(this, x, p__18691);
    };
    G__18694.cljs$lang$maxFixedArity = 1;
    G__18694.cljs$lang$applyTo = function(arglist__18695) {
      var x = cljs.core.first(arglist__18695);
      var p__18691 = cljs.core.rest(arglist__18695);
      return G__18694__delegate(x, p__18691);
    };
    G__18694.cljs$core$IFn$_invoke$arity$variadic = G__18694__delegate;
    return G__18694;
  }();
  atom = function(x, var_args) {
    var p__18691 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__18696__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__18696 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18696__delegate.call(this, a, f, x, y, more);
    };
    G__18696.cljs$lang$maxFixedArity = 4;
    G__18696.cljs$lang$applyTo = function(arglist__18697) {
      var a = cljs.core.first(arglist__18697);
      arglist__18697 = cljs.core.next(arglist__18697);
      var f = cljs.core.first(arglist__18697);
      arglist__18697 = cljs.core.next(arglist__18697);
      var x = cljs.core.first(arglist__18697);
      arglist__18697 = cljs.core.next(arglist__18697);
      var y = cljs.core.first(arglist__18697);
      var more = cljs.core.rest(arglist__18697);
      return G__18696__delegate(a, f, x, y, more);
    };
    G__18696.cljs$core$IFn$_invoke$arity$variadic = G__18696__delegate;
    return G__18696;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__18698 = null;
          var G__18698__0 = function() {
            return f1.call(null);
          };
          var G__18698__1 = function(result) {
            return f1.call(null, result);
          };
          var G__18698__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__18698 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18698__0.call(this);
              case 1:
                return G__18698__1.call(this, result);
              case 2:
                return G__18698__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18698.cljs$core$IFn$_invoke$arity$0 = G__18698__0;
          G__18698.cljs$core$IFn$_invoke$arity$1 = G__18698__1;
          G__18698.cljs$core$IFn$_invoke$arity$2 = G__18698__2;
          return G__18698;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4414__auto___18699 = size;
            var i_18700 = 0;
            while (true) {
              if (i_18700 < n__4414__auto___18699) {
                var x_18701 = f.call(null, idx + i_18700, cljs.core._nth.call(null, c, i_18700));
                if (x_18701 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_18701);
                }
                var G__18702 = i_18700 + 1;
                i_18700 = G__18702;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            return p.call(null, y);
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__18709__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__18709 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18709__delegate.call(this, x, y, z, args);
        };
        G__18709.cljs$lang$maxFixedArity = 3;
        G__18709.cljs$lang$applyTo = function(arglist__18710) {
          var x = cljs.core.first(arglist__18710);
          arglist__18710 = cljs.core.next(arglist__18710);
          var y = cljs.core.first(arglist__18710);
          arglist__18710 = cljs.core.next(arglist__18710);
          var z = cljs.core.first(arglist__18710);
          var args = cljs.core.rest(arglist__18710);
          return G__18709__delegate(x, y, z, args);
        };
        G__18709.cljs$core$IFn$_invoke$arity$variadic = G__18709__delegate;
        return G__18709;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__18711__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__18703_SHARP_) {
            var and__3546__auto__ = p1.call(null, p1__18703_SHARP_);
            if (cljs.core.truth_(and__3546__auto__)) {
              return p2.call(null, p1__18703_SHARP_);
            } else {
              return and__3546__auto__;
            }
          }, args));
        };
        var G__18711 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18711__delegate.call(this, x, y, z, args);
        };
        G__18711.cljs$lang$maxFixedArity = 3;
        G__18711.cljs$lang$applyTo = function(arglist__18712) {
          var x = cljs.core.first(arglist__18712);
          arglist__18712 = cljs.core.next(arglist__18712);
          var y = cljs.core.first(arglist__18712);
          arglist__18712 = cljs.core.next(arglist__18712);
          var z = cljs.core.first(arglist__18712);
          var args = cljs.core.rest(arglist__18712);
          return G__18711__delegate(x, y, z, args);
        };
        G__18711.cljs$core$IFn$_invoke$arity$variadic = G__18711__delegate;
        return G__18711;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    var and__3546__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3546__auto____$5)) {
                      var and__3546__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3546__auto____$6)) {
                        var and__3546__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3546__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3546__auto____$7;
                        }
                      } else {
                        return and__3546__auto____$6;
                      }
                    } else {
                      return and__3546__auto____$5;
                    }
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__18713__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__18704_SHARP_) {
            var and__3546__auto__ = p1.call(null, p1__18704_SHARP_);
            if (cljs.core.truth_(and__3546__auto__)) {
              var and__3546__auto____$1 = p2.call(null, p1__18704_SHARP_);
              if (cljs.core.truth_(and__3546__auto____$1)) {
                return p3.call(null, p1__18704_SHARP_);
              } else {
                return and__3546__auto____$1;
              }
            } else {
              return and__3546__auto__;
            }
          }, args));
        };
        var G__18713 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18713__delegate.call(this, x, y, z, args);
        };
        G__18713.cljs$lang$maxFixedArity = 3;
        G__18713.cljs$lang$applyTo = function(arglist__18714) {
          var x = cljs.core.first(arglist__18714);
          arglist__18714 = cljs.core.next(arglist__18714);
          var y = cljs.core.first(arglist__18714);
          arglist__18714 = cljs.core.next(arglist__18714);
          var z = cljs.core.first(arglist__18714);
          var args = cljs.core.rest(arglist__18714);
          return G__18713__delegate(x, y, z, args);
        };
        G__18713.cljs$core$IFn$_invoke$arity$variadic = G__18713__delegate;
        return G__18713;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__18715__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18705_SHARP_) {
                return p1__18705_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18706_SHARP_) {
                var and__3546__auto__ = p1__18706_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3546__auto__)) {
                  return p1__18706_SHARP_.call(null, y);
                } else {
                  return and__3546__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__18707_SHARP_) {
                var and__3546__auto__ = p1__18707_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3546__auto__)) {
                  var and__3546__auto____$1 = p1__18707_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$1)) {
                    return p1__18707_SHARP_.call(null, z);
                  } else {
                    return and__3546__auto____$1;
                  }
                } else {
                  return and__3546__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__18716__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__18708_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__18708_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__18716 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__18716__delegate.call(this, x, y, z, args);
            };
            G__18716.cljs$lang$maxFixedArity = 3;
            G__18716.cljs$lang$applyTo = function(arglist__18717) {
              var x = cljs.core.first(arglist__18717);
              arglist__18717 = cljs.core.next(arglist__18717);
              var y = cljs.core.first(arglist__18717);
              arglist__18717 = cljs.core.next(arglist__18717);
              var z = cljs.core.first(arglist__18717);
              var args = cljs.core.rest(arglist__18717);
              return G__18716__delegate(x, y, z, args);
            };
            G__18716.cljs$core$IFn$_invoke$arity$variadic = G__18716__delegate;
            return G__18716;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__18715 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18715__delegate.call(this, p1, p2, p3, ps);
    };
    G__18715.cljs$lang$maxFixedArity = 3;
    G__18715.cljs$lang$applyTo = function(arglist__18718) {
      var p1 = cljs.core.first(arglist__18718);
      arglist__18718 = cljs.core.next(arglist__18718);
      var p2 = cljs.core.first(arglist__18718);
      arglist__18718 = cljs.core.next(arglist__18718);
      var p3 = cljs.core.first(arglist__18718);
      var ps = cljs.core.rest(arglist__18718);
      return G__18715__delegate(p1, p2, p3, ps);
    };
    G__18715.cljs$core$IFn$_invoke$arity$variadic = G__18715__delegate;
    return G__18715;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3558__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3558__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__18725__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__18725 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18725__delegate.call(this, x, y, z, args);
        };
        G__18725.cljs$lang$maxFixedArity = 3;
        G__18725.cljs$lang$applyTo = function(arglist__18726) {
          var x = cljs.core.first(arglist__18726);
          arglist__18726 = cljs.core.next(arglist__18726);
          var y = cljs.core.first(arglist__18726);
          arglist__18726 = cljs.core.next(arglist__18726);
          var z = cljs.core.first(arglist__18726);
          var args = cljs.core.rest(arglist__18726);
          return G__18725__delegate(x, y, z, args);
        };
        G__18725.cljs$core$IFn$_invoke$arity$variadic = G__18725__delegate;
        return G__18725;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__18727__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3558__auto__) {
              return function(p1__18719_SHARP_) {
                var or__3558__auto____$1 = p1.call(null, p1__18719_SHARP_);
                if (cljs.core.truth_(or__3558__auto____$1)) {
                  return or__3558__auto____$1;
                } else {
                  return p2.call(null, p1__18719_SHARP_);
                }
              };
            }(or__3558__auto__), args);
          }
        };
        var G__18727 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18727__delegate.call(this, x, y, z, args);
        };
        G__18727.cljs$lang$maxFixedArity = 3;
        G__18727.cljs$lang$applyTo = function(arglist__18728) {
          var x = cljs.core.first(arglist__18728);
          arglist__18728 = cljs.core.next(arglist__18728);
          var y = cljs.core.first(arglist__18728);
          arglist__18728 = cljs.core.next(arglist__18728);
          var z = cljs.core.first(arglist__18728);
          var args = cljs.core.rest(arglist__18728);
          return G__18727__delegate(x, y, z, args);
        };
        G__18727.cljs$core$IFn$_invoke$arity$variadic = G__18727__delegate;
        return G__18727;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  var or__3558__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3558__auto____$5)) {
                    return or__3558__auto____$5;
                  } else {
                    var or__3558__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3558__auto____$6)) {
                      return or__3558__auto____$6;
                    } else {
                      var or__3558__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3558__auto____$7)) {
                        return or__3558__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__18729__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3558__auto__) {
              return function(p1__18720_SHARP_) {
                var or__3558__auto____$1 = p1.call(null, p1__18720_SHARP_);
                if (cljs.core.truth_(or__3558__auto____$1)) {
                  return or__3558__auto____$1;
                } else {
                  var or__3558__auto____$2 = p2.call(null, p1__18720_SHARP_);
                  if (cljs.core.truth_(or__3558__auto____$2)) {
                    return or__3558__auto____$2;
                  } else {
                    return p3.call(null, p1__18720_SHARP_);
                  }
                }
              };
            }(or__3558__auto__), args);
          }
        };
        var G__18729 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__18729__delegate.call(this, x, y, z, args);
        };
        G__18729.cljs$lang$maxFixedArity = 3;
        G__18729.cljs$lang$applyTo = function(arglist__18730) {
          var x = cljs.core.first(arglist__18730);
          arglist__18730 = cljs.core.next(arglist__18730);
          var y = cljs.core.first(arglist__18730);
          arglist__18730 = cljs.core.next(arglist__18730);
          var z = cljs.core.first(arglist__18730);
          var args = cljs.core.rest(arglist__18730);
          return G__18729__delegate(x, y, z, args);
        };
        G__18729.cljs$core$IFn$_invoke$arity$variadic = G__18729__delegate;
        return G__18729;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__18731__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18721_SHARP_) {
                return p1__18721_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18722_SHARP_) {
                var or__3558__auto__ = p1__18722_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3558__auto__)) {
                  return or__3558__auto__;
                } else {
                  return p1__18722_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__18723_SHARP_) {
                var or__3558__auto__ = p1__18723_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3558__auto__)) {
                  return or__3558__auto__;
                } else {
                  var or__3558__auto____$1 = p1__18723_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3558__auto____$1)) {
                    return or__3558__auto____$1;
                  } else {
                    return p1__18723_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__18732__delegate = function(x, y, z, args) {
              var or__3558__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3558__auto__)) {
                return or__3558__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3558__auto__, ps__$1) {
                  return function(p1__18724_SHARP_) {
                    return cljs.core.some.call(null, p1__18724_SHARP_, args);
                  };
                }(or__3558__auto__, ps__$1), ps__$1);
              }
            };
            var G__18732 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__18732__delegate.call(this, x, y, z, args);
            };
            G__18732.cljs$lang$maxFixedArity = 3;
            G__18732.cljs$lang$applyTo = function(arglist__18733) {
              var x = cljs.core.first(arglist__18733);
              arglist__18733 = cljs.core.next(arglist__18733);
              var y = cljs.core.first(arglist__18733);
              arglist__18733 = cljs.core.next(arglist__18733);
              var z = cljs.core.first(arglist__18733);
              var args = cljs.core.rest(arglist__18733);
              return G__18732__delegate(x, y, z, args);
            };
            G__18732.cljs$core$IFn$_invoke$arity$variadic = G__18732__delegate;
            return G__18732;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__18731 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18731__delegate.call(this, p1, p2, p3, ps);
    };
    G__18731.cljs$lang$maxFixedArity = 3;
    G__18731.cljs$lang$applyTo = function(arglist__18734) {
      var p1 = cljs.core.first(arglist__18734);
      arglist__18734 = cljs.core.next(arglist__18734);
      var p2 = cljs.core.first(arglist__18734);
      arglist__18734 = cljs.core.next(arglist__18734);
      var p3 = cljs.core.first(arglist__18734);
      var ps = cljs.core.rest(arglist__18734);
      return G__18731__delegate(p1, p2, p3, ps);
    };
    G__18731.cljs$core$IFn$_invoke$arity$variadic = G__18731__delegate;
    return G__18731;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__18736 = null;
        var G__18736__0 = function() {
          return f1.call(null);
        };
        var G__18736__1 = function(result) {
          return f1.call(null, result);
        };
        var G__18736__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__18736__3 = function() {
          var G__18737__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__18737 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__18737__delegate.call(this, result, input, inputs);
          };
          G__18737.cljs$lang$maxFixedArity = 2;
          G__18737.cljs$lang$applyTo = function(arglist__18738) {
            var result = cljs.core.first(arglist__18738);
            arglist__18738 = cljs.core.next(arglist__18738);
            var input = cljs.core.first(arglist__18738);
            var inputs = cljs.core.rest(arglist__18738);
            return G__18737__delegate(result, input, inputs);
          };
          G__18737.cljs$core$IFn$_invoke$arity$variadic = G__18737__delegate;
          return G__18737;
        }();
        G__18736 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__18736__0.call(this);
            case 1:
              return G__18736__1.call(this, result);
            case 2:
              return G__18736__2.call(this, result, input);
            default:
              return G__18736__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18736.cljs$lang$maxFixedArity = 2;
        G__18736.cljs$lang$applyTo = G__18736__3.cljs$lang$applyTo;
        G__18736.cljs$core$IFn$_invoke$arity$0 = G__18736__0;
        G__18736.cljs$core$IFn$_invoke$arity$1 = G__18736__1;
        G__18736.cljs$core$IFn$_invoke$arity$2 = G__18736__2;
        G__18736.cljs$core$IFn$_invoke$arity$variadic = G__18736__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__18736;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___18739 = size;
          var i_18740 = 0;
          while (true) {
            if (i_18740 < n__4414__auto___18739) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_18740)));
              var G__18741 = i_18740 + 1;
              i_18740 = G__18741;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__18742__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__18735_SHARP_) {
          return cljs.core.apply.call(null, f, p1__18735_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__18742 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18742__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__18742.cljs$lang$maxFixedArity = 4;
    G__18742.cljs$lang$applyTo = function(arglist__18743) {
      var f = cljs.core.first(arglist__18743);
      arglist__18743 = cljs.core.next(arglist__18743);
      var c1 = cljs.core.first(arglist__18743);
      arglist__18743 = cljs.core.next(arglist__18743);
      var c2 = cljs.core.first(arglist__18743);
      arglist__18743 = cljs.core.next(arglist__18743);
      var c3 = cljs.core.first(arglist__18743);
      var colls = cljs.core.rest(arglist__18743);
      return G__18742__delegate(f, c1, c2, c3, colls);
    };
    G__18742.cljs$core$IFn$_invoke$arity$variadic = G__18742__delegate;
    return G__18742;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__18744 = null;
          var G__18744__0 = function() {
            return f1.call(null);
          };
          var G__18744__1 = function(result) {
            return f1.call(null, result);
          };
          var G__18744__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__18744 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18744__0.call(this);
              case 1:
                return G__18744__1.call(this, result);
              case 2:
                return G__18744__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18744.cljs$core$IFn$_invoke$arity$0 = G__18744__0;
          G__18744.cljs$core$IFn$_invoke$arity$1 = G__18744__1;
          G__18744.cljs$core$IFn$_invoke$arity$2 = G__18744__2;
          return G__18744;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__18745 = null;
          var G__18745__0 = function() {
            return f1.call(null);
          };
          var G__18745__1 = function(result) {
            return f1.call(null, result);
          };
          var G__18745__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__18745 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18745__0.call(this);
              case 1:
                return G__18745__1.call(this, result);
              case 2:
                return G__18745__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18745.cljs$core$IFn$_invoke$arity$0 = G__18745__0;
          G__18745.cljs$core$IFn$_invoke$arity$1 = G__18745__1;
          G__18745.cljs$core$IFn$_invoke$arity$2 = G__18745__2;
          return G__18745;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__18746 = n__$1 - 1;
          var G__18747 = cljs.core.rest.call(null, s);
          n__$1 = G__18746;
          coll__$1 = G__18747;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__18748 = cljs.core.next.call(null, s);
      var G__18749 = cljs.core.next.call(null, lead);
      s = G__18748;
      lead = G__18749;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__18750 = null;
          var G__18750__0 = function() {
            return f1.call(null);
          };
          var G__18750__1 = function(result) {
            return f1.call(null, result);
          };
          var G__18750__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3546__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3546__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__18750 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18750__0.call(this);
              case 1:
                return G__18750__1.call(this, result);
              case 2:
                return G__18750__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18750.cljs$core$IFn$_invoke$arity$0 = G__18750__0;
          G__18750.cljs$core$IFn$_invoke$arity$1 = G__18750__1;
          G__18750.cljs$core$IFn$_invoke$arity$2 = G__18750__2;
          return G__18750;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = s;
          if (and__3546__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3546__auto__;
          }
        }())) {
          var G__18751 = pred__$1;
          var G__18752 = cljs.core.rest.call(null, s);
          pred__$1 = G__18751;
          coll__$1 = G__18752;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__18753__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__18753 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18753__delegate.call(this, c1, c2, colls);
    };
    G__18753.cljs$lang$maxFixedArity = 2;
    G__18753.cljs$lang$applyTo = function(arglist__18754) {
      var c1 = cljs.core.first(arglist__18754);
      arglist__18754 = cljs.core.next(arglist__18754);
      var c2 = cljs.core.first(arglist__18754);
      var colls = cljs.core.rest(arglist__18754);
      return G__18753__delegate(c1, c2, colls);
    };
    G__18753.cljs$core$IFn$_invoke$arity$variadic = G__18753__delegate;
    return G__18753;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__18755__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__18755 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18755__delegate.call(this, f, coll, colls);
    };
    G__18755.cljs$lang$maxFixedArity = 2;
    G__18755.cljs$lang$applyTo = function(arglist__18756) {
      var f = cljs.core.first(arglist__18756);
      arglist__18756 = cljs.core.next(arglist__18756);
      var coll = cljs.core.first(arglist__18756);
      var colls = cljs.core.rest(arglist__18756);
      return G__18755__delegate(f, coll, colls);
    };
    G__18755.cljs$core$IFn$_invoke$arity$variadic = G__18755__delegate;
    return G__18755;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__18757 = null;
        var G__18757__0 = function() {
          return f1.call(null);
        };
        var G__18757__1 = function(result) {
          return f1.call(null, result);
        };
        var G__18757__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__18757 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18757__0.call(this);
            case 1:
              return G__18757__1.call(this, result);
            case 2:
              return G__18757__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18757.cljs$core$IFn$_invoke$arity$0 = G__18757__0;
        G__18757.cljs$core$IFn$_invoke$arity$1 = G__18757__1;
        G__18757.cljs$core$IFn$_invoke$arity$2 = G__18757__2;
        return G__18757;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___18758 = size;
          var i_18759 = 0;
          while (true) {
            if (i_18759 < n__4414__auto___18758) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_18759)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_18759));
              } else {
              }
              var G__18760 = i_18759 + 1;
              i_18759 = G__18760;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__18761_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__18761_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__18764 = to;
        if (G__18764) {
          var bit__4201__auto__ = G__18764.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4201__auto__ || G__18764.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__18765 = to;
      if (G__18765) {
        var bit__4201__auto__ = G__18765.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4201__auto__ || G__18765.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__18766__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__18766 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__18766__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__18766.cljs$lang$maxFixedArity = 4;
    G__18766.cljs$lang$applyTo = function(arglist__18767) {
      var f = cljs.core.first(arglist__18767);
      arglist__18767 = cljs.core.next(arglist__18767);
      var c1 = cljs.core.first(arglist__18767);
      arglist__18767 = cljs.core.next(arglist__18767);
      var c2 = cljs.core.first(arglist__18767);
      arglist__18767 = cljs.core.next(arglist__18767);
      var c3 = cljs.core.first(arglist__18767);
      var colls = cljs.core.rest(arglist__18767);
      return G__18766__delegate(f, c1, c2, c3, colls);
    };
    G__18766.cljs$core$IFn$_invoke$arity$variadic = G__18766__delegate;
    return G__18766;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__18769 = m__$1;
          if (G__18769) {
            var bit__4208__auto__ = G__18769.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4208__auto__ || G__18769.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__18769.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__18769);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__18769);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__18770 = sentinel;
            var G__18771 = m__$2;
            var G__18772 = cljs.core.next.call(null, ks__$1);
            sentinel = G__18770;
            m__$1 = G__18771;
            ks__$1 = G__18772;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__18773, v) {
  var vec__18775 = p__18773;
  var k = cljs.core.nth.call(null, vec__18775, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__18775, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__18776, f) {
    var vec__18786 = p__18776;
    var k = cljs.core.nth.call(null, vec__18786, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18786, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__18777, f, a) {
    var vec__18787 = p__18777;
    var k = cljs.core.nth.call(null, vec__18787, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18787, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__18778, f, a, b) {
    var vec__18788 = p__18778;
    var k = cljs.core.nth.call(null, vec__18788, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18788, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__18779, f, a, b, c) {
    var vec__18789 = p__18779;
    var k = cljs.core.nth.call(null, vec__18789, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__18789, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__18791__delegate = function(m, p__18780, f, a, b, c, args) {
      var vec__18790 = p__18780;
      var k = cljs.core.nth.call(null, vec__18790, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__18790, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__18791 = function(m, p__18780, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__18791__delegate.call(this, m, p__18780, f, a, b, c, args);
    };
    G__18791.cljs$lang$maxFixedArity = 6;
    G__18791.cljs$lang$applyTo = function(arglist__18792) {
      var m = cljs.core.first(arglist__18792);
      arglist__18792 = cljs.core.next(arglist__18792);
      var p__18780 = cljs.core.first(arglist__18792);
      arglist__18792 = cljs.core.next(arglist__18792);
      var f = cljs.core.first(arglist__18792);
      arglist__18792 = cljs.core.next(arglist__18792);
      var a = cljs.core.first(arglist__18792);
      arglist__18792 = cljs.core.next(arglist__18792);
      var b = cljs.core.first(arglist__18792);
      arglist__18792 = cljs.core.next(arglist__18792);
      var c = cljs.core.first(arglist__18792);
      var args = cljs.core.rest(arglist__18792);
      return G__18791__delegate(m, p__18780, f, a, b, c, args);
    };
    G__18791.cljs$core$IFn$_invoke$arity$variadic = G__18791__delegate;
    return G__18791;
  }();
  update_in = function(m, p__18780, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__18780, f);
      case 4:
        return update_in__4.call(this, m, p__18780, f, a);
      case 5:
        return update_in__5.call(this, m, p__18780, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__18780, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__18780, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__18793 = ll - 5;
      var G__18794 = r;
      ll = G__18793;
      ret = G__18794;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__18795 = cljs.core.pv_aget.call(null, node, 0);
      var G__18796 = level - 5;
      node = G__18795;
      level = G__18796;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__18797 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__18798 = level - 5;
        node = G__18797;
        level = G__18798;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__18800 = j + 1;
              var G__18801 = init__$2;
              j = G__18800;
              init__$1 = G__18801;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__18802 = i + step_init[0];
        i = G__18802;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4414__auto___18803 = len;
    var i_18804 = 0;
    while (true) {
      if (i_18804 < n__4414__auto___18803) {
        new_tail[i_18804] = self__.tail[i_18804];
        var G__18805 = i_18804 + 1;
        i_18804 = G__18805;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__18806 = null;
  var G__18806__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__18806__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__18806 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18806__2.call(this, self__, k);
      case 3:
        return G__18806__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18806.cljs$core$IFn$_invoke$arity$2 = G__18806__2;
  G__18806.cljs$core$IFn$_invoke$arity$3 = G__18806__3;
  return G__18806;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args18799) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18799)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__18807 = i + 1;
        var G__18808 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__18807;
        out = G__18808;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__18809) {
    var args = cljs.core.seq(arglist__18809);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3865__auto__ = self__.end;
    var y__3866__auto__ = v_pos + 1;
    return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__18811 = null;
  var G__18811__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__18811__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__18811 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18811__2.call(this, self__, k);
      case 3:
        return G__18811__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18811.cljs$core$IFn$_invoke$arity$2 = G__18811__2;
  G__18811.cljs$core$IFn$_invoke$arity$3 = G__18811__3;
  return G__18811;
}();
cljs.core.Subvec.prototype.apply = function(self__, args18810) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18810)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__18812 = meta;
      var G__18813 = v.v;
      var G__18814 = v.start + start;
      var G__18815 = v.start + end;
      var G__18816 = __hash;
      meta = G__18812;
      v = G__18813;
      start = G__18814;
      end = G__18815;
      __hash = G__18816;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj18820 = {};
    return obj18820;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__18821 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__18822 = level - 5;
        node = G__18821;
        level = G__18822;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__18824 = null;
  var G__18824__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18824__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18824 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18824__2.call(this, self__, k);
      case 3:
        return G__18824__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18824.cljs$core$IFn$_invoke$arity$2 = G__18824__2;
  G__18824.cljs$core$IFn$_invoke$arity$3 = G__18824__3;
  return G__18824;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args18823) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18823)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = self__.front;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3558__auto__ = self__.rear;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__18825 = i + incr;
        i = G__18825;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__18826 = i + 1;
      var G__18827 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__18826;
      out = G__18827;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj18831 = {};
    return obj18831;
  }();
  var l = ks.length;
  var i_18832 = 0;
  while (true) {
    if (i_18832 < l) {
      var k_18833 = ks[i_18832];
      new_obj[k_18833] = obj[k_18833];
      var G__18834 = i_18832 + 1;
      i_18832 = G__18834;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18837 = cljs.core.rest.call(null, keys__$1);
        var G__18838 = init__$2;
        keys__$1 = G__18837;
        init__$1 = G__18838;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__18835_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__18835_SHARP_, self__.strobj[p1__18835_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__18839 = null;
  var G__18839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18839__2.call(this, self__, k);
      case 3:
        return G__18839__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18839.cljs$core$IFn$_invoke$arity$2 = G__18839__2;
  G__18839.cljs$core$IFn$_invoke$arity$3 = G__18839__3;
  return G__18839;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args18836) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18836)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj18841 = {};
  return obj18841;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__18842 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__18842, 0, null);
    var v = cljs.core.nth.call(null, vec__18842, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__18843 = i + 2;
        i = G__18843;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__18844 = i + 2;
        i = G__18844;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__18845 = i + 2;
        i = G__18845;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__18846 = i + 2;
        i = G__18846;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__18847 = i + 2;
        i = G__18847;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_18848 = 0;
  while (true) {
    if (i_18848 < l) {
      narr[i_18848] = arr[i_18848];
      var G__18849 = i_18848 + 1;
      i_18848 = G__18849;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18851 = cljs.core.seq.call(null, coll);
  var chunk__18852 = null;
  var count__18853 = 0;
  var i__18854 = 0;
  while (true) {
    if (i__18854 < count__18853) {
      var vec__18855 = cljs.core._nth.call(null, chunk__18852, i__18854);
      var k = cljs.core.nth.call(null, vec__18855, 0, null);
      var v = cljs.core.nth.call(null, vec__18855, 1, null);
      f.call(null, v, k);
      var G__18860 = seq__18851;
      var G__18861 = chunk__18852;
      var G__18862 = count__18853;
      var G__18863 = i__18854 + 1;
      seq__18851 = G__18860;
      chunk__18852 = G__18861;
      count__18853 = G__18862;
      i__18854 = G__18863;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18851);
      if (temp__4126__auto__) {
        var seq__18851__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18851__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__18851__$1);
          var G__18864 = cljs.core.chunk_rest.call(null, seq__18851__$1);
          var G__18865 = c__4314__auto__;
          var G__18866 = cljs.core.count.call(null, c__4314__auto__);
          var G__18867 = 0;
          seq__18851 = G__18864;
          chunk__18852 = G__18865;
          count__18853 = G__18866;
          i__18854 = G__18867;
          continue;
        } else {
          var vec__18856 = cljs.core.first.call(null, seq__18851__$1);
          var k = cljs.core.nth.call(null, vec__18856, 0, null);
          var v = cljs.core.nth.call(null, vec__18856, 1, null);
          f.call(null, v, k);
          var G__18868 = cljs.core.next.call(null, seq__18851__$1);
          var G__18869 = null;
          var G__18870 = 0;
          var G__18871 = 0;
          seq__18851 = G__18868;
          chunk__18852 = G__18869;
          count__18853 = G__18870;
          i__18854 = G__18871;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18872 = i + 2;
        var G__18873 = init__$2;
        i = G__18872;
        init__$1 = G__18873;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj18858 = {};
    return obj18858;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__18874 = s + 2;
            var G__18875 = d;
            s = G__18874;
            d = G__18875;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__18876 = s + 2;
            var G__18877 = d + 2;
            s = G__18876;
            d = G__18877;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__18859 = cljs.core.aclone.call(null, self__.arr);
        G__18859[idx + 1] = v;
        return G__18859;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18878 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18879 = cljs.core.next.call(null, es);
          ret = G__18878;
          es = G__18879;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__18880 = null;
  var G__18880__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18880__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18880 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18880__2.call(this, self__, k);
      case 3:
        return G__18880__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18880.cljs$core$IFn$_invoke$arity$2 = G__18880__2;
  G__18880.cljs$core$IFn$_invoke$arity$3 = G__18880__3;
  return G__18880;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args18850) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18850)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__18881 = i + 2;
        var G__18882 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__18881;
        ret = G__18882;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__18883_18885 = self__.arr;
      G__18883_18885.pop();
      G__18883_18885.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__18884 = o;
      if (G__18884) {
        var bit__4208__auto__ = G__18884.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4208__auto__ || G__18884.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__18884.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18884);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18884);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__18886 = cljs.core.next.call(null, es);
          var G__18887 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__18886;
          tcoll__$2 = G__18887;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__18888 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__18889 = i + 2;
      out = G__18888;
      i = G__18889;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__18892 = cljs.core.aclone.call(null, arr);
    G__18892[i] = a;
    return G__18892;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__18893 = cljs.core.aclone.call(null, arr);
    G__18893[i] = a;
    G__18893[j] = b;
    return G__18893;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__18894 = i + 2;
        var G__18895 = init__$2;
        i = G__18894;
        init__$1 = G__18895;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_18896 = 0;
        var j_18897 = 0;
        while (true) {
          if (i_18896 < 32) {
            if ((self__.bitmap >>> i_18896 & 1) === 0) {
              var G__18898 = i_18896 + 1;
              var G__18899 = j_18897;
              i_18896 = G__18898;
              j_18897 = G__18899;
              continue;
            } else {
              nodes[i_18896] = !(self__.arr[j_18897] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_18897]), self__.arr[j_18897], self__.arr[j_18897 + 1], added_leaf_QMARK_) : self__.arr[j_18897 + 1];
              var G__18900 = i_18896 + 1;
              var G__18901 = j_18897 + 2;
              i_18896 = G__18900;
              j_18897 = G__18901;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_18902 = 0;
      var j_18903 = 0;
      while (true) {
        if (i_18902 < 32) {
          if ((self__.bitmap >>> i_18902 & 1) === 0) {
            var G__18904 = i_18902 + 1;
            var G__18905 = j_18903;
            i_18902 = G__18904;
            j_18903 = G__18905;
            continue;
          } else {
            nodes[i_18902] = !(self__.arr[j_18903] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_18903]), self__.arr[j_18903], self__.arr[j_18903 + 1], added_leaf_QMARK_) : self__.arr[j_18903 + 1];
            var G__18906 = i_18902 + 1;
            var G__18907 = j_18903 + 2;
            i_18902 = G__18906;
            j_18903 = G__18907;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__18908 = i + 1;
        var G__18909 = j + 2;
        var G__18910 = bitmap | 1 << i;
        i = G__18908;
        j = G__18909;
        bitmap = G__18910;
        continue;
      } else {
        var G__18911 = i + 1;
        var G__18912 = j;
        var G__18913 = bitmap;
        i = G__18911;
        j = G__18912;
        bitmap = G__18913;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__18914 = i + 1;
          var G__18915 = init__$2;
          i = G__18914;
          init__$1 = G__18915;
          continue;
        }
      } else {
        var G__18916 = i + 1;
        var G__18917 = init__$1;
        i = G__18916;
        init__$1 = G__18917;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__18918 = i + 2;
        i = G__18918;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__18919 = j + 2;
                j = G__18919;
                continue;
              }
            } else {
              var G__18920 = j + 2;
              j = G__18920;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__18921 = j + 1;
              j = G__18921;
              continue;
            }
          } else {
            var G__18922 = j + 1;
            j = G__18922;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18924 = cljs.core.seq.call(null, coll);
  var chunk__18925 = null;
  var count__18926 = 0;
  var i__18927 = 0;
  while (true) {
    if (i__18927 < count__18926) {
      var vec__18928 = cljs.core._nth.call(null, chunk__18925, i__18927);
      var k = cljs.core.nth.call(null, vec__18928, 0, null);
      var v = cljs.core.nth.call(null, vec__18928, 1, null);
      f.call(null, v, k);
      var G__18932 = seq__18924;
      var G__18933 = chunk__18925;
      var G__18934 = count__18926;
      var G__18935 = i__18927 + 1;
      seq__18924 = G__18932;
      chunk__18925 = G__18933;
      count__18926 = G__18934;
      i__18927 = G__18935;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18924);
      if (temp__4126__auto__) {
        var seq__18924__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18924__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__18924__$1);
          var G__18936 = cljs.core.chunk_rest.call(null, seq__18924__$1);
          var G__18937 = c__4314__auto__;
          var G__18938 = cljs.core.count.call(null, c__4314__auto__);
          var G__18939 = 0;
          seq__18924 = G__18936;
          chunk__18925 = G__18937;
          count__18926 = G__18938;
          i__18927 = G__18939;
          continue;
        } else {
          var vec__18929 = cljs.core.first.call(null, seq__18924__$1);
          var k = cljs.core.nth.call(null, vec__18929, 0, null);
          var v = cljs.core.nth.call(null, vec__18929, 1, null);
          f.call(null, v, k);
          var G__18940 = cljs.core.next.call(null, seq__18924__$1);
          var G__18941 = null;
          var G__18942 = 0;
          var G__18943 = 0;
          seq__18924 = G__18940;
          chunk__18925 = G__18941;
          count__18926 = G__18942;
          i__18927 = G__18943;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj18931 = {};
    return obj18931;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18944 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18945 = cljs.core.next.call(null, es);
          ret = G__18944;
          es = G__18945;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__18946 = null;
  var G__18946__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18946__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18946 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18946__2.call(this, self__, k);
      case 3:
        return G__18946__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18946.cljs$core$IFn$_invoke$arity$2 = G__18946__2;
  G__18946.cljs$core$IFn$_invoke$arity$3 = G__18946__3;
  return G__18946;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args18923) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18923)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__18947 = i + 1;
      var G__18948 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__18947;
      out = G__18948;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__18949 = o;
      if (G__18949) {
        var bit__4208__auto__ = G__18949.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4208__auto__ || G__18949.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__18949.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18949);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__18949);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__18950 = cljs.core.next.call(null, es);
          var G__18951 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__18950;
          tcoll__$1 = G__18951;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__18952 = ascending_QMARK_ ? t.left : t.right;
      var G__18953 = cljs.core.conj.call(null, stack__$1, t);
      t = G__18952;
      stack__$1 = G__18953;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__18955 = null;
  var G__18955__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18955__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18955 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18955__2.call(this, self__, k);
      case 3:
        return G__18955__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18955.cljs$core$IFn$_invoke$arity$2 = G__18955__2;
  G__18955.cljs$core$IFn$_invoke$arity$3 = G__18955__3;
  return G__18955;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args18954) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18954)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__18957 = null;
  var G__18957__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18957__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18957 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18957__2.call(this, self__, k);
      case 3:
        return G__18957__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18957.cljs$core$IFn$_invoke$arity$2 = G__18957__2;
  G__18957.cljs$core$IFn$_invoke$arity$3 = G__18957__3;
  return G__18957;
}();
cljs.core.RedNode.prototype.apply = function(self__, args18956) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18956)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__18959 = cljs.core.seq.call(null, coll);
  var chunk__18960 = null;
  var count__18961 = 0;
  var i__18962 = 0;
  while (true) {
    if (i__18962 < count__18961) {
      var vec__18963 = cljs.core._nth.call(null, chunk__18960, i__18962);
      var k = cljs.core.nth.call(null, vec__18963, 0, null);
      var v = cljs.core.nth.call(null, vec__18963, 1, null);
      f.call(null, v, k);
      var G__18965 = seq__18959;
      var G__18966 = chunk__18960;
      var G__18967 = count__18961;
      var G__18968 = i__18962 + 1;
      seq__18959 = G__18965;
      chunk__18960 = G__18966;
      count__18961 = G__18967;
      i__18962 = G__18968;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18959);
      if (temp__4126__auto__) {
        var seq__18959__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18959__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__18959__$1);
          var G__18969 = cljs.core.chunk_rest.call(null, seq__18959__$1);
          var G__18970 = c__4314__auto__;
          var G__18971 = cljs.core.count.call(null, c__4314__auto__);
          var G__18972 = 0;
          seq__18959 = G__18969;
          chunk__18960 = G__18970;
          count__18961 = G__18971;
          i__18962 = G__18972;
          continue;
        } else {
          var vec__18964 = cljs.core.first.call(null, seq__18959__$1);
          var k = cljs.core.nth.call(null, vec__18964, 0, null);
          var v = cljs.core.nth.call(null, vec__18964, 1, null);
          f.call(null, v, k);
          var G__18973 = cljs.core.next.call(null, seq__18959__$1);
          var G__18974 = null;
          var G__18975 = 0;
          var G__18976 = 0;
          seq__18959 = G__18973;
          chunk__18960 = G__18974;
          count__18961 = G__18975;
          i__18962 = G__18976;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__18977 = t.left;
          t = G__18977;
          continue;
        } else {
          var G__18978 = t.right;
          t = G__18978;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__18979 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__18980 = cljs.core.next.call(null, es);
          ret = G__18979;
          es = G__18980;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__18981 = null;
  var G__18981__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18981__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18981 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18981__2.call(this, self__, k);
      case 3:
        return G__18981__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18981.cljs$core$IFn$_invoke$arity$2 = G__18981__2;
  G__18981.cljs$core$IFn$_invoke$arity$3 = G__18981__3;
  return G__18981;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args18958) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18958)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__18982 = cljs.core.conj.call(null, stack, t);
              var G__18983 = t.left;
              stack = G__18982;
              t = G__18983;
              continue;
            } else {
              var G__18984 = stack;
              var G__18985 = t.right;
              stack = G__18984;
              t = G__18985;
              continue;
            }
          } else {
            if (c > 0) {
              var G__18986 = cljs.core.conj.call(null, stack, t);
              var G__18987 = t.right;
              stack = G__18986;
              t = G__18987;
              continue;
            } else {
              var G__18988 = stack;
              var G__18989 = t.left;
              stack = G__18988;
              t = G__18989;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__18990 = cljs.core.nnext.call(null, in$);
        var G__18991 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__18990;
        out = G__18991;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__18992) {
    var keyvals = cljs.core.seq(arglist__18992);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__18993) {
    var keyvals = cljs.core.seq(arglist__18993);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj18997 = {};
      return obj18997;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__18998 = cljs.core.nnext.call(null, kvs);
        kvs = G__18998;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__18999) {
    var keyvals = cljs.core.seq(arglist__18999);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__19000 = cljs.core.nnext.call(null, in$);
        var G__19001 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19000;
        out = G__19001;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__19002) {
    var keyvals = cljs.core.seq(arglist__19002);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__19003 = cljs.core.nnext.call(null, in$);
        var G__19004 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19003;
        out = G__19004;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__19005) {
    var comparator = cljs.core.first(arglist__19005);
    var keyvals = cljs.core.rest(arglist__19005);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19006 = self__.mseq;
    if (G__19006) {
      var bit__4208__auto__ = G__19006.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__19006.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19006.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19006);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19006);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19007 = self__.mseq;
    if (G__19007) {
      var bit__4208__auto__ = G__19007.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__19007.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19007.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19007);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19007);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19008 = self__.mseq;
    if (G__19008) {
      var bit__4208__auto__ = G__19008.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__19008.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19008.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19008);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19008);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19009 = self__.mseq;
    if (G__19009) {
      var bit__4208__auto__ = G__19009.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__19009.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19009.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19009);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19009);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__19010_SHARP_, p2__19011_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3558__auto__ = p1__19010_SHARP_;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__19011_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__19012) {
    var maps = cljs.core.seq(arglist__19012);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3558__auto__ = m1;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__19013) {
    var f = cljs.core.first(arglist__19013);
    var maps = cljs.core.rest(arglist__19013);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__19014 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__19015 = cljs.core.next.call(null, keys);
      ret = G__19014;
      keys = G__19015;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19018 = cljs.core.seq.call(null, coll);
  var chunk__19019 = null;
  var count__19020 = 0;
  var i__19021 = 0;
  while (true) {
    if (i__19021 < count__19020) {
      var vec__19022 = cljs.core._nth.call(null, chunk__19019, i__19021);
      var k = cljs.core.nth.call(null, vec__19022, 0, null);
      var v = cljs.core.nth.call(null, vec__19022, 1, null);
      f.call(null, v, k);
      var G__19024 = seq__19018;
      var G__19025 = chunk__19019;
      var G__19026 = count__19020;
      var G__19027 = i__19021 + 1;
      seq__19018 = G__19024;
      chunk__19019 = G__19025;
      count__19020 = G__19026;
      i__19021 = G__19027;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19018);
      if (temp__4126__auto__) {
        var seq__19018__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19018__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19018__$1);
          var G__19028 = cljs.core.chunk_rest.call(null, seq__19018__$1);
          var G__19029 = c__4314__auto__;
          var G__19030 = cljs.core.count.call(null, c__4314__auto__);
          var G__19031 = 0;
          seq__19018 = G__19028;
          chunk__19019 = G__19029;
          count__19020 = G__19030;
          i__19021 = G__19031;
          continue;
        } else {
          var vec__19023 = cljs.core.first.call(null, seq__19018__$1);
          var k = cljs.core.nth.call(null, vec__19023, 0, null);
          var v = cljs.core.nth.call(null, vec__19023, 1, null);
          f.call(null, v, k);
          var G__19032 = cljs.core.next.call(null, seq__19018__$1);
          var G__19033 = null;
          var G__19034 = 0;
          var G__19035 = 0;
          seq__19018 = G__19032;
          chunk__19019 = G__19033;
          count__19020 = G__19034;
          i__19021 = G__19035;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__19016_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__19016_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__19036 = null;
  var G__19036__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19036__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19036 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19036__2.call(this, self__, k);
      case 3:
        return G__19036__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19036.cljs$core$IFn$_invoke$arity$2 = G__19036__2;
  G__19036.cljs$core$IFn$_invoke$arity$3 = G__19036__3;
  return G__19036;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args19017) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19017)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__19037 = i + 1;
        var G__19038 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__19037;
        out = G__19038;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__19039 = i + 1;
        var G__19040 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__19039;
        out = G__19040;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__19042 = null;
  var G__19042__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__19042__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__19042 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19042__2.call(this, self__, k);
      case 3:
        return G__19042__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19042.cljs$core$IFn$_invoke$arity$2 = G__19042__2;
  G__19042.cljs$core$IFn$_invoke$arity$3 = G__19042__3;
  return G__19042;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args19041) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19041)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19045 = cljs.core.seq.call(null, coll);
  var chunk__19046 = null;
  var count__19047 = 0;
  var i__19048 = 0;
  while (true) {
    if (i__19048 < count__19047) {
      var vec__19049 = cljs.core._nth.call(null, chunk__19046, i__19048);
      var k = cljs.core.nth.call(null, vec__19049, 0, null);
      var v = cljs.core.nth.call(null, vec__19049, 1, null);
      f.call(null, v, k);
      var G__19051 = seq__19045;
      var G__19052 = chunk__19046;
      var G__19053 = count__19047;
      var G__19054 = i__19048 + 1;
      seq__19045 = G__19051;
      chunk__19046 = G__19052;
      count__19047 = G__19053;
      i__19048 = G__19054;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19045);
      if (temp__4126__auto__) {
        var seq__19045__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19045__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19045__$1);
          var G__19055 = cljs.core.chunk_rest.call(null, seq__19045__$1);
          var G__19056 = c__4314__auto__;
          var G__19057 = cljs.core.count.call(null, c__4314__auto__);
          var G__19058 = 0;
          seq__19045 = G__19055;
          chunk__19046 = G__19056;
          count__19047 = G__19057;
          i__19048 = G__19058;
          continue;
        } else {
          var vec__19050 = cljs.core.first.call(null, seq__19045__$1);
          var k = cljs.core.nth.call(null, vec__19050, 0, null);
          var v = cljs.core.nth.call(null, vec__19050, 1, null);
          f.call(null, v, k);
          var G__19059 = cljs.core.next.call(null, seq__19045__$1);
          var G__19060 = null;
          var G__19061 = 0;
          var G__19062 = 0;
          seq__19045 = G__19059;
          chunk__19046 = G__19060;
          count__19047 = G__19061;
          i__19048 = G__19062;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__19043_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__19043_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__19063 = null;
  var G__19063__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19063__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19063 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19063__2.call(this, self__, k);
      case 3:
        return G__19063__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19063.cljs$core$IFn$_invoke$arity$2 = G__19063__2;
  G__19063.cljs$core$IFn$_invoke$arity$3 = G__19063__3;
  return G__19063;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args19044) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19044)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4408__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4408__auto__.length) {
        var G__19064 = i + 1;
        var G__19065 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__19064;
        res = G__19065;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__19066 = cljs.core._next.call(null, in$__$1);
          var G__19067 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__19066;
          out = G__19067;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__19068__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__19068 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19068__delegate.call(this, keys);
    };
    G__19068.cljs$lang$maxFixedArity = 0;
    G__19068.cljs$lang$applyTo = function(arglist__19069) {
      var keys = cljs.core.seq(arglist__19069);
      return G__19068__delegate(keys);
    };
    G__19068.cljs$core$IFn$_invoke$arity$variadic = G__19068__delegate;
    return G__19068;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__19070) {
    var keys = cljs.core.seq(arglist__19070);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__19071) {
    var comparator = cljs.core.first(arglist__19071);
    var keys = cljs.core.rest(arglist__19071);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__19072_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__19072_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__19072_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__19073_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__19073_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__19073_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__19080, seen__$1) {
        while (true) {
          var vec__19081 = p__19080;
          var f = cljs.core.nth.call(null, vec__19081, 0, null);
          var xs__$1 = vec__19081;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__19082 = cljs.core.rest.call(null, s);
              var G__19083 = seen__$1;
              p__19080 = G__19082;
              seen__$1 = G__19083;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__19084 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__19085 = cljs.core.next.call(null, s__$1);
      ret = G__19084;
      s__$1 = G__19085;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__19087 = x;
    if (G__19087) {
      var bit__4201__auto__ = G__19087.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4201__auto__ || G__19087.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__19088 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__19089 = cljs.core.next.call(null, ks);
      var G__19090 = cljs.core.next.call(null, vs);
      map = G__19088;
      ks = G__19089;
      vs = G__19090;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__19093__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__19091_SHARP_, p2__19092_SHARP_) {
        return max_key.call(null, k, p1__19091_SHARP_, p2__19092_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__19093 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19093__delegate.call(this, k, x, y, more);
    };
    G__19093.cljs$lang$maxFixedArity = 3;
    G__19093.cljs$lang$applyTo = function(arglist__19094) {
      var k = cljs.core.first(arglist__19094);
      arglist__19094 = cljs.core.next(arglist__19094);
      var x = cljs.core.first(arglist__19094);
      arglist__19094 = cljs.core.next(arglist__19094);
      var y = cljs.core.first(arglist__19094);
      var more = cljs.core.rest(arglist__19094);
      return G__19093__delegate(k, x, y, more);
    };
    G__19093.cljs$core$IFn$_invoke$arity$variadic = G__19093__delegate;
    return G__19093;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__19097__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__19095_SHARP_, p2__19096_SHARP_) {
        return min_key.call(null, k, p1__19095_SHARP_, p2__19096_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__19097 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19097__delegate.call(this, k, x, y, more);
    };
    G__19097.cljs$lang$maxFixedArity = 3;
    G__19097.cljs$lang$applyTo = function(arglist__19098) {
      var k = cljs.core.first(arglist__19098);
      arglist__19098 = cljs.core.next(arglist__19098);
      var x = cljs.core.first(arglist__19098);
      arglist__19098 = cljs.core.next(arglist__19098);
      var y = cljs.core.first(arglist__19098);
      var more = cljs.core.rest(arglist__19098);
      return G__19097__delegate(k, x, y, more);
    };
    G__19097.cljs$core$IFn$_invoke$arity$variadic = G__19097__delegate;
    return G__19097;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__19099 = null;
          var G__19099__0 = function() {
            return f1.call(null);
          };
          var G__19099__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__19099__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__19099 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19099__0.call(this);
              case 1:
                return G__19099__1.call(this, result);
              case 2:
                return G__19099__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19099.cljs$core$IFn$_invoke$arity$0 = G__19099__0;
          G__19099.cljs$core$IFn$_invoke$arity$1 = G__19099__1;
          G__19099.cljs$core$IFn$_invoke$arity$2 = G__19099__2;
          return G__19099;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__19100 = null;
        var G__19100__0 = function() {
          return f1.call(null);
        };
        var G__19100__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19100__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__19100 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19100__0.call(this);
            case 1:
              return G__19100__1.call(this, result);
            case 2:
              return G__19100__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19100.cljs$core$IFn$_invoke$arity$0 = G__19100__0;
        G__19100.cljs$core$IFn$_invoke$arity$1 = G__19100__1;
        G__19100.cljs$core$IFn$_invoke$arity$2 = G__19100__2;
        return G__19100;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__19103 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__19103, 0, null);
        var s = vec__19103;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__19104 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__19104, 0, null);
      var s = vec__19104;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__19107 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__19107, 0, null);
        var s = vec__19107;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__19108 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__19108, 0, null);
      var s = vec__19108;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__19109 = null;
          var G__19109__0 = function() {
            return f1.call(null);
          };
          var G__19109__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19109__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__19109 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19109__0.call(this);
              case 1:
                return G__19109__1.call(this, result);
              case 2:
                return G__19109__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19109.cljs$core$IFn$_invoke$arity$0 = G__19109__0;
          G__19109.cljs$core$IFn$_invoke$arity$1 = G__19109__1;
          G__19109.cljs$core$IFn$_invoke$arity$2 = G__19109__2;
          return G__19109;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__19111 = null;
          var G__19111__0 = function() {
            return f1.call(null);
          };
          var G__19111__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__19111__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__19111 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19111__0.call(this);
              case 1:
                return G__19111__1.call(this, result);
              case 2:
                return G__19111__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19111.cljs$core$IFn$_invoke$arity$0 = G__19111__0;
          G__19111.cljs$core$IFn$_invoke$arity$1 = G__19111__1;
          G__19111.cljs$core$IFn$_invoke$arity$2 = G__19111__2;
          return G__19111;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__19110_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__19110_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__19122 = null;
      var G__19122__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__19122__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__19122__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__19122__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__19122__4 = function() {
        var G__19123__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__19123 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19123__delegate.call(this, x, y, z, args);
        };
        G__19123.cljs$lang$maxFixedArity = 3;
        G__19123.cljs$lang$applyTo = function(arglist__19124) {
          var x = cljs.core.first(arglist__19124);
          arglist__19124 = cljs.core.next(arglist__19124);
          var y = cljs.core.first(arglist__19124);
          arglist__19124 = cljs.core.next(arglist__19124);
          var z = cljs.core.first(arglist__19124);
          var args = cljs.core.rest(arglist__19124);
          return G__19123__delegate(x, y, z, args);
        };
        G__19123.cljs$core$IFn$_invoke$arity$variadic = G__19123__delegate;
        return G__19123;
      }();
      G__19122 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19122__0.call(this);
          case 1:
            return G__19122__1.call(this, x);
          case 2:
            return G__19122__2.call(this, x, y);
          case 3:
            return G__19122__3.call(this, x, y, z);
          default:
            return G__19122__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19122.cljs$lang$maxFixedArity = 3;
      G__19122.cljs$lang$applyTo = G__19122__4.cljs$lang$applyTo;
      G__19122.cljs$core$IFn$_invoke$arity$0 = G__19122__0;
      G__19122.cljs$core$IFn$_invoke$arity$1 = G__19122__1;
      G__19122.cljs$core$IFn$_invoke$arity$2 = G__19122__2;
      G__19122.cljs$core$IFn$_invoke$arity$3 = G__19122__3;
      G__19122.cljs$core$IFn$_invoke$arity$variadic = G__19122__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19122;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__19125 = null;
      var G__19125__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__19125__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__19125__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__19125__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__19125__4 = function() {
        var G__19126__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__19126 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19126__delegate.call(this, x, y, z, args);
        };
        G__19126.cljs$lang$maxFixedArity = 3;
        G__19126.cljs$lang$applyTo = function(arglist__19127) {
          var x = cljs.core.first(arglist__19127);
          arglist__19127 = cljs.core.next(arglist__19127);
          var y = cljs.core.first(arglist__19127);
          arglist__19127 = cljs.core.next(arglist__19127);
          var z = cljs.core.first(arglist__19127);
          var args = cljs.core.rest(arglist__19127);
          return G__19126__delegate(x, y, z, args);
        };
        G__19126.cljs$core$IFn$_invoke$arity$variadic = G__19126__delegate;
        return G__19126;
      }();
      G__19125 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19125__0.call(this);
          case 1:
            return G__19125__1.call(this, x);
          case 2:
            return G__19125__2.call(this, x, y);
          case 3:
            return G__19125__3.call(this, x, y, z);
          default:
            return G__19125__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19125.cljs$lang$maxFixedArity = 3;
      G__19125.cljs$lang$applyTo = G__19125__4.cljs$lang$applyTo;
      G__19125.cljs$core$IFn$_invoke$arity$0 = G__19125__0;
      G__19125.cljs$core$IFn$_invoke$arity$1 = G__19125__1;
      G__19125.cljs$core$IFn$_invoke$arity$2 = G__19125__2;
      G__19125.cljs$core$IFn$_invoke$arity$3 = G__19125__3;
      G__19125.cljs$core$IFn$_invoke$arity$variadic = G__19125__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19125;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__19128 = null;
      var G__19128__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__19128__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__19128__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__19128__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__19128__4 = function() {
        var G__19129__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__19129 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19129__delegate.call(this, x, y, z, args);
        };
        G__19129.cljs$lang$maxFixedArity = 3;
        G__19129.cljs$lang$applyTo = function(arglist__19130) {
          var x = cljs.core.first(arglist__19130);
          arglist__19130 = cljs.core.next(arglist__19130);
          var y = cljs.core.first(arglist__19130);
          arglist__19130 = cljs.core.next(arglist__19130);
          var z = cljs.core.first(arglist__19130);
          var args = cljs.core.rest(arglist__19130);
          return G__19129__delegate(x, y, z, args);
        };
        G__19129.cljs$core$IFn$_invoke$arity$variadic = G__19129__delegate;
        return G__19129;
      }();
      G__19128 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19128__0.call(this);
          case 1:
            return G__19128__1.call(this, x);
          case 2:
            return G__19128__2.call(this, x, y);
          case 3:
            return G__19128__3.call(this, x, y, z);
          default:
            return G__19128__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19128.cljs$lang$maxFixedArity = 3;
      G__19128.cljs$lang$applyTo = G__19128__4.cljs$lang$applyTo;
      G__19128.cljs$core$IFn$_invoke$arity$0 = G__19128__0;
      G__19128.cljs$core$IFn$_invoke$arity$1 = G__19128__1;
      G__19128.cljs$core$IFn$_invoke$arity$2 = G__19128__2;
      G__19128.cljs$core$IFn$_invoke$arity$3 = G__19128__3;
      G__19128.cljs$core$IFn$_invoke$arity$variadic = G__19128__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19128;
    }();
  };
  var juxt__4 = function() {
    var G__19131__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__19132 = null;
          var G__19132__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19112_SHARP_, p2__19113_SHARP_) {
                return cljs.core.conj.call(null, p1__19112_SHARP_, p2__19113_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19132__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19114_SHARP_, p2__19115_SHARP_) {
                return cljs.core.conj.call(null, p1__19114_SHARP_, p2__19115_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19132__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19116_SHARP_, p2__19117_SHARP_) {
                return cljs.core.conj.call(null, p1__19116_SHARP_, p2__19117_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19132__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19118_SHARP_, p2__19119_SHARP_) {
                return cljs.core.conj.call(null, p1__19118_SHARP_, p2__19119_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19132__4 = function() {
            var G__19133__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__19120_SHARP_, p2__19121_SHARP_) {
                  return cljs.core.conj.call(null, p1__19120_SHARP_, cljs.core.apply.call(null, p2__19121_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__19133 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19133__delegate.call(this, x, y, z, args);
            };
            G__19133.cljs$lang$maxFixedArity = 3;
            G__19133.cljs$lang$applyTo = function(arglist__19134) {
              var x = cljs.core.first(arglist__19134);
              arglist__19134 = cljs.core.next(arglist__19134);
              var y = cljs.core.first(arglist__19134);
              arglist__19134 = cljs.core.next(arglist__19134);
              var z = cljs.core.first(arglist__19134);
              var args = cljs.core.rest(arglist__19134);
              return G__19133__delegate(x, y, z, args);
            };
            G__19133.cljs$core$IFn$_invoke$arity$variadic = G__19133__delegate;
            return G__19133;
          }();
          G__19132 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__19132__0.call(this);
              case 1:
                return G__19132__1.call(this, x);
              case 2:
                return G__19132__2.call(this, x, y);
              case 3:
                return G__19132__3.call(this, x, y, z);
              default:
                return G__19132__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19132.cljs$lang$maxFixedArity = 3;
          G__19132.cljs$lang$applyTo = G__19132__4.cljs$lang$applyTo;
          G__19132.cljs$core$IFn$_invoke$arity$0 = G__19132__0;
          G__19132.cljs$core$IFn$_invoke$arity$1 = G__19132__1;
          G__19132.cljs$core$IFn$_invoke$arity$2 = G__19132__2;
          G__19132.cljs$core$IFn$_invoke$arity$3 = G__19132__3;
          G__19132.cljs$core$IFn$_invoke$arity$variadic = G__19132__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__19132;
        }();
      }(fs__$1);
    };
    var G__19131 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19131__delegate.call(this, f, g, h, fs);
    };
    G__19131.cljs$lang$maxFixedArity = 3;
    G__19131.cljs$lang$applyTo = function(arglist__19135) {
      var f = cljs.core.first(arglist__19135);
      arglist__19135 = cljs.core.next(arglist__19135);
      var g = cljs.core.first(arglist__19135);
      arglist__19135 = cljs.core.next(arglist__19135);
      var h = cljs.core.first(arglist__19135);
      var fs = cljs.core.rest(arglist__19135);
      return G__19131__delegate(f, g, h, fs);
    };
    G__19131.cljs$core$IFn$_invoke$arity$variadic = G__19131__delegate;
    return G__19131;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__19136 = cljs.core.next.call(null, coll);
        coll = G__19136;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__19137 = n - 1;
        var G__19138 = cljs.core.next.call(null, coll);
        n = G__19137;
        coll = G__19138;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__19140 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__19140, 0, null);
  var flags = cljs.core.nth.call(null, vec__19140, 1, null);
  var pattern = cljs.core.nth.call(null, vec__19140, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_19142 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_19143__$1 = cljs.core.next.call(null, coll);
      var n_19144 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_19143__$1 && (n_19144 == null || !(n_19144 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_19143__$1), writer, opts);
          var G__19145 = cljs.core.next.call(null, coll_19143__$1);
          var G__19146 = n_19144 - 1;
          coll_19143__$1 = G__19145;
          n_19144 = G__19146;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_19143__$1) && n_19144 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_19142;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__19151 = cljs.core.seq.call(null, ss);
    var chunk__19152 = null;
    var count__19153 = 0;
    var i__19154 = 0;
    while (true) {
      if (i__19154 < count__19153) {
        var s = cljs.core._nth.call(null, chunk__19152, i__19154);
        cljs.core._write.call(null, writer, s);
        var G__19155 = seq__19151;
        var G__19156 = chunk__19152;
        var G__19157 = count__19153;
        var G__19158 = i__19154 + 1;
        seq__19151 = G__19155;
        chunk__19152 = G__19156;
        count__19153 = G__19157;
        i__19154 = G__19158;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__19151);
        if (temp__4126__auto__) {
          var seq__19151__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19151__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19151__$1);
            var G__19159 = cljs.core.chunk_rest.call(null, seq__19151__$1);
            var G__19160 = c__4314__auto__;
            var G__19161 = cljs.core.count.call(null, c__4314__auto__);
            var G__19162 = 0;
            seq__19151 = G__19159;
            chunk__19152 = G__19160;
            count__19153 = G__19161;
            i__19154 = G__19162;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__19151__$1);
            cljs.core._write.call(null, writer, s);
            var G__19163 = cljs.core.next.call(null, seq__19151__$1);
            var G__19164 = null;
            var G__19165 = 0;
            var G__19166 = 0;
            seq__19151 = G__19163;
            chunk__19152 = G__19164;
            count__19153 = G__19165;
            i__19154 = G__19166;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__19167) {
    var writer = cljs.core.first(arglist__19167);
    var ss = cljs.core.rest(arglist__19167);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj19169 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj19169;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = function() {
            var G__19175 = obj;
            if (G__19175) {
              var bit__4208__auto__ = G__19175.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4208__auto__ || G__19175.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__19175.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19175);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19175);
            }
          }();
          if (and__3546__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__19176 = obj;
            if (G__19176) {
              var bit__4201__auto__ = G__19176.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4201__auto__ || G__19176.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__19178 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__19178;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__19177 = obj;
                            if (G__19177) {
                              var bit__4208__auto__ = G__19177.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4208__auto__ || G__19177.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__19177.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__19177);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__19177);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__19183 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__19184 = null;
  var count__19185 = 0;
  var i__19186 = 0;
  while (true) {
    if (i__19186 < count__19185) {
      var obj = cljs.core._nth.call(null, chunk__19184, i__19186);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__19187 = seq__19183;
      var G__19188 = chunk__19184;
      var G__19189 = count__19185;
      var G__19190 = i__19186 + 1;
      seq__19183 = G__19187;
      chunk__19184 = G__19188;
      count__19185 = G__19189;
      i__19186 = G__19190;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19183);
      if (temp__4126__auto__) {
        var seq__19183__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19183__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19183__$1);
          var G__19191 = cljs.core.chunk_rest.call(null, seq__19183__$1);
          var G__19192 = c__4314__auto__;
          var G__19193 = cljs.core.count.call(null, c__4314__auto__);
          var G__19194 = 0;
          seq__19183 = G__19191;
          chunk__19184 = G__19192;
          count__19185 = G__19193;
          i__19186 = G__19194;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__19183__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__19195 = cljs.core.next.call(null, seq__19183__$1);
          var G__19196 = null;
          var G__19197 = 0;
          var G__19198 = 0;
          seq__19183 = G__19195;
          chunk__19184 = G__19196;
          count__19185 = G__19197;
          i__19186 = G__19198;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__19199) {
    var objs = cljs.core.seq(arglist__19199);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__19200) {
    var objs = cljs.core.seq(arglist__19200);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__19201) {
    var objs = cljs.core.seq(arglist__19201);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__19202) {
    var objs = cljs.core.seq(arglist__19202);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__19203) {
    var objs = cljs.core.seq(arglist__19203);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__19204) {
    var objs = cljs.core.seq(arglist__19204);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__19205) {
    var objs = cljs.core.seq(arglist__19205);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__19206) {
    var objs = cljs.core.seq(arglist__19206);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__19207) {
    var iref = cljs.core.first(arglist__19207);
    arglist__19207 = cljs.core.next(arglist__19207);
    var f = cljs.core.first(arglist__19207);
    var args = cljs.core.rest(arglist__19207);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__19208_SHARP_, p2__19209_SHARP_) {
    var ret = f1.call(null, p1__19208_SHARP_, p2__19209_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19210 = null;
        var G__19210__0 = function() {
          return f1.call(null);
        };
        var G__19210__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19210__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__19210 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19210__0.call(this);
            case 1:
              return G__19210__1.call(this, result);
            case 2:
              return G__19210__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19210.cljs$core$IFn$_invoke$arity$0 = G__19210__0;
        G__19210.cljs$core$IFn$_invoke$arity$1 = G__19210__1;
        G__19210.cljs$core$IFn$_invoke$arity$2 = G__19210__2;
        return G__19210;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__19211 = null;
          var G__19211__0 = function() {
            return f1.call(null);
          };
          var G__19211__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19211__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__19211 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19211__0.call(this);
              case 1:
                return G__19211__1.call(this, result);
              case 2:
                return G__19211__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19211.cljs$core$IFn$_invoke$arity$0 = G__19211__0;
          G__19211.cljs$core$IFn$_invoke$arity$1 = G__19211__1;
          G__19211.cljs$core$IFn$_invoke$arity$2 = G__19211__2;
          return G__19211;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__19213_SHARP_, p2__19212_SHARP_) {
    return proc.call(null, p2__19212_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj19215 = {};
  return obj19215;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__19217 = k;
    if (G__19217) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__19217.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__19217.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19217);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19217);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__19231 = x;
      if (G__19231) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__19231.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__19231.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19231);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19231);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj19233 = {};
              return obj19233;
            }();
            var seq__19234_19244 = cljs.core.seq.call(null, x);
            var chunk__19235_19245 = null;
            var count__19236_19246 = 0;
            var i__19237_19247 = 0;
            while (true) {
              if (i__19237_19247 < count__19236_19246) {
                var vec__19238_19248 = cljs.core._nth.call(null, chunk__19235_19245, i__19237_19247);
                var k_19249 = cljs.core.nth.call(null, vec__19238_19248, 0, null);
                var v_19250 = cljs.core.nth.call(null, vec__19238_19248, 1, null);
                m[cljs.core.key__GT_js.call(null, k_19249)] = clj__GT_js.call(null, v_19250);
                var G__19251 = seq__19234_19244;
                var G__19252 = chunk__19235_19245;
                var G__19253 = count__19236_19246;
                var G__19254 = i__19237_19247 + 1;
                seq__19234_19244 = G__19251;
                chunk__19235_19245 = G__19252;
                count__19236_19246 = G__19253;
                i__19237_19247 = G__19254;
                continue;
              } else {
                var temp__4126__auto___19255 = cljs.core.seq.call(null, seq__19234_19244);
                if (temp__4126__auto___19255) {
                  var seq__19234_19256__$1 = temp__4126__auto___19255;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__19234_19256__$1)) {
                    var c__4314__auto___19257 = cljs.core.chunk_first.call(null, seq__19234_19256__$1);
                    var G__19258 = cljs.core.chunk_rest.call(null, seq__19234_19256__$1);
                    var G__19259 = c__4314__auto___19257;
                    var G__19260 = cljs.core.count.call(null, c__4314__auto___19257);
                    var G__19261 = 0;
                    seq__19234_19244 = G__19258;
                    chunk__19235_19245 = G__19259;
                    count__19236_19246 = G__19260;
                    i__19237_19247 = G__19261;
                    continue;
                  } else {
                    var vec__19239_19262 = cljs.core.first.call(null, seq__19234_19256__$1);
                    var k_19263 = cljs.core.nth.call(null, vec__19239_19262, 0, null);
                    var v_19264 = cljs.core.nth.call(null, vec__19239_19262, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_19263)] = clj__GT_js.call(null, v_19264);
                    var G__19265 = cljs.core.next.call(null, seq__19234_19256__$1);
                    var G__19266 = null;
                    var G__19267 = 0;
                    var G__19268 = 0;
                    seq__19234_19244 = G__19265;
                    chunk__19235_19245 = G__19266;
                    count__19236_19246 = G__19267;
                    i__19237_19247 = G__19268;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__19240_19269 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__19241_19270 = null;
              var count__19242_19271 = 0;
              var i__19243_19272 = 0;
              while (true) {
                if (i__19243_19272 < count__19242_19271) {
                  var x_19273__$1 = cljs.core._nth.call(null, chunk__19241_19270, i__19243_19272);
                  arr.push(x_19273__$1);
                  var G__19274 = seq__19240_19269;
                  var G__19275 = chunk__19241_19270;
                  var G__19276 = count__19242_19271;
                  var G__19277 = i__19243_19272 + 1;
                  seq__19240_19269 = G__19274;
                  chunk__19241_19270 = G__19275;
                  count__19242_19271 = G__19276;
                  i__19243_19272 = G__19277;
                  continue;
                } else {
                  var temp__4126__auto___19278 = cljs.core.seq.call(null, seq__19240_19269);
                  if (temp__4126__auto___19278) {
                    var seq__19240_19279__$1 = temp__4126__auto___19278;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__19240_19279__$1)) {
                      var c__4314__auto___19280 = cljs.core.chunk_first.call(null, seq__19240_19279__$1);
                      var G__19281 = cljs.core.chunk_rest.call(null, seq__19240_19279__$1);
                      var G__19282 = c__4314__auto___19280;
                      var G__19283 = cljs.core.count.call(null, c__4314__auto___19280);
                      var G__19284 = 0;
                      seq__19240_19269 = G__19281;
                      chunk__19241_19270 = G__19282;
                      count__19242_19271 = G__19283;
                      i__19243_19272 = G__19284;
                      continue;
                    } else {
                      var x_19285__$1 = cljs.core.first.call(null, seq__19240_19279__$1);
                      arr.push(x_19285__$1);
                      var G__19286 = cljs.core.next.call(null, seq__19240_19279__$1);
                      var G__19287 = null;
                      var G__19288 = 0;
                      var G__19289 = 0;
                      seq__19240_19269 = G__19286;
                      chunk__19241_19270 = G__19287;
                      count__19242_19271 = G__19288;
                      i__19243_19272 = G__19289;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj19291 = {};
  return obj19291;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__19312__delegate = function(x, opts) {
      if (function() {
        var G__19302 = x;
        if (G__19302) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__19302.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__19302.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__19302);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__19302);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__19303 = opts;
          var map__19303__$1 = cljs.core.seq_QMARK_.call(null, map__19303) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19303) : map__19303;
          var keywordize_keys = cljs.core.get.call(null, map__19303__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__19303, map__19303__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4283__auto__ = function(map__19303, map__19303__$1, keywordize_keys, keyfn) {
                          return function iter__19308(s__19309) {
                            return new cljs.core.LazySeq(null, function(map__19303, map__19303__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__19309__$1 = s__19309;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__19309__$1);
                                  if (temp__4126__auto__) {
                                    var s__19309__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__19309__$2)) {
                                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19309__$2);
                                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                      var b__19311 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                      if (function() {
                                        var i__19310 = 0;
                                        while (true) {
                                          if (i__19310 < size__4282__auto__) {
                                            var k = cljs.core._nth.call(null, c__4281__auto__, i__19310);
                                            cljs.core.chunk_append.call(null, b__19311, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__19313 = i__19310 + 1;
                                            i__19310 = G__19313;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19311), iter__19308.call(null, cljs.core.chunk_rest.call(null, s__19309__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19311), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__19309__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__19308.call(null, cljs.core.rest.call(null, s__19309__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__19303, map__19303__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__19303, map__19303__$1, keywordize_keys, keyfn);
                        return iter__4283__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__19303, map__19303__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__19312 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19312__delegate.call(this, x, opts);
    };
    G__19312.cljs$lang$maxFixedArity = 1;
    G__19312.cljs$lang$applyTo = function(arglist__19314) {
      var x = cljs.core.first(arglist__19314);
      var opts = cljs.core.rest(arglist__19314);
      return G__19312__delegate(x, opts);
    };
    G__19312.cljs$core$IFn$_invoke$arity$variadic = G__19312__delegate;
    return G__19312;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__19315__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__19315 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19315__delegate.call(this, args);
      };
      G__19315.cljs$lang$maxFixedArity = 0;
      G__19315.cljs$lang$applyTo = function(arglist__19316) {
        var args = cljs.core.seq(arglist__19316);
        return G__19315__delegate(args);
      };
      G__19315.cljs$core$IFn$_invoke$arity$variadic = G__19315__delegate;
      return G__19315;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__19317 = ret;
        f = G__19317;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__19318__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__19318 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19318__delegate.call(this, f, args);
    };
    G__19318.cljs$lang$maxFixedArity = 1;
    G__19318.cljs$lang$applyTo = function(arglist__19319) {
      var f = cljs.core.first(arglist__19319);
      var args = cljs.core.rest(arglist__19319);
      return G__19318__delegate(f, args);
    };
    G__19318.cljs$core$IFn$_invoke$arity$variadic = G__19318__delegate;
    return G__19318;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__19320) {
    var f = cljs.core.first(arglist__19320);
    var args = cljs.core.rest(arglist__19320);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3558__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var or__3558__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3558__auto____$1) {
        return or__3558__auto____$1;
      } else {
        var and__3546__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3546__auto__) {
          var and__3546__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3546__auto____$1) {
            var and__3546__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3546__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__19321 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__19322 = i + 1;
                  ret = G__19321;
                  i = G__19322;
                  continue;
                }
                break;
              }
            } else {
              return and__3546__auto____$2;
            }
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3558__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__19323_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__19323_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__19323_SHARP_), cljs.core.second.call(null, p1__19323_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__19324_SHARP_, p2__19325_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__19324_SHARP_, p2__19325_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3558__auto__ = cljs.core.truth_(function() {
    var and__3546__auto__ = xprefs;
    if (cljs.core.truth_(and__3546__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3546__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var or__3558__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__19326 = cljs.core.rest.call(null, ps);
          ps = G__19326;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3558__auto____$1)) {
      return or__3558__auto____$1;
    } else {
      var or__3558__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__19327 = cljs.core.rest.call(null, ps);
            ps = G__19327;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3558__auto____$2)) {
        return or__3558__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3558__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__19330) {
    var vec__19331 = p__19330;
    var k = cljs.core.nth.call(null, vec__19331, 0, null);
    var _ = cljs.core.nth.call(null, vec__19331, 1, null);
    var e = vec__19331;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3558__auto__ = be == null;
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj19333 = {};
  return obj19333;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._reset[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._reset["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._add_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._add_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._remove_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._remove_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._prefer_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._get_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._get_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._methods[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._methods["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._prefers[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._prefers["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__19335 = null;
  var G__19335__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__19335__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__19335__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__19335__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__19335__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__19335__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__19335__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__19335__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__19335__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__19335__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__19335__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__19335__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__19335__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__19335__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__19335__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__19335__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__19335__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__19335__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__19335__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__19335__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__19335__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__19335 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__19335__2.call(this, self__, a);
      case 3:
        return G__19335__3.call(this, self__, a, b);
      case 4:
        return G__19335__4.call(this, self__, a, b, c);
      case 5:
        return G__19335__5.call(this, self__, a, b, c, d);
      case 6:
        return G__19335__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__19335__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__19335__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__19335__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__19335__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19335__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19335__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19335__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19335__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19335__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19335__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19335__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19335__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19335__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19335__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19335__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19335__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19335.cljs$core$IFn$_invoke$arity$2 = G__19335__2;
  G__19335.cljs$core$IFn$_invoke$arity$3 = G__19335__3;
  G__19335.cljs$core$IFn$_invoke$arity$4 = G__19335__4;
  G__19335.cljs$core$IFn$_invoke$arity$5 = G__19335__5;
  G__19335.cljs$core$IFn$_invoke$arity$6 = G__19335__6;
  G__19335.cljs$core$IFn$_invoke$arity$7 = G__19335__7;
  G__19335.cljs$core$IFn$_invoke$arity$8 = G__19335__8;
  G__19335.cljs$core$IFn$_invoke$arity$9 = G__19335__9;
  G__19335.cljs$core$IFn$_invoke$arity$10 = G__19335__10;
  G__19335.cljs$core$IFn$_invoke$arity$11 = G__19335__11;
  G__19335.cljs$core$IFn$_invoke$arity$12 = G__19335__12;
  G__19335.cljs$core$IFn$_invoke$arity$13 = G__19335__13;
  G__19335.cljs$core$IFn$_invoke$arity$14 = G__19335__14;
  G__19335.cljs$core$IFn$_invoke$arity$15 = G__19335__15;
  G__19335.cljs$core$IFn$_invoke$arity$16 = G__19335__16;
  G__19335.cljs$core$IFn$_invoke$arity$17 = G__19335__17;
  G__19335.cljs$core$IFn$_invoke$arity$18 = G__19335__18;
  G__19335.cljs$core$IFn$_invoke$arity$19 = G__19335__19;
  G__19335.cljs$core$IFn$_invoke$arity$20 = G__19335__20;
  G__19335.cljs$core$IFn$_invoke$arity$21 = G__19335__21;
  G__19335.cljs$core$IFn$_invoke$arity$22 = G__19335__22;
  return G__19335;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args19334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19334)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__22762_SHARP_) {
      return max === p1__22762_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__22763__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__22763 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22763__delegate.call(this, s1, s2, sets);
    };
    G__22763.cljs$lang$maxFixedArity = 2;
    G__22763.cljs$lang$applyTo = function(arglist__22764) {
      var s1 = cljs.core.first(arglist__22764);
      arglist__22764 = cljs.core.next(arglist__22764);
      var s2 = cljs.core.first(arglist__22764);
      var sets = cljs.core.rest(arglist__22764);
      return G__22763__delegate(s1, s2, sets);
    };
    G__22763.cljs$core$IFn$_invoke$arity$variadic = G__22763__delegate;
    return G__22763;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__22766 = s2;
        var G__22767 = s1;
        s1 = G__22766;
        s2 = G__22767;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__22768__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__22765_SHARP_) {
        return-cljs.core.count.call(null, p1__22765_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__22768 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22768__delegate.call(this, s1, s2, sets);
    };
    G__22768.cljs$lang$maxFixedArity = 2;
    G__22768.cljs$lang$applyTo = function(arglist__22769) {
      var s1 = cljs.core.first(arglist__22769);
      arglist__22769 = cljs.core.next(arglist__22769);
      var s2 = cljs.core.first(arglist__22769);
      var sets = cljs.core.rest(arglist__22769);
      return G__22768__delegate(s1, s2, sets);
    };
    G__22768.cljs$core$IFn$_invoke$arity$variadic = G__22768__delegate;
    return G__22768;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__22770__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__22770 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22770__delegate.call(this, s1, s2, sets);
    };
    G__22770.cljs$lang$maxFixedArity = 2;
    G__22770.cljs$lang$applyTo = function(arglist__22771) {
      var s1 = cljs.core.first(arglist__22771);
      arglist__22771 = cljs.core.next(arglist__22771);
      var s2 = cljs.core.first(arglist__22771);
      var sets = cljs.core.rest(arglist__22771);
      return G__22770__delegate(s1, s2, sets);
    };
    G__22770.cljs$core$IFn$_invoke$arity$variadic = G__22770__delegate;
    return G__22770;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__22772_SHARP_) {
    return cljs.core.select_keys.call(null, p1__22772_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__22775) {
    var vec__22776 = p__22775;
    var old = cljs.core.nth.call(null, vec__22776, 0, null);
    var new$ = cljs.core.nth.call(null, vec__22776, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__22777_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__22777_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__22780) {
    var vec__22781 = p__22780;
    var k = cljs.core.nth.call(null, vec__22781, 0, null);
    var v = cljs.core.nth.call(null, vec__22781, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__22788 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__22788, 0, null);
      var s = cljs.core.nth.call(null, vec__22788, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__22788, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__22788, r, s, idx) {
              return function(p1__22782_SHARP_, p2__22783_SHARP_) {
                return cljs.core.conj.call(null, p1__22782_SHARP_, cljs.core.merge.call(null, p2__22783_SHARP_, x));
              };
            }(found, ks, vec__22788, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__22788, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__22789 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__22789, 0, null);
    var s = cljs.core.nth.call(null, vec__22789, 1, null);
    var k = cljs.core.nth.call(null, vec__22789, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__22789, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__22789, r, s, k, idx) {
            return function(p1__22784_SHARP_, p2__22785_SHARP_) {
              return cljs.core.conj.call(null, p1__22784_SHARP_, cljs.core.merge.call(null, p2__22785_SHARP_, x));
            };
          }(found, vec__22789, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__22789, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__22790_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__22790_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__22791_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__22791_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__21995 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__21995;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__21999 = cljs.core._EQ_;
    var expr__22000 = limit;
    if (cljs.core.truth_(pred__21999.call(null, 1, expr__22000))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__21999.call(null, 2, expr__22000))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__22002 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__22003 = limit__$1 - 1;
            var G__22004 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__22002;
            limit__$1 = G__22003;
            parts = G__22004;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__22005 = index - 1;
        index = G__22005;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___22006 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___22006)) {
        var replacement_22007 = temp__4124__auto___22006;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_22007));
      } else {
        buffer.append(ch);
      }
      var G__22008 = index + 1;
      index = G__22008;
      continue;
    }
    break;
  }
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj22559 = {};
  return obj22559;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = sablono.util.to_str[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.util.to_str["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj22561 = {};
  return obj22561;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = sablono.util.to_uri[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.util.to_uri["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__22562) {
    var xs = cljs.core.seq(arglist__22562);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__22564 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__22564, 0, null);
    var words = cljs.core.nthnext.call(null, vec__22564, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var ks = cljs.core.keys.call(null, m);
    var kmap = cljs.core.zipmap.call(null, ks, cljs.core.map.call(null, sablono.util.camel_case, ks));
    var G__22566 = clojure.set.rename_keys.call(null, m, kmap);
    var G__22566__$1 = cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.update_in.call(null, G__22566, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", -496642736)], null), camel_case_keys) : G__22566;
    return G__22566__$1;
  } else {
    return m;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__22567_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__22567_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22567_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__22567_SHARP_)) {
          return p1__22567_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22567_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__22568) {
    var maps = cljs.core.seq(arglist__22568);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__22572 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__22572, 0, null);
  var names = cljs.core.nth.call(null, vec__22572, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__22572, tag_name, names) {
    return function(p1__22569_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__22569_SHARP_));
    };
  }(matches, vec__22572, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__22572, tag_name, names) {
    return function(p1__22570_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__22570_SHARP_));
    };
  }(matches, vec__22572, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__22573) {
  var vec__22576 = p__22573;
  var tag = cljs.core.nth.call(null, vec__22576, 0, null);
  var content = cljs.core.nthnext.call(null, vec__22576, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__22577 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__22577, 0, null);
  var id = cljs.core.nth.call(null, vec__22577, 1, null);
  var class$ = cljs.core.nth.call(null, vec__22577, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj22555 = {};
  return obj22555;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__22557 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__22557, 0, null);
  var attrs = cljs.core.nth.call(null, vec__22557, 1, null);
  var content = cljs.core.nth.call(null, vec__22557, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__22446) {
    var vec__22447 = p__22446;
    var k = cljs.core.nth.call(null, vec__22447, 0, null);
    var v = cljs.core.nth.call(null, vec__22447, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__22450) {
    var vec__22451 = p__22450;
    var k = cljs.core.nth.call(null, vec__22451, 0, null);
    var v = cljs.core.nth.call(null, vec__22451, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__22454__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__22453 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__22453, 0, null);
        var body = cljs.core.nthnext.call(null, vec__22453, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__22454 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__22454__delegate.call(this, args);
    };
    G__22454.cljs$lang$maxFixedArity = 0;
    G__22454.cljs$lang$applyTo = function(arglist__22455) {
      var args = cljs.core.seq(arglist__22455);
      return G__22454__delegate(args);
    };
    G__22454.cljs$core$IFn$_invoke$arity$variadic = G__22454__delegate;
    return G__22454;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4283__auto__ = function iter__22460(s__22461) {
    return new cljs.core.LazySeq(null, function() {
      var s__22461__$1 = s__22461;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__22461__$1);
        if (temp__4126__auto__) {
          var s__22461__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__22461__$2)) {
            var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22461__$2);
            var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
            var b__22463 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
            if (function() {
              var i__22462 = 0;
              while (true) {
                if (i__22462 < size__4282__auto__) {
                  var args = cljs.core._nth.call(null, c__4281__auto__, i__22462);
                  cljs.core.chunk_append.call(null, b__22463, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__22464 = i__22462 + 1;
                  i__22462 = G__22464;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22463), iter__22460.call(null, cljs.core.chunk_rest.call(null, s__22461__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22463), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__22461__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__22460.call(null, cljs.core.rest.call(null, s__22461__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4283__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4283__auto__ = function iter__22469(s__22470) {
      return new cljs.core.LazySeq(null, function() {
        var s__22470__$1 = s__22470;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__22470__$1);
          if (temp__4126__auto__) {
            var s__22470__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__22470__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22470__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__22472 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__22471 = 0;
                while (true) {
                  if (i__22471 < size__4282__auto__) {
                    var style = cljs.core._nth.call(null, c__4281__auto__, i__22471);
                    cljs.core.chunk_append.call(null, b__22472, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__22473 = i__22471 + 1;
                    i__22471 = G__22473;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22472), iter__22469.call(null, cljs.core.chunk_rest.call(null, s__22470__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22472), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__22470__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__22469.call(null, 
              cljs.core.rest.call(null, s__22470__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__22474) {
    var styles = cljs.core.seq(arglist__22474);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to22475 = function() {
  var link_to22475__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to22475 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to22475__delegate.call(this, url, content);
  };
  link_to22475.cljs$lang$maxFixedArity = 1;
  link_to22475.cljs$lang$applyTo = function(arglist__22476) {
    var url = cljs.core.first(arglist__22476);
    var content = cljs.core.rest(arglist__22476);
    return link_to22475__delegate(url, content);
  };
  link_to22475.cljs$core$IFn$_invoke$arity$variadic = link_to22475__delegate;
  return link_to22475;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to22475);
sablono.core.mail_to22477 = function() {
  var mail_to22477__delegate = function(e_mail, p__22478) {
    var vec__22480 = p__22478;
    var content = cljs.core.nth.call(null, vec__22480, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3558__auto__ = content;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to22477 = function(e_mail, var_args) {
    var p__22478 = null;
    if (arguments.length > 1) {
      p__22478 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to22477__delegate.call(this, e_mail, p__22478);
  };
  mail_to22477.cljs$lang$maxFixedArity = 1;
  mail_to22477.cljs$lang$applyTo = function(arglist__22481) {
    var e_mail = cljs.core.first(arglist__22481);
    var p__22478 = cljs.core.rest(arglist__22481);
    return mail_to22477__delegate(e_mail, p__22478);
  };
  mail_to22477.cljs$core$IFn$_invoke$arity$variadic = mail_to22477__delegate;
  return mail_to22477;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to22477);
sablono.core.unordered_list22482 = function unordered_list22482(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4283__auto__ = function iter__22487(s__22488) {
      return new cljs.core.LazySeq(null, function() {
        var s__22488__$1 = s__22488;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__22488__$1);
          if (temp__4126__auto__) {
            var s__22488__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__22488__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22488__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__22490 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__22489 = 0;
                while (true) {
                  if (i__22489 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__22489);
                    cljs.core.chunk_append.call(null, b__22490, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__22491 = i__22489 + 1;
                    i__22489 = G__22491;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22490), iter__22487.call(null, cljs.core.chunk_rest.call(null, s__22488__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22490), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__22488__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__22487.call(null, cljs.core.rest.call(null, s__22488__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list22482);
sablono.core.ordered_list22492 = function ordered_list22492(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4283__auto__ = function iter__22497(s__22498) {
      return new cljs.core.LazySeq(null, function() {
        var s__22498__$1 = s__22498;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__22498__$1);
          if (temp__4126__auto__) {
            var s__22498__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__22498__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22498__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__22500 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__22499 = 0;
                while (true) {
                  if (i__22499 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__22499);
                    cljs.core.chunk_append.call(null, b__22500, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__22501 = i__22499 + 1;
                    i__22499 = G__22501;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22500), iter__22497.call(null, cljs.core.chunk_rest.call(null, s__22498__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22500), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__22498__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__22497.call(null, cljs.core.rest.call(null, s__22498__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list22492);
sablono.core.image22502 = function() {
  var image22502 = null;
  var image22502__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image22502__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image22502 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image22502__1.call(this, src);
      case 2:
        return image22502__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image22502.cljs$core$IFn$_invoke$arity$1 = image22502__1;
  image22502.cljs$core$IFn$_invoke$arity$2 = image22502__2;
  return image22502;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image22502);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__22503_SHARP_, p2__22504_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__22503_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__22504_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__22505_SHARP_, p2__22506_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__22505_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__22506_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field22507 = function() {
  var color_field22507 = null;
  var color_field22507__1 = function(name__13522__auto__) {
    return color_field22507.call(null, name__13522__auto__, null);
  };
  var color_field22507__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1642760596, null)), name__13522__auto__, value__13523__auto__);
  };
  color_field22507 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field22507__1.call(this, name__13522__auto__);
      case 2:
        return color_field22507__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field22507.cljs$core$IFn$_invoke$arity$1 = color_field22507__1;
  color_field22507.cljs$core$IFn$_invoke$arity$2 = color_field22507__2;
  return color_field22507;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field22507);
sablono.core.date_field22508 = function() {
  var date_field22508 = null;
  var date_field22508__1 = function(name__13522__auto__) {
    return date_field22508.call(null, name__13522__auto__, null);
  };
  var date_field22508__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", 177097065, null)), name__13522__auto__, value__13523__auto__);
  };
  date_field22508 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field22508__1.call(this, name__13522__auto__);
      case 2:
        return date_field22508__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field22508.cljs$core$IFn$_invoke$arity$1 = date_field22508__1;
  date_field22508.cljs$core$IFn$_invoke$arity$2 = date_field22508__2;
  return date_field22508;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field22508);
sablono.core.datetime_field22509 = function() {
  var datetime_field22509 = null;
  var datetime_field22509__1 = function(name__13522__auto__) {
    return datetime_field22509.call(null, name__13522__auto__, null);
  };
  var datetime_field22509__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null)), name__13522__auto__, value__13523__auto__);
  };
  datetime_field22509 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field22509__1.call(this, name__13522__auto__);
      case 2:
        return datetime_field22509__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field22509.cljs$core$IFn$_invoke$arity$1 = datetime_field22509__1;
  datetime_field22509.cljs$core$IFn$_invoke$arity$2 = datetime_field22509__2;
  return datetime_field22509;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field22509);
sablono.core.datetime_local_field22510 = function() {
  var datetime_local_field22510 = null;
  var datetime_local_field22510__1 = function(name__13522__auto__) {
    return datetime_local_field22510.call(null, name__13522__auto__, null);
  };
  var datetime_local_field22510__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null)), name__13522__auto__, value__13523__auto__);
  };
  datetime_local_field22510 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field22510__1.call(this, name__13522__auto__);
      case 2:
        return datetime_local_field22510__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field22510.cljs$core$IFn$_invoke$arity$1 = datetime_local_field22510__1;
  datetime_local_field22510.cljs$core$IFn$_invoke$arity$2 = datetime_local_field22510__2;
  return datetime_local_field22510;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field22510);
sablono.core.email_field22511 = function() {
  var email_field22511 = null;
  var email_field22511__1 = function(name__13522__auto__) {
    return email_field22511.call(null, name__13522__auto__, null);
  };
  var email_field22511__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1238619063, null)), name__13522__auto__, value__13523__auto__);
  };
  email_field22511 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field22511__1.call(this, name__13522__auto__);
      case 2:
        return email_field22511__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field22511.cljs$core$IFn$_invoke$arity$1 = email_field22511__1;
  email_field22511.cljs$core$IFn$_invoke$arity$2 = email_field22511__2;
  return email_field22511;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field22511);
sablono.core.file_field22512 = function() {
  var file_field22512 = null;
  var file_field22512__1 = function(name__13522__auto__) {
    return file_field22512.call(null, name__13522__auto__, null);
  };
  var file_field22512__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", 370885649, null)), name__13522__auto__, value__13523__auto__);
  };
  file_field22512 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field22512__1.call(this, name__13522__auto__);
      case 2:
        return file_field22512__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field22512.cljs$core$IFn$_invoke$arity$1 = file_field22512__1;
  file_field22512.cljs$core$IFn$_invoke$arity$2 = file_field22512__2;
  return file_field22512;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field22512);
sablono.core.hidden_field22513 = function() {
  var hidden_field22513 = null;
  var hidden_field22513__1 = function(name__13522__auto__) {
    return hidden_field22513.call(null, name__13522__auto__, null);
  };
  var hidden_field22513__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null)), name__13522__auto__, value__13523__auto__);
  };
  hidden_field22513 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field22513__1.call(this, name__13522__auto__);
      case 2:
        return hidden_field22513__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field22513.cljs$core$IFn$_invoke$arity$1 = hidden_field22513__1;
  hidden_field22513.cljs$core$IFn$_invoke$arity$2 = hidden_field22513__2;
  return hidden_field22513;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field22513);
sablono.core.month_field22514 = function() {
  var month_field22514 = null;
  var month_field22514__1 = function(name__13522__auto__) {
    return month_field22514.call(null, name__13522__auto__, null);
  };
  var month_field22514__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -319717006, null)), name__13522__auto__, value__13523__auto__);
  };
  month_field22514 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field22514__1.call(this, name__13522__auto__);
      case 2:
        return month_field22514__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field22514.cljs$core$IFn$_invoke$arity$1 = month_field22514__1;
  month_field22514.cljs$core$IFn$_invoke$arity$2 = month_field22514__2;
  return month_field22514;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field22514);
sablono.core.number_field22515 = function() {
  var number_field22515 = null;
  var number_field22515__1 = function(name__13522__auto__) {
    return number_field22515.call(null, name__13522__auto__, null);
  };
  var number_field22515__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", -1084057331, null)), name__13522__auto__, value__13523__auto__);
  };
  number_field22515 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field22515__1.call(this, name__13522__auto__);
      case 2:
        return number_field22515__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field22515.cljs$core$IFn$_invoke$arity$1 = number_field22515__1;
  number_field22515.cljs$core$IFn$_invoke$arity$2 = number_field22515__2;
  return number_field22515;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field22515);
sablono.core.password_field22516 = function() {
  var password_field22516 = null;
  var password_field22516__1 = function(name__13522__auto__) {
    return password_field22516.call(null, name__13522__auto__, null);
  };
  var password_field22516__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", 2057553998, null)), name__13522__auto__, value__13523__auto__);
  };
  password_field22516 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field22516__1.call(this, name__13522__auto__);
      case 2:
        return password_field22516__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field22516.cljs$core$IFn$_invoke$arity$1 = password_field22516__1;
  password_field22516.cljs$core$IFn$_invoke$arity$2 = password_field22516__2;
  return password_field22516;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field22516);
sablono.core.range_field22517 = function() {
  var range_field22517 = null;
  var range_field22517__1 = function(name__13522__auto__) {
    return range_field22517.call(null, name__13522__auto__, null);
  };
  var range_field22517__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1014743483, null)), name__13522__auto__, value__13523__auto__);
  };
  range_field22517 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field22517__1.call(this, name__13522__auto__);
      case 2:
        return range_field22517__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field22517.cljs$core$IFn$_invoke$arity$1 = range_field22517__1;
  range_field22517.cljs$core$IFn$_invoke$arity$2 = range_field22517__2;
  return range_field22517;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field22517);
sablono.core.search_field22518 = function() {
  var search_field22518 = null;
  var search_field22518__1 = function(name__13522__auto__) {
    return search_field22518.call(null, name__13522__auto__, null);
  };
  var search_field22518__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", -1089495947, null)), name__13522__auto__, value__13523__auto__);
  };
  search_field22518 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field22518__1.call(this, name__13522__auto__);
      case 2:
        return search_field22518__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field22518.cljs$core$IFn$_invoke$arity$1 = search_field22518__1;
  search_field22518.cljs$core$IFn$_invoke$arity$2 = search_field22518__2;
  return search_field22518;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field22518);
sablono.core.tel_field22519 = function() {
  var tel_field22519 = null;
  var tel_field22519__1 = function(name__13522__auto__) {
    return tel_field22519.call(null, name__13522__auto__, null);
  };
  var tel_field22519__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null)), name__13522__auto__, value__13523__auto__);
  };
  tel_field22519 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field22519__1.call(this, name__13522__auto__);
      case 2:
        return tel_field22519__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field22519.cljs$core$IFn$_invoke$arity$1 = tel_field22519__1;
  tel_field22519.cljs$core$IFn$_invoke$arity$2 = tel_field22519__2;
  return tel_field22519;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field22519);
sablono.core.text_field22520 = function() {
  var text_field22520 = null;
  var text_field22520__1 = function(name__13522__auto__) {
    return text_field22520.call(null, name__13522__auto__, null);
  };
  var text_field22520__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -150030170, null)), name__13522__auto__, value__13523__auto__);
  };
  text_field22520 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field22520__1.call(this, name__13522__auto__);
      case 2:
        return text_field22520__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field22520.cljs$core$IFn$_invoke$arity$1 = text_field22520__1;
  text_field22520.cljs$core$IFn$_invoke$arity$2 = text_field22520__2;
  return text_field22520;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field22520);
sablono.core.time_field22521 = function() {
  var time_field22521 = null;
  var time_field22521__1 = function(name__13522__auto__) {
    return time_field22521.call(null, name__13522__auto__, null);
  };
  var time_field22521__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1268547887, null)), name__13522__auto__, value__13523__auto__);
  };
  time_field22521 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field22521__1.call(this, name__13522__auto__);
      case 2:
        return time_field22521__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field22521.cljs$core$IFn$_invoke$arity$1 = time_field22521__1;
  time_field22521.cljs$core$IFn$_invoke$arity$2 = time_field22521__2;
  return time_field22521;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field22521);
sablono.core.url_field22522 = function() {
  var url_field22522 = null;
  var url_field22522__1 = function(name__13522__auto__) {
    return url_field22522.call(null, name__13522__auto__, null);
  };
  var url_field22522__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", 1916828573, null)), name__13522__auto__, value__13523__auto__);
  };
  url_field22522 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field22522__1.call(this, name__13522__auto__);
      case 2:
        return url_field22522__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field22522.cljs$core$IFn$_invoke$arity$1 = url_field22522__1;
  url_field22522.cljs$core$IFn$_invoke$arity$2 = url_field22522__2;
  return url_field22522;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field22522);
sablono.core.week_field22523 = function() {
  var week_field22523 = null;
  var week_field22523__1 = function(name__13522__auto__) {
    return week_field22523.call(null, name__13522__auto__, null);
  };
  var week_field22523__2 = function(name__13522__auto__, value__13523__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", 314058249, null)), name__13522__auto__, value__13523__auto__);
  };
  week_field22523 = function(name__13522__auto__, value__13523__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field22523__1.call(this, name__13522__auto__);
      case 2:
        return week_field22523__2.call(this, name__13522__auto__, value__13523__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field22523.cljs$core$IFn$_invoke$arity$1 = week_field22523__1;
  week_field22523.cljs$core$IFn$_invoke$arity$2 = week_field22523__2;
  return week_field22523;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field22523);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box22524 = function() {
  var check_box22524 = null;
  var check_box22524__1 = function(name) {
    return check_box22524.call(null, name, null);
  };
  var check_box22524__2 = function(name, checked_QMARK_) {
    return check_box22524.call(null, name, checked_QMARK_, "true");
  };
  var check_box22524__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box22524 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box22524__1.call(this, name);
      case 2:
        return check_box22524__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box22524__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box22524.cljs$core$IFn$_invoke$arity$1 = check_box22524__1;
  check_box22524.cljs$core$IFn$_invoke$arity$2 = check_box22524__2;
  check_box22524.cljs$core$IFn$_invoke$arity$3 = check_box22524__3;
  return check_box22524;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box22524);
sablono.core.radio_button22525 = function() {
  var radio_button22525 = null;
  var radio_button22525__1 = function(group) {
    return radio_button22525.call(null, group, null);
  };
  var radio_button22525__2 = function(group, checked_QMARK_) {
    return radio_button22525.call(null, group, checked_QMARK_, "true");
  };
  var radio_button22525__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button22525 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button22525__1.call(this, group);
      case 2:
        return radio_button22525__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button22525__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button22525.cljs$core$IFn$_invoke$arity$1 = radio_button22525__1;
  radio_button22525.cljs$core$IFn$_invoke$arity$2 = radio_button22525__2;
  radio_button22525.cljs$core$IFn$_invoke$arity$3 = radio_button22525__3;
  return radio_button22525;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button22525);
sablono.core.select_options22526 = function() {
  var select_options22526 = null;
  var select_options22526__1 = function(coll) {
    return select_options22526.call(null, coll, null);
  };
  var select_options22526__2 = function(coll, selected) {
    var iter__4283__auto__ = function iter__22535(s__22536) {
      return new cljs.core.LazySeq(null, function() {
        var s__22536__$1 = s__22536;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__22536__$1);
          if (temp__4126__auto__) {
            var s__22536__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__22536__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22536__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__22538 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__22537 = 0;
                while (true) {
                  if (i__22537 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__22537);
                    cljs.core.chunk_append.call(null, b__22538, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__22541 = x;
                      var text = cljs.core.nth.call(null, vec__22541, 0, null);
                      var val = cljs.core.nth.call(null, vec__22541, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__22541, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options22526.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__22543 = i__22537 + 1;
                    i__22537 = G__22543;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22538), iter__22535.call(null, cljs.core.chunk_rest.call(null, s__22536__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22538), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__22536__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__22542 = x;
                var text = cljs.core.nth.call(null, vec__22542, 0, null);
                var val = cljs.core.nth.call(null, vec__22542, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__22542, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options22526.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__22535.call(null, cljs.core.rest.call(null, s__22536__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  };
  select_options22526 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options22526__1.call(this, coll);
      case 2:
        return select_options22526__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options22526.cljs$core$IFn$_invoke$arity$1 = select_options22526__1;
  select_options22526.cljs$core$IFn$_invoke$arity$2 = select_options22526__2;
  return select_options22526;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options22526);
sablono.core.drop_down22544 = function() {
  var drop_down22544 = null;
  var drop_down22544__2 = function(name, options) {
    return drop_down22544.call(null, name, options, null);
  };
  var drop_down22544__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down22544 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down22544__2.call(this, name, options);
      case 3:
        return drop_down22544__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down22544.cljs$core$IFn$_invoke$arity$2 = drop_down22544__2;
  drop_down22544.cljs$core$IFn$_invoke$arity$3 = drop_down22544__3;
  return drop_down22544;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down22544);
sablono.core.text_area22545 = function() {
  var text_area22545 = null;
  var text_area22545__1 = function(name) {
    return text_area22545.call(null, name, null);
  };
  var text_area22545__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area22545 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area22545__1.call(this, name);
      case 2:
        return text_area22545__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area22545.cljs$core$IFn$_invoke$arity$1 = text_area22545__1;
  text_area22545.cljs$core$IFn$_invoke$arity$2 = text_area22545__2;
  return text_area22545;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area22545);
sablono.core.label22546 = function label22546(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label22546);
sablono.core.submit_button22547 = function submit_button22547(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button22547);
sablono.core.reset_button22548 = function reset_button22548(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button22548);
sablono.core.form_to22549 = function() {
  var form_to22549__delegate = function(p__22550, body) {
    var vec__22552 = p__22550;
    var method = cljs.core.nth.call(null, vec__22552, 0, null);
    var action = cljs.core.nth.call(null, vec__22552, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to22549 = function(p__22550, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to22549__delegate.call(this, p__22550, body);
  };
  form_to22549.cljs$lang$maxFixedArity = 1;
  form_to22549.cljs$lang$applyTo = function(arglist__22553) {
    var p__22550 = cljs.core.first(arglist__22553);
    var body = cljs.core.rest(arglist__22553);
    return form_to22549__delegate(p__22550, body);
  };
  form_to22549.cljs$core$IFn$_invoke$arity$variadic = form_to22549__delegate;
  return form_to22549;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to22549);
goog.provide("clustermap.routes");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("sablono.core");
goog.require("sablono.core");
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383)], 
null);
clustermap.routes.name_for = function name_for(type, obj) {
  return cljs.core.get.call(null, obj, cljs.core.get.call(null, clustermap.routes.type_name_keys, type));
};
clustermap.routes.portfolio_company_path = function portfolio_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/portfolio-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.investor_company_path = function investor_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/investor-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.constituency_path = function constituency_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/constituency/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.no_selection_path = function no_selection_path(view_id, _) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id));
};
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), clustermap.routes.portfolio_company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), clustermap.routes.investor_company_path, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), clustermap.routes.constituency_path, null, clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = function path_for(view_id, type, obj) {
  return cljs.core.apply.call(null, cljs.core.get.call(null, clustermap.routes.type_paths, type), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_id, obj], null));
};
clustermap.routes.link_for = function link_for(view_id, type, obj) {
  return React.DOM.a({"href":clustermap.routes.path_for.call(null, view_id, type, obj)}, sablono.interpreter.interpret.call(null, clustermap.routes.name_for.call(null, type, obj)));
};
clustermap.routes.path_for_view = function path_for_view(current_route_fn, view_id) {
  var r = current_route_fn.call(null);
  var comps = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#", cljs.core.name.call(null, view_id), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(r), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(r)], null);
  return clojure.string.join.call(null, "/", cljs.core.filter.call(null, cljs.core.identity, comps));
};
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", 
"\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.\u0259.", "b.e."], ERANAMES:["eram\u0131zdan \u0259vv\u0259l", "bizim eram\u0131z\u0131n"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", 
"Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ert\u0259si", "\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], STANDALONEWEEKDAYS:["bazar", "bazar ert\u0259si", 
"\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], SHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], STANDALONESHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-c\u00fc kv.", 
"4-c\u00fc kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-c\u00fc kvartal", "4-c\u00fc kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", 
"\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["1 \u0442\u0440\u0438\u043c.", "2 \u0442\u0440\u0438\u043c.", "3 \u0442\u0440\u0438\u043c.", "4 \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440.\u043e\u0431.", 
"\u0441\u043b.\u043e\u0431."], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d.MM.y '\u0433'.", "d.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", 
"\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", 
"\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", 
"\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", 
"\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", 
"\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], 
STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", 
"\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], 
SHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], STANDALONESHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], WEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["sul", "lun", "meu.", "mer.", "yaou", "gwe.", "sad."], STANDALONESHORTWEEKDAYS:["sul", 
"lun", "meu.", "mer.", "yaou", "gwe.", "sad."], NARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], STANDALONENARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", 
"juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], STANDALONESHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], SHORTWEEKDAYS:["dg.", 
"dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", 
"H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", 
"st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", 
"Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", 
"Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", 
"Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1} - {0}", "{1} - {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", 
"Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", "lun.", 
"mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d/M/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", 
"H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", 
"H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", 
"urria", "azaroa", "abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "y-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\u00f1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan", "feb", "mar", "abr", "mai", "xu\u00f1", "xul", "ago", "set", "out", "nov", "dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["domingo", "luns", "martes", "m\u00e9rcores", "xoves", "venres", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "m\u00e9r", 
"xov", "ven", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab8\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab2\u0abe", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aac\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0a9a\u0acb\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], ERANAMES:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", 
"\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], STANDALONESHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], 
WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", 
"\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u0915\u094b {0}", "{1} \u0915\u094b {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "p. Kr."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], ERANAMES:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], NARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], STANDALONENARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], MONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b", 
"\u0574\u0561\u0580\u057f\u056b", "\u0561\u057a\u0580\u056b\u056c\u056b", "\u0574\u0561\u0575\u056b\u057d\u056b", "\u0570\u0578\u0582\u0576\u056b\u057d\u056b", "\u0570\u0578\u0582\u056c\u056b\u057d\u056b", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b"], 
STANDALONEMONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], 
SHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", "\u0576\u0575\u0574", "\u0564\u056f\u057f"], STANDALONESHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", 
"\u0576\u0575\u0574", "\u0564\u056f\u057f"], WEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], STANDALONEWEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", 
"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], SHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], STANDALONESHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", 
"\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], NARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], STANDALONENARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], SHORTQUARTERS:["1-\u056b\u0576 \u0565\u057c\u0574\u057d.", "2-\u0580\u0564 \u0565\u057c\u0574\u057d.", "3-\u0580\u0564 \u0565\u057c\u0574\u057d.", "4-\u0580\u0564 \u0565\u057c\u0574\u057d."], QUARTERS:["1-\u056b\u0576 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", 
"2-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "3-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "4-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f"], AMPMS:["\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0561\u057c\u0561\u057b", "\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0570\u0565\u057f\u0578"], DATEFORMATS:["y\u0569. MMMM d, EEEE", "dd MMMM, y\u0569.", "dd MMM, y \u0569.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss, zzzz", "H:mm:ss, z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", 
"mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", 
"M", "\u00de", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", 
"Novembre", "Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", 
"mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["\u10eb\u10d5. \u10ec.", "\u10d0\u10ee. \u10ec."], ERANAMES:["\u10eb\u10d5\u10d4\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7", "\u10d0\u10ee\u10d0\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"], NARROWMONTHS:["\u10d8", "\u10d7", "\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], STANDALONENARROWMONTHS:["\u10d8", "\u10d7", 
"\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], MONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", 
"\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], STANDALONEMONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", 
"\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], SHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], 
STANDALONESHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], WEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", 
"\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], STANDALONEWEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], SHORTWEEKDAYS:["\u10d9\u10d5\u10d8", 
"\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], STANDALONESHORTWEEKDAYS:["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], NARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], STANDALONENARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], SHORTQUARTERS:["I \u10d9\u10d5.", 
"II \u10d9\u10d5.", "III \u10d9\u10d5.", "IV \u10d9\u10d5."], QUARTERS:["I \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "II \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "III \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "IV \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"], AMPMS:["\u10d3\u10d8\u10da\u10d8\u10e1", "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM, y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1}, {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", 
"\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], STANDALONEMONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", 
"\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], SHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], 
STANDALONESHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], WEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", 
"\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], SHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", 
"\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], STANDALONESHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", "\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], SHORTQUARTERS:["1-\u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0442\u043e\u049b\u0441\u0430\u043d", 
"3-\u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0442\u043e\u049b\u0441\u0430\u043d"], QUARTERS:["1-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"], AMPMS:["\u0442\u04af\u0441\u043a\u0435 \u0434\u0435\u0439\u0456\u043d", "\u0442\u04af\u0441\u0442\u0435\u043d \u043a\u0435\u0439\u0456\u043d"], 
DATEFORMATS:["EEEE, d MMMM y '\u0436'.", "d MMMM y '\u0436'.", "dd.MM.y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["\u1798\u17bb\u1793 \u1782.\u179f.", "\u1782.\u179f."], ERANAMES:["\u1798\u17bb\u1793\u200b\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", 
"\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONEMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", 
"\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], SHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", 
"\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONESHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", 
"\u1792\u17d2\u1793\u17bc"], WEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONEWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", 
"\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], SHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONESHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", 
"\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e4"], QUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", 
"\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], AMPMS:["\u1796\u17d2\u179a\u17b9\u1780", "\u179b\u17d2\u1784\u17b6\u1785"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], STANDALONESHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", 
"\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], 
STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0\u0cb5\u0cbf", 
"\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", 
"\u0ca4\u0ccd\u0cb0\u0cc8 4"], QUARTERS:["1 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["\u0431.\u0437. \u0447.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437. \u0447\u0435\u0439\u0438\u043d", "\u0431.\u0437."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], STANDALONEMONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", 
"\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], WEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", 
"\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], STANDALONEWEEKDAYS:["\u0416\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0414\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0428\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0428\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0416\u0443\u043c\u0430", "\u0418\u0448\u0435\u043c\u0431\u0438"], SHORTWEEKDAYS:["\u0416\u043a", "\u0414\u0448", "\u0428\u0435", "\u0428\u0430", "\u0411\u0448", 
"\u0416\u043c", "\u0418\u0448"], STANDALONESHORTWEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], SHORTQUARTERS:["1-\u0447\u0435\u0439.", "2-\u0447\u0435\u0439.", "3-\u0447\u0435\u0439.", "4-\u0447\u0435\u0439."], 
QUARTERS:["1-\u0447\u0435\u0439\u0440\u0435\u043a", "2-\u0447\u0435\u0439\u0440\u0435\u043a", "3-\u0447\u0435\u0439\u0440\u0435\u043a", "4-\u0447\u0435\u0439\u0440\u0435\u043a"], AMPMS:["\u0442\u04af\u0448\u043a\u04e9 \u0447\u0435\u0439\u0438\u043d\u043a\u0438", "\u0442\u04af\u0448\u0442\u04e9\u043d \u043a\u0438\u0439\u0438\u043d\u043a\u0438"], DATEFORMATS:["EEEE, d-MMMM, y-'\u0436'.", "d-MMMM, y-'\u0436'.", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], ERANAMES:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", 
"\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], STANDALONEMONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", 
"\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], SHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], STANDALONESHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", 
"\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], WEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONEWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], SHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", 
"\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONESHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["\u0e97", 
"\u0e88", "\u0e84", "\u200b\u0e9e\u0eb8", "\u0e9e", "\u200b\u0eaa\u0eb8", "\u0eaa"], SHORTQUARTERS:["\u0e95\u0ea11", "\u0e95\u0ea12", "\u0e95\u0ea13", "\u0e95\u0ea14"], QUARTERS:["\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 1", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 2", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 3", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 4"], AMPMS:["\u0e81\u0ec8\u0ead\u0e99\u0e97\u0ec8\u0ebd\u0e87", "\u0eab\u0ebc\u0eb1\u0e87\u0e97\u0ec8\u0ebd\u0e87"], DATEFORMATS:["EEEE \u0e97\u0eb5 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 zzzz", "H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", 
"bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["prie\u0161piet", 
"popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["Janv\u0101ris", "Febru\u0101ris", 
"Marts", "Apr\u012blis", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Janv.", "Febr.", "Marts", "Apr.", "Maijs", "J\u016bn.", "J\u016bl.", "Aug.", "Sept.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", 
"\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", 
"\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", 
"\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u043f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0432\u0442\u043e\u0440\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0442\u0440\u0435\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], 
AMPMS:["\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435", "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd MMMM y '\u0433'.", "dd MMMM y '\u0433'.", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d0e\u0d21\u0d3f"], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d7b\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", 
"\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", 
"\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", 
"\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["\u041c\u042d\u04e8", "\u041c\u042d"], ERANAMES:["\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439 \u04e9\u043c\u043d\u04e9\u0445", "\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], STANDALONEMONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], SHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", 
"2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], STANDALONESHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", 
"6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], WEEKDAYS:["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], STANDALONEWEEKDAYS:["\u043d\u044f\u043c", 
"\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], SHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], STANDALONESHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], NARROWWEEKDAYS:["1", 
"2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u04231", "\u04232", "\u04233", "\u04234"], QUARTERS:["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"], AMPMS:["\u04ae\u04e8", "\u04ae\u0425"], DATEFORMATS:["EEEE, y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' dd", "y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' d", 
"y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", 
"\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["[AM]", 
"[PM]"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} '\u0930\u094b\u091c\u0940' {0}", "{1} '\u0930\u094b\u091c\u0940' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["\u1018\u102e\u1005\u102e", "\u1021\u1031\u1012\u102e"], ERANAMES:["\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1019\u1015\u1031\u102b\u103a\u1019\u102e\u1000\u102c\u101c", "\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1015\u1031\u102b\u103a\u1011\u103d\u1014\u103a\u1038\u1015\u103c\u102e\u1038\u1000\u102c\u101c"], NARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", 
"\u1012"], STANDALONENARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", "\u1012"], MONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONEMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], SHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONESHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], WEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONEWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", 
"\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], SHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", 
"\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONESHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], NARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], STANDALONENARROWWEEKDAYS:["\u1010", 
"\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], SHORTQUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], QUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", 
"\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], AMPMS:["\u1014\u1036\u1014\u1000\u103a", "\u100a\u1014\u1031"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}\u1019\u103e\u102c {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], ERANAMES:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], NARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", "\u0967\u0968"], STANDALONENARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", 
"\u0967\u0968"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", 
"\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], STANDALONEWEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", "\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], SHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], 
NARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", "\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], QUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", 
"\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], AMPMS:["\u092a\u0942\u0930\u094d\u0935 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939", "\u0909\u0924\u094d\u0924\u0930 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], ERANAMES:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], NARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], STANDALONENARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], MONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", 
"\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONEMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", 
"\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], SHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", 
"\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONESHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], 
WEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], STANDALONEWEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", 
"\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], SHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], STANDALONESHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], 
NARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], STANDALONENARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], SHORTQUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", "\u0a2a\u0a42\u0a30\u0a3e"], QUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", 
"\u0a2a\u0a42\u0a30\u0a3e"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["da manh\u00e3", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", 
"dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", 
"\u043f\u0442", "\u0441\u0431"], STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0db4\u0dd6.", "\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0dc0."], ERANAMES:["\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0db4\u0dd6\u0dbb\u0dca\u200d\u0dc0", "\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0dc0\u0dbb\u0dca\u200d\u0dc2"], NARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], 
STANDALONENARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], MONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", 
"\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], STANDALONEMONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", "\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], SHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], STANDALONESHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], WEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", 
"\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], STANDALONEWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", 
"\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], SHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], STANDALONESHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", 
"\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], NARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], STANDALONENARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], SHORTQUARTERS:["\u0d9a\u0dcf\u0dbb\u0dca:1", "\u0d9a\u0dcf\u0dbb\u0dca:2", "\u0d9a\u0dcf\u0dbb\u0dca:3", 
"\u0d9a\u0dcf\u0dbb\u0dca:4"], QUARTERS:["1 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "2 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "3 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "4 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0"], AMPMS:["\u0db4\u0dd9.\u0dc0.", "\u0db4.\u0dc0."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["a h.mm.ss zzzz", "a h.mm.ss z", "a h.mm.ss", "a h.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", 
"d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH.mm.ss zzzz", 
"HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "e.r."], ERANAMES:["para er\u00ebs s\u00eb re", "er\u00ebs s\u00eb re"], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", 
"tetor", "n\u00ebntor", "dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], 
SHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["tremujori i par\u00eb", "tremujori i dyt\u00eb", "tremujori i tret\u00eb", "tremujori i kat\u00ebrt"], AMPMS:["paradite", "pasdite"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'n\u00eb' {0}", "{1} 'n\u00eb' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["S\u00f6ndag", "M\u00e5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["S\u00f6n", "M\u00e5n", "Tis", "Ons", "Tor", "Fre", "L\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd", "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", 
"\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", 
"\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", 
"\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", 
"\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", 
"\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", "\u0e28", "\u0e2a"], SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", 
"\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", 
"\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", 
"\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", 
"\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", 
"\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", 
"\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], 
AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["M.A.", "E"], ERANAMES:["M.A.", "E"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["Yanv", 
"Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], STANDALONESHORTMONTHS:["Yanv", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yaksh", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yaksh", "Dush", 
"Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng 1", "th\u00e1ng 2", "th\u00e1ng 3", "th\u00e1ng 4", "th\u00e1ng 5", "th\u00e1ng 6", "th\u00e1ng 7", "th\u00e1ng 8", "th\u00e1ng 9", "th\u00e1ng 10", "th\u00e1ng 11", "th\u00e1ng 12"], STANDALONEMONTHS:["Th\u00e1ng 1", "Th\u00e1ng 2", 
"Th\u00e1ng 3", "Th\u00e1ng 4", "Th\u00e1ng 5", "Th\u00e1ng 6", "Th\u00e1ng 7", "Th\u00e1ng 8", "Th\u00e1ng 9", "Th\u00e1ng 10", "Th\u00e1ng 11", "Th\u00e1ng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", 
"Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' MM 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", "{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", 
"11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", 
"\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", 
"\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy/M/d"], TIMEFORMATS:["zzzzah:mm:ss", "zah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}{0}", "{1}{0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "y/M/d"], TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", 
"ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "T", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota engu-1", "ikota engu-2", "ikota engu-3", "ikota engu-4"], AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "az") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
      } else {
        if (goog.LOCALE == "bg") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
        } else {
          if (goog.LOCALE == "bn") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
          } else {
            if (goog.LOCALE == "br") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
            } else {
              if (goog.LOCALE == "ca") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
              } else {
                if (goog.LOCALE == "chr") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
                } else {
                  if (goog.LOCALE == "cs") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
                  } else {
                    if (goog.LOCALE == "cy") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                    } else {
                      if (goog.LOCALE == "da") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                      } else {
                        if (goog.LOCALE == "de") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                          } else {
                            if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                            } else {
                              if (goog.LOCALE == "el") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                              } else {
                                if (goog.LOCALE == "en") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                } else {
                                  if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                                  } else {
                                    if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                    } else {
                                      if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                      } else {
                                        if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                        } else {
                                          if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                          } else {
                                            if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                            } else {
                                              if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                              } else {
                                                if (goog.LOCALE == "es") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                } else {
                                                  if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                  } else {
                                                    if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                    } else {
                                                      if (goog.LOCALE == "et") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                      } else {
                                                        if (goog.LOCALE == "eu") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                        } else {
                                                          if (goog.LOCALE == "fa") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                          } else {
                                                            if (goog.LOCALE == "fi") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                            } else {
                                                              if (goog.LOCALE == "fil") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                              } else {
                                                                if (goog.LOCALE == "fr") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                                } else {
                                                                  if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                                  } else {
                                                                    if (goog.LOCALE == "gl") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                                    } else {
                                                                      if (goog.LOCALE == "gsw") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                      } else {
                                                                        if (goog.LOCALE == "gu") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                        } else {
                                                                          if (goog.LOCALE == "haw") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                          } else {
                                                                            if (goog.LOCALE == "he") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                            } else {
                                                                              if (goog.LOCALE == "hi") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                              } else {
                                                                                if (goog.LOCALE == "hr") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                                } else {
                                                                                  if (goog.LOCALE == "hu") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "hy") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "id") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "in") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "is") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "it") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "iw") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "ja") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "ka") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "kk") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "km") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "kn") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "ko") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "ky") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "ln") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "lo") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "lt") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "lv") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "mk") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "ml") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "mn") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "mr") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "ms") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "mt") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "my") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "nb") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "ne") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "nl") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "no") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "no_NO" || goog.LOCALE == "no-NO") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "or") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "pa") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "pl") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "pt") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "ro") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "ru") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "si") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "sk") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "sl") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                                                  } else {
                                                                                                                                                                    if (goog.LOCALE == "sq") {
                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                                                    } else {
                                                                                                                                                                      if (goog.LOCALE == "sr") {
                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                                                      } else {
                                                                                                                                                                        if (goog.LOCALE == "sv") {
                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                                                        } else {
                                                                                                                                                                          if (goog.LOCALE == "sw") {
                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                                                          } else {
                                                                                                                                                                            if (goog.LOCALE == "ta") {
                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                                                            } else {
                                                                                                                                                                              if (goog.LOCALE == "te") {
                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                                                              } else {
                                                                                                                                                                                if (goog.LOCALE == "th") {
                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                                                                } else {
                                                                                                                                                                                  if (goog.LOCALE == "tl") {
                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if (goog.LOCALE == "tr") {
                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if (goog.LOCALE == "uk") {
                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if (goog.LOCALE == "ur") {
                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if (goog.LOCALE == "uz") {
                                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if (goog.LOCALE == "vi") {
                                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if (goog.LOCALE == "zh") {
                                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if (goog.LOCALE == "zu") {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj21970 = {};
  return obj21970;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3546__auto__ = port;
    if (and__3546__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4185__auto__ = port == null ? null : port;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj21972 = {};
  return obj21972;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3546__auto__ = port;
    if (and__3546__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4185__auto__ = port == null ? null : port;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj21974 = {};
  return obj21974;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3546__auto__ = chan;
    if (and__3546__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4185__auto__ = chan == null ? null : chan;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj21976 = {};
  return obj21976;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3546__auto__ = h;
    if (and__3546__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4185__auto__ = h == null ? null : h;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3546__auto__ = h;
    if (and__3546__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4185__auto__ = h == null ? null : h;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj21978 = {};
  return obj21978;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj21980 = {};
  return obj21980;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__21981 = cnt + 1;
      cnt = G__21981;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4414__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4414__auto__) {
      var v_21982 = this$.pop();
      if (keep_QMARK_.call(null, v_21982)) {
        this$.unshift(v_21982);
      } else {
      }
      var G__21983 = x + 1;
      x = G__21983;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_21984 = 0;
  while (true) {
    var m_21985 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_21985 == null) {
    } else {
      m_21985.call(null);
      if (count_21984 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__21986 = count_21984 + 1;
        count_21984 = G__21986;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3546__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t21990 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t21990 = function(val, box, meta21991) {
      this.val = val;
      this.box = box;
      this.meta21991 = meta21991;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t21990.cljs$lang$type = true;
    cljs.core.async.impl.channels.t21990.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t21990";
    cljs.core.async.impl.channels.t21990.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.channels/t21990");
    };
    cljs.core.async.impl.channels.t21990.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t21990.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21992) {
      var self__ = this;
      var _21992__$1 = this;
      return self__.meta21991;
    };
    cljs.core.async.impl.channels.t21990.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21992, meta21991__$1) {
      var self__ = this;
      var _21992__$1 = this;
      return new cljs.core.async.impl.channels.t21990(self__.val, self__.box, meta21991__$1);
    };
    cljs.core.async.impl.channels.__GT_t21990 = function __GT_t21990(val__$1, box__$1, meta21991) {
      return new cljs.core.async.impl.channels.t21990(val__$1, box__$1, meta21991);
    };
  }
  return new cljs.core.async.impl.channels.t21990(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_21993 = self__.takes.pop();
      if (taker_21993 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_21993)) {
          var take_cb_21994 = cljs.core.async.impl.protocols.commit.call(null, taker_21993);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_21994, taker_21993, this$__$1) {
            return function() {
              return take_cb_21994.call(null, null);
            };
          }(take_cb_21994, taker_21993, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t21917 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t21917 = function(f, fn_handler, meta21918) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta21918 = meta21918;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t21917.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t21917.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t21917";
    cljs.core.async.impl.ioc_helpers.t21917.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.ioc-helpers/t21917");
    };
    cljs.core.async.impl.ioc_helpers.t21917.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t21917.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t21917.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t21917.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21919) {
      var self__ = this;
      var _21919__$1 = this;
      return self__.meta21918;
    };
    cljs.core.async.impl.ioc_helpers.t21917.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21919, meta21918__$1) {
      var self__ = this;
      var _21919__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t21917(self__.f, self__.fn_handler, meta21918__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t21917 = function __GT_t21917(f__$1, fn_handler__$1, meta21918) {
      return new cljs.core.async.impl.ioc_helpers.t21917(f__$1, fn_handler__$1, meta21918);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t21917(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e21921) {
    if (e21921 instanceof Object) {
      var ex = e21921;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e21921;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_21924_21926 = state;
    statearr_21924_21926[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_21924_21926[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_21925_21927 = state;
    statearr_21925_21927[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_21925_21927[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_21930_21932 = state;
    statearr_21930_21932[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_21930_21932[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_21931_21933 = state;
    statearr_21931_21933[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_21931_21933[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__21934) {
    var map__21939 = p__21934;
    var map__21939__$1 = cljs.core.seq_QMARK_.call(null, map__21939) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21939) : map__21939;
    var opts = map__21939__$1;
    var statearr_21940_21943 = state;
    statearr_21940_21943[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__21939, map__21939__$1, opts) {
      return function(val) {
        var statearr_21941_21944 = state;
        statearr_21941_21944[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__21939, map__21939__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_21942_21945 = state;
      statearr_21942_21945[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__21934 = null;
    if (arguments.length > 3) {
      p__21934 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__21934);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__21946) {
    var state = cljs.core.first(arglist__21946);
    arglist__21946 = cljs.core.next(arglist__21946);
    var cont_block = cljs.core.first(arglist__21946);
    arglist__21946 = cljs.core.next(arglist__21946);
    var ports = cljs.core.first(arglist__21946);
    var p__21934 = cljs.core.rest(arglist__21946);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__21934);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k21948, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__21950 = k21948 instanceof cljs.core.Keyword ? k21948.fqn : null;
  switch(G__21950) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k21948, else__4147__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__21947) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__21951 = cljs.core.keyword_identical_QMARK_;
  var expr__21952 = k__4152__auto__;
  if (cljs.core.truth_(pred__21951.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__21952))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__21947, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21951.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__21952))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__21947, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21951.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__21952))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__21947, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21951.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__21952))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__21947, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__21951.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__21952))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__21947, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__21947), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__21947) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__21947, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__21949) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__21949), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__21949), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__21949), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__21949), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__21949), null, cljs.core.dissoc.call(null, G__21949, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_21956 = state;
  statearr_21956[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_21956;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = exception;
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3546__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = exception;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        var statearr_21962 = state;
        statearr_21962[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_21962[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_21962[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_21962[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_21962;
      } else {
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = exception;
          if (cljs.core.truth_(and__3546__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3546__auto__;
          }
        }())) {
          var statearr_21963_21967 = state;
          statearr_21963_21967[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__21968 = state;
          state = G__21968;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3546__auto__ = exception;
            if (cljs.core.truth_(and__3546__auto__)) {
              var and__3546__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3546__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3546__auto____$1;
              }
            } else {
              return and__3546__auto__;
            }
          }())) {
            var statearr_21964 = state;
            statearr_21964[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_21964[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_21964;
          } else {
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = cljs.core.not.call(null, exception);
              if (and__3546__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3546__auto__;
              }
            }())) {
              var statearr_21965 = state;
              statearr_21965[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_21965[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_21965;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_21966 = state;
                statearr_21966[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_21966[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_21966;
              } else {
                throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__21890 = level + 1;
        level = G__21890;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_21891 = 0;
    while (true) {
      if (i_21891 < arr.length) {
        arr[i_21891] = null;
        var G__21892 = i_21891 + 1;
        i_21891 = G__21892;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__21893 = x_SINGLEQUOTE_;
                x__$1 = G__21893;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__21894 = x__$1;
        var G__21895 = k;
        var G__21896 = level - 1;
        var G__21897 = update;
        x = G__21894;
        k = G__21895;
        level = G__21896;
        update = G__21897;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_21898 = self__.level + 1;
      while (true) {
        if (i_21898 <= new_level + 1) {
          update[i_21898] = self__.header;
          var G__21899 = i_21898 + 1;
          i_21898 = G__21899;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_21900 = 0;
    while (true) {
      if (i_21900 <= self__.level) {
        var links_21901 = update[i_21900].forward;
        if (links_21901[i_21900] === x__$1) {
          links_21901[i_21900] = x__$1.forward[i_21900];
          var G__21902 = i_21900 + 1;
          i_21900 = G__21902;
          continue;
        } else {
          var G__21903 = i_21900 + 1;
          i_21900 = G__21903;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__21904 = x_SINGLEQUOTE_;
              x__$1 = G__21904;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__21905 = nx;
        var G__21906 = level__$1 - 1;
        x = G__21905;
        level__$1 = G__21906;
        continue;
      } else {
        var G__21907 = x;
        var G__21908 = level__$1 - 1;
        x = G__21907;
        level__$1 = G__21908;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__21909 = x_SINGLEQUOTE_;
              x__$1 = G__21909;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__21910 = nx;
        var G__21911 = level__$1 - 1;
        x = G__21910;
        level__$1 = G__21911;
        continue;
      } else {
        var G__21912 = x;
        var G__21913 = level__$1 - 1;
        x = G__21912;
        level__$1 = G__21913;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3558__auto__ = cljs.core.truth_(function() {
    var and__3546__auto__ = me;
    if (cljs.core.truth_(and__3546__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3546__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3558__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3558__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t19339 !== "undefined") {
  } else {
    cljs.core.async.t19339 = function(f, fn_handler, meta19340) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta19340 = meta19340;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19339.cljs$lang$type = true;
    cljs.core.async.t19339.cljs$lang$ctorStr = "cljs.core.async/t19339";
    cljs.core.async.t19339.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19339");
    };
    cljs.core.async.t19339.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19339.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t19339.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t19339.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19341) {
      var self__ = this;
      var _19341__$1 = this;
      return self__.meta19340;
    };
    cljs.core.async.t19339.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19341, meta19340__$1) {
      var self__ = this;
      var _19341__$1 = this;
      return new cljs.core.async.t19339(self__.f, self__.fn_handler, meta19340__$1);
    };
    cljs.core.async.__GT_t19339 = function __GT_t19339(f__$1, fn_handler__$1, meta19340) {
      return new cljs.core.async.t19339(f__$1, fn_handler__$1, meta19340);
    };
  }
  return new cljs.core.async.t19339(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__19343 = buff;
  if (G__19343) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__19343.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__19343.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__19343);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__19343);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_19344 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_19344);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_19344, ret) {
          return function() {
            return fn1.call(null, val_19344);
          };
        }(val_19344, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = ret;
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4414__auto___19345 = n;
  var x_19346 = 0;
  while (true) {
    if (x_19346 < n__4414__auto___19345) {
      a[x_19346] = 0;
      var G__19347 = x_19346 + 1;
      x_19346 = G__19347;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__19348 = i + 1;
      i = G__19348;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t19352 !== "undefined") {
  } else {
    cljs.core.async.t19352 = function(flag, alt_flag, meta19353) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta19353 = meta19353;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19352.cljs$lang$type = true;
    cljs.core.async.t19352.cljs$lang$ctorStr = "cljs.core.async/t19352";
    cljs.core.async.t19352.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19352");
      };
    }(flag);
    cljs.core.async.t19352.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19352.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t19352.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t19352.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_19354) {
        var self__ = this;
        var _19354__$1 = this;
        return self__.meta19353;
      };
    }(flag);
    cljs.core.async.t19352.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_19354, meta19353__$1) {
        var self__ = this;
        var _19354__$1 = this;
        return new cljs.core.async.t19352(self__.flag, self__.alt_flag, meta19353__$1);
      };
    }(flag);
    cljs.core.async.__GT_t19352 = function(flag) {
      return function __GT_t19352(flag__$1, alt_flag__$1, meta19353) {
        return new cljs.core.async.t19352(flag__$1, alt_flag__$1, meta19353);
      };
    }(flag);
  }
  return new cljs.core.async.t19352(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t19358 !== "undefined") {
  } else {
    cljs.core.async.t19358 = function(cb, flag, alt_handler, meta19359) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta19359 = meta19359;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19358.cljs$lang$type = true;
    cljs.core.async.t19358.cljs$lang$ctorStr = "cljs.core.async/t19358";
    cljs.core.async.t19358.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19358");
    };
    cljs.core.async.t19358.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t19358.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t19358.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t19358.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19360) {
      var self__ = this;
      var _19360__$1 = this;
      return self__.meta19359;
    };
    cljs.core.async.t19358.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19360, meta19359__$1) {
      var self__ = this;
      var _19360__$1 = this;
      return new cljs.core.async.t19358(self__.cb, self__.flag, self__.alt_handler, meta19359__$1);
    };
    cljs.core.async.__GT_t19358 = function __GT_t19358(cb__$1, flag__$1, alt_handler__$1, meta19359) {
      return new cljs.core.async.t19358(cb__$1, flag__$1, alt_handler__$1, meta19359);
    };
  }
  return new cljs.core.async.t19358(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__19361_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19361_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3558__auto__ = wport;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__19362 = i + 1;
          i = G__19362;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3558__auto__ = ret;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3546__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3546__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3546__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__19363) {
    var map__19365 = p__19363;
    var map__19365__$1 = cljs.core.seq_QMARK_.call(null, map__19365) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19365) : map__19365;
    var opts = map__19365__$1;
    throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__19363 = null;
    if (arguments.length > 1) {
      p__19363 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__19363);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__19366) {
    var ports = cljs.core.first(arglist__19366);
    var p__19363 = cljs.core.rest(arglist__19366);
    return alts_BANG___delegate(ports, p__19363);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t19374 !== "undefined") {
  } else {
    cljs.core.async.t19374 = function(ch, f, map_LT_, meta19375) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta19375 = meta19375;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19374.cljs$lang$type = true;
    cljs.core.async.t19374.cljs$lang$ctorStr = "cljs.core.async/t19374";
    cljs.core.async.t19374.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19374");
    };
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t19377 !== "undefined") {
        } else {
          cljs.core.async.t19377 = function(fn1, _, meta19375, ch, f, map_LT_, meta19378) {
            this.fn1 = fn1;
            this._ = _;
            this.meta19375 = meta19375;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta19378 = meta19378;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t19377.cljs$lang$type = true;
          cljs.core.async.t19377.cljs$lang$ctorStr = "cljs.core.async/t19377";
          cljs.core.async.t19377.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
              return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19377");
            };
          }(___$1);
          cljs.core.async.t19377.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t19377.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t19377.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t19377.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__19367_SHARP_) {
                  return f1.call(null, p1__19367_SHARP_ == null ? null : self__.f.call(null, p1__19367_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t19377.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_19379) {
              var self__ = this;
              var _19379__$1 = this;
              return self__.meta19378;
            };
          }(___$1);
          cljs.core.async.t19377.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_19379, meta19378__$1) {
              var self__ = this;
              var _19379__$1 = this;
              return new cljs.core.async.t19377(self__.fn1, self__._, self__.meta19375, self__.ch, self__.f, self__.map_LT_, meta19378__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t19377 = function(___$1) {
            return function __GT_t19377(fn1__$1, ___$2, meta19375__$1, ch__$2, f__$2, map_LT___$2, meta19378) {
              return new cljs.core.async.t19377(fn1__$1, ___$2, meta19375__$1, ch__$2, f__$2, map_LT___$2, meta19378);
            };
          }(___$1);
        }
        return new cljs.core.async.t19377(fn1, ___$1, self__.meta19375, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = ret;
        if (cljs.core.truth_(and__3546__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3546__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19374.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19374.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19376) {
      var self__ = this;
      var _19376__$1 = this;
      return self__.meta19375;
    };
    cljs.core.async.t19374.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19376, meta19375__$1) {
      var self__ = this;
      var _19376__$1 = this;
      return new cljs.core.async.t19374(self__.ch, self__.f, self__.map_LT_, meta19375__$1);
    };
    cljs.core.async.__GT_t19374 = function __GT_t19374(ch__$1, f__$1, map_LT___$1, meta19375) {
      return new cljs.core.async.t19374(ch__$1, f__$1, map_LT___$1, meta19375);
    };
  }
  return new cljs.core.async.t19374(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t19383 !== "undefined") {
  } else {
    cljs.core.async.t19383 = function(ch, f, map_GT_, meta19384) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta19384 = meta19384;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19383.cljs$lang$type = true;
    cljs.core.async.t19383.cljs$lang$ctorStr = "cljs.core.async/t19383";
    cljs.core.async.t19383.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19383");
    };
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19383.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19383.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19385) {
      var self__ = this;
      var _19385__$1 = this;
      return self__.meta19384;
    };
    cljs.core.async.t19383.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19385, meta19384__$1) {
      var self__ = this;
      var _19385__$1 = this;
      return new cljs.core.async.t19383(self__.ch, self__.f, self__.map_GT_, meta19384__$1);
    };
    cljs.core.async.__GT_t19383 = function __GT_t19383(ch__$1, f__$1, map_GT___$1, meta19384) {
      return new cljs.core.async.t19383(ch__$1, f__$1, map_GT___$1, meta19384);
    };
  }
  return new cljs.core.async.t19383(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t19389 !== "undefined") {
  } else {
    cljs.core.async.t19389 = function(ch, p, filter_GT_, meta19390) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta19390 = meta19390;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19389.cljs$lang$type = true;
    cljs.core.async.t19389.cljs$lang$ctorStr = "cljs.core.async/t19389";
    cljs.core.async.t19389.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t19389");
    };
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19389.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19389.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19391) {
      var self__ = this;
      var _19391__$1 = this;
      return self__.meta19390;
    };
    cljs.core.async.t19389.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19391, meta19390__$1) {
      var self__ = this;
      var _19391__$1 = this;
      return new cljs.core.async.t19389(self__.ch, self__.p, self__.filter_GT_, meta19390__$1);
    };
    cljs.core.async.__GT_t19389 = function __GT_t19389(ch__$1, p__$1, filter_GT___$1, meta19390) {
      return new cljs.core.async.t19389(ch__$1, p__$1, filter_GT___$1, meta19390);
    };
  }
  return new cljs.core.async.t19389(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___19474 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___19474, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___19474, out) {
            return function(state_19453) {
              var state_val_19454 = state_19453[1];
              if (state_val_19454 === 7) {
                var inst_19449 = state_19453[2];
                var state_19453__$1 = state_19453;
                var statearr_19455_19475 = state_19453__$1;
                statearr_19455_19475[2] = inst_19449;
                statearr_19455_19475[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19454 === 1) {
                  var state_19453__$1 = state_19453;
                  var statearr_19456_19476 = state_19453__$1;
                  statearr_19456_19476[2] = null;
                  statearr_19456_19476[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19454 === 4) {
                    var inst_19435 = state_19453[7];
                    var inst_19435__$1 = state_19453[2];
                    var inst_19436 = inst_19435__$1 == null;
                    var state_19453__$1 = function() {
                      var statearr_19457 = state_19453;
                      statearr_19457[7] = inst_19435__$1;
                      return statearr_19457;
                    }();
                    if (cljs.core.truth_(inst_19436)) {
                      var statearr_19458_19477 = state_19453__$1;
                      statearr_19458_19477[1] = 5;
                    } else {
                      var statearr_19459_19478 = state_19453__$1;
                      statearr_19459_19478[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19454 === 6) {
                      var inst_19435 = state_19453[7];
                      var inst_19440 = p.call(null, inst_19435);
                      var state_19453__$1 = state_19453;
                      if (cljs.core.truth_(inst_19440)) {
                        var statearr_19460_19479 = state_19453__$1;
                        statearr_19460_19479[1] = 8;
                      } else {
                        var statearr_19461_19480 = state_19453__$1;
                        statearr_19461_19480[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19454 === 3) {
                        var inst_19451 = state_19453[2];
                        var state_19453__$1 = state_19453;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19453__$1, inst_19451);
                      } else {
                        if (state_val_19454 === 2) {
                          var state_19453__$1 = state_19453;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19453__$1, 4, ch);
                        } else {
                          if (state_val_19454 === 11) {
                            var inst_19443 = state_19453[2];
                            var state_19453__$1 = state_19453;
                            var statearr_19462_19481 = state_19453__$1;
                            statearr_19462_19481[2] = inst_19443;
                            statearr_19462_19481[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19454 === 9) {
                              var state_19453__$1 = state_19453;
                              var statearr_19463_19482 = state_19453__$1;
                              statearr_19463_19482[2] = null;
                              statearr_19463_19482[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19454 === 5) {
                                var inst_19438 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19453__$1 = state_19453;
                                var statearr_19464_19483 = state_19453__$1;
                                statearr_19464_19483[2] = inst_19438;
                                statearr_19464_19483[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19454 === 10) {
                                  var inst_19446 = state_19453[2];
                                  var state_19453__$1 = function() {
                                    var statearr_19465 = state_19453;
                                    statearr_19465[8] = inst_19446;
                                    return statearr_19465;
                                  }();
                                  var statearr_19466_19484 = state_19453__$1;
                                  statearr_19466_19484[2] = null;
                                  statearr_19466_19484[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19454 === 8) {
                                    var inst_19435 = state_19453[7];
                                    var state_19453__$1 = state_19453;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19453__$1, 11, out, inst_19435);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___19474, out);
          return function(switch__5693__auto__, c__5708__auto___19474, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_19470 = [null, null, null, null, null, null, null, null, null];
                statearr_19470[0] = state_machine__5694__auto__;
                statearr_19470[1] = 1;
                return statearr_19470;
              };
              var state_machine__5694__auto____1 = function(state_19453) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_19453);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e19471) {
                      if (e19471 instanceof Object) {
                        var ex__5697__auto__ = e19471;
                        var statearr_19472_19485 = state_19453;
                        statearr_19472_19485[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19453);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19471;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19486 = state_19453;
                    state_19453 = G__19486;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_19453) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_19453);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___19474, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_19473 = f__5709__auto__.call(null);
          statearr_19473[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___19474;
          return statearr_19473;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___19474, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_19638) {
            var state_val_19639 = state_19638[1];
            if (state_val_19639 === 7) {
              var inst_19634 = state_19638[2];
              var state_19638__$1 = state_19638;
              var statearr_19640_19677 = state_19638__$1;
              statearr_19640_19677[2] = inst_19634;
              statearr_19640_19677[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19639 === 20) {
                var inst_19609 = state_19638[7];
                var inst_19620 = state_19638[2];
                var inst_19621 = cljs.core.next.call(null, inst_19609);
                var inst_19595 = inst_19621;
                var inst_19596 = null;
                var inst_19597 = 0;
                var inst_19598 = 0;
                var state_19638__$1 = function() {
                  var statearr_19641 = state_19638;
                  statearr_19641[8] = inst_19620;
                  statearr_19641[9] = inst_19597;
                  statearr_19641[10] = inst_19598;
                  statearr_19641[11] = inst_19595;
                  statearr_19641[12] = inst_19596;
                  return statearr_19641;
                }();
                var statearr_19642_19678 = state_19638__$1;
                statearr_19642_19678[2] = null;
                statearr_19642_19678[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19639 === 1) {
                  var state_19638__$1 = state_19638;
                  var statearr_19643_19679 = state_19638__$1;
                  statearr_19643_19679[2] = null;
                  statearr_19643_19679[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19639 === 4) {
                    var inst_19584 = state_19638[13];
                    var inst_19584__$1 = state_19638[2];
                    var inst_19585 = inst_19584__$1 == null;
                    var state_19638__$1 = function() {
                      var statearr_19647 = state_19638;
                      statearr_19647[13] = inst_19584__$1;
                      return statearr_19647;
                    }();
                    if (cljs.core.truth_(inst_19585)) {
                      var statearr_19648_19680 = state_19638__$1;
                      statearr_19648_19680[1] = 5;
                    } else {
                      var statearr_19649_19681 = state_19638__$1;
                      statearr_19649_19681[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19639 === 15) {
                      var state_19638__$1 = state_19638;
                      var statearr_19650_19682 = state_19638__$1;
                      statearr_19650_19682[2] = null;
                      statearr_19650_19682[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19639 === 13) {
                        var inst_19597 = state_19638[9];
                        var inst_19598 = state_19638[10];
                        var inst_19595 = state_19638[11];
                        var inst_19596 = state_19638[12];
                        var inst_19605 = state_19638[2];
                        var inst_19606 = inst_19598 + 1;
                        var tmp19644 = inst_19597;
                        var tmp19645 = inst_19595;
                        var tmp19646 = inst_19596;
                        var inst_19595__$1 = tmp19645;
                        var inst_19596__$1 = tmp19646;
                        var inst_19597__$1 = tmp19644;
                        var inst_19598__$1 = inst_19606;
                        var state_19638__$1 = function() {
                          var statearr_19651 = state_19638;
                          statearr_19651[9] = inst_19597__$1;
                          statearr_19651[10] = inst_19598__$1;
                          statearr_19651[14] = inst_19605;
                          statearr_19651[11] = inst_19595__$1;
                          statearr_19651[12] = inst_19596__$1;
                          return statearr_19651;
                        }();
                        var statearr_19652_19683 = state_19638__$1;
                        statearr_19652_19683[2] = null;
                        statearr_19652_19683[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19639 === 6) {
                          var inst_19584 = state_19638[13];
                          var inst_19589 = f.call(null, inst_19584);
                          var inst_19594 = cljs.core.seq.call(null, inst_19589);
                          var inst_19595 = inst_19594;
                          var inst_19596 = null;
                          var inst_19597 = 0;
                          var inst_19598 = 0;
                          var state_19638__$1 = function() {
                            var statearr_19653 = state_19638;
                            statearr_19653[9] = inst_19597;
                            statearr_19653[10] = inst_19598;
                            statearr_19653[11] = inst_19595;
                            statearr_19653[12] = inst_19596;
                            return statearr_19653;
                          }();
                          var statearr_19654_19684 = state_19638__$1;
                          statearr_19654_19684[2] = null;
                          statearr_19654_19684[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19639 === 17) {
                            var inst_19609 = state_19638[7];
                            var inst_19613 = cljs.core.chunk_first.call(null, inst_19609);
                            var inst_19614 = cljs.core.chunk_rest.call(null, inst_19609);
                            var inst_19615 = cljs.core.count.call(null, inst_19613);
                            var inst_19595 = inst_19614;
                            var inst_19596 = inst_19613;
                            var inst_19597 = inst_19615;
                            var inst_19598 = 0;
                            var state_19638__$1 = function() {
                              var statearr_19655 = state_19638;
                              statearr_19655[9] = inst_19597;
                              statearr_19655[10] = inst_19598;
                              statearr_19655[11] = inst_19595;
                              statearr_19655[12] = inst_19596;
                              return statearr_19655;
                            }();
                            var statearr_19656_19685 = state_19638__$1;
                            statearr_19656_19685[2] = null;
                            statearr_19656_19685[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19639 === 3) {
                              var inst_19636 = state_19638[2];
                              var state_19638__$1 = state_19638;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19638__$1, inst_19636);
                            } else {
                              if (state_val_19639 === 12) {
                                var inst_19629 = state_19638[2];
                                var state_19638__$1 = state_19638;
                                var statearr_19657_19686 = state_19638__$1;
                                statearr_19657_19686[2] = inst_19629;
                                statearr_19657_19686[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19639 === 2) {
                                  var state_19638__$1 = state_19638;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19638__$1, 4, in$);
                                } else {
                                  if (state_val_19639 === 19) {
                                    var inst_19624 = state_19638[2];
                                    var state_19638__$1 = state_19638;
                                    var statearr_19658_19687 = state_19638__$1;
                                    statearr_19658_19687[2] = inst_19624;
                                    statearr_19658_19687[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19639 === 11) {
                                      var inst_19609 = state_19638[7];
                                      var inst_19595 = state_19638[11];
                                      var inst_19609__$1 = cljs.core.seq.call(null, inst_19595);
                                      var state_19638__$1 = function() {
                                        var statearr_19659 = state_19638;
                                        statearr_19659[7] = inst_19609__$1;
                                        return statearr_19659;
                                      }();
                                      if (inst_19609__$1) {
                                        var statearr_19660_19688 = state_19638__$1;
                                        statearr_19660_19688[1] = 14;
                                      } else {
                                        var statearr_19661_19689 = state_19638__$1;
                                        statearr_19661_19689[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19639 === 9) {
                                        var inst_19631 = state_19638[2];
                                        var state_19638__$1 = function() {
                                          var statearr_19662 = state_19638;
                                          statearr_19662[15] = inst_19631;
                                          return statearr_19662;
                                        }();
                                        var statearr_19663_19690 = state_19638__$1;
                                        statearr_19663_19690[2] = null;
                                        statearr_19663_19690[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19639 === 5) {
                                          var inst_19587 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_19638__$1 = state_19638;
                                          var statearr_19664_19691 = state_19638__$1;
                                          statearr_19664_19691[2] = inst_19587;
                                          statearr_19664_19691[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19639 === 14) {
                                            var inst_19609 = state_19638[7];
                                            var inst_19611 = cljs.core.chunked_seq_QMARK_.call(null, inst_19609);
                                            var state_19638__$1 = state_19638;
                                            if (inst_19611) {
                                              var statearr_19665_19692 = state_19638__$1;
                                              statearr_19665_19692[1] = 17;
                                            } else {
                                              var statearr_19666_19693 = state_19638__$1;
                                              statearr_19666_19693[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19639 === 16) {
                                              var inst_19627 = state_19638[2];
                                              var state_19638__$1 = state_19638;
                                              var statearr_19667_19694 = state_19638__$1;
                                              statearr_19667_19694[2] = inst_19627;
                                              statearr_19667_19694[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19639 === 10) {
                                                var inst_19598 = state_19638[10];
                                                var inst_19596 = state_19638[12];
                                                var inst_19603 = cljs.core._nth.call(null, inst_19596, inst_19598);
                                                var state_19638__$1 = state_19638;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19638__$1, 13, out, inst_19603);
                                              } else {
                                                if (state_val_19639 === 18) {
                                                  var inst_19609 = state_19638[7];
                                                  var inst_19618 = cljs.core.first.call(null, inst_19609);
                                                  var state_19638__$1 = state_19638;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19638__$1, 20, out, inst_19618);
                                                } else {
                                                  if (state_val_19639 === 8) {
                                                    var inst_19597 = state_19638[9];
                                                    var inst_19598 = state_19638[10];
                                                    var inst_19600 = inst_19598 < inst_19597;
                                                    var inst_19601 = inst_19600;
                                                    var state_19638__$1 = state_19638;
                                                    if (cljs.core.truth_(inst_19601)) {
                                                      var statearr_19668_19695 = state_19638__$1;
                                                      statearr_19668_19695[1] = 10;
                                                    } else {
                                                      var statearr_19669_19696 = state_19638__$1;
                                                      statearr_19669_19696[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_19673 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19673[0] = state_machine__5694__auto__;
              statearr_19673[1] = 1;
              return statearr_19673;
            };
            var state_machine__5694__auto____1 = function(state_19638) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_19638);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e19674) {
                    if (e19674 instanceof Object) {
                      var ex__5697__auto__ = e19674;
                      var statearr_19675_19697 = state_19638;
                      statearr_19675_19697[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19638);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19674;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19698 = state_19638;
                  state_19638 = G__19698;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_19638) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_19638);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_19676 = f__5709__auto__.call(null);
        statearr_19676[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_19676;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5708__auto___19779 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___19779) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___19779) {
            return function(state_19758) {
              var state_val_19759 = state_19758[1];
              if (state_val_19759 === 7) {
                var inst_19754 = state_19758[2];
                var state_19758__$1 = state_19758;
                var statearr_19760_19780 = state_19758__$1;
                statearr_19760_19780[2] = inst_19754;
                statearr_19760_19780[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19759 === 1) {
                  var state_19758__$1 = state_19758;
                  var statearr_19761_19781 = state_19758__$1;
                  statearr_19761_19781[2] = null;
                  statearr_19761_19781[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19759 === 4) {
                    var inst_19741 = state_19758[7];
                    var inst_19741__$1 = state_19758[2];
                    var inst_19742 = inst_19741__$1 == null;
                    var state_19758__$1 = function() {
                      var statearr_19762 = state_19758;
                      statearr_19762[7] = inst_19741__$1;
                      return statearr_19762;
                    }();
                    if (cljs.core.truth_(inst_19742)) {
                      var statearr_19763_19782 = state_19758__$1;
                      statearr_19763_19782[1] = 5;
                    } else {
                      var statearr_19764_19783 = state_19758__$1;
                      statearr_19764_19783[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19759 === 6) {
                      var inst_19741 = state_19758[7];
                      var state_19758__$1 = state_19758;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19758__$1, 11, to, inst_19741);
                    } else {
                      if (state_val_19759 === 3) {
                        var inst_19756 = state_19758[2];
                        var state_19758__$1 = state_19758;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19758__$1, inst_19756);
                      } else {
                        if (state_val_19759 === 2) {
                          var state_19758__$1 = state_19758;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19758__$1, 4, from);
                        } else {
                          if (state_val_19759 === 11) {
                            var inst_19751 = state_19758[2];
                            var state_19758__$1 = function() {
                              var statearr_19765 = state_19758;
                              statearr_19765[8] = inst_19751;
                              return statearr_19765;
                            }();
                            var statearr_19766_19784 = state_19758__$1;
                            statearr_19766_19784[2] = null;
                            statearr_19766_19784[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19759 === 9) {
                              var state_19758__$1 = state_19758;
                              var statearr_19767_19785 = state_19758__$1;
                              statearr_19767_19785[2] = null;
                              statearr_19767_19785[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19759 === 5) {
                                var state_19758__$1 = state_19758;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_19768_19786 = state_19758__$1;
                                  statearr_19768_19786[1] = 8;
                                } else {
                                  var statearr_19769_19787 = state_19758__$1;
                                  statearr_19769_19787[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19759 === 10) {
                                  var inst_19748 = state_19758[2];
                                  var state_19758__$1 = state_19758;
                                  var statearr_19770_19788 = state_19758__$1;
                                  statearr_19770_19788[2] = inst_19748;
                                  statearr_19770_19788[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19759 === 8) {
                                    var inst_19745 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_19758__$1 = state_19758;
                                    var statearr_19771_19789 = state_19758__$1;
                                    statearr_19771_19789[2] = inst_19745;
                                    statearr_19771_19789[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___19779);
          return function(switch__5693__auto__, c__5708__auto___19779) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_19775 = [null, null, null, null, null, null, null, null, null];
                statearr_19775[0] = state_machine__5694__auto__;
                statearr_19775[1] = 1;
                return statearr_19775;
              };
              var state_machine__5694__auto____1 = function(state_19758) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_19758);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e19776) {
                      if (e19776 instanceof Object) {
                        var ex__5697__auto__ = e19776;
                        var statearr_19777_19790 = state_19758;
                        statearr_19777_19790[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19758);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19776;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19791 = state_19758;
                    state_19758 = G__19791;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_19758) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_19758);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___19779);
        }();
        var state__5710__auto__ = function() {
          var statearr_19778 = f__5709__auto__.call(null);
          statearr_19778[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___19779;
          return statearr_19778;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___19779));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5708__auto___19878 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___19878, tc, fc) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___19878, tc, fc) {
            return function(state_19856) {
              var state_val_19857 = state_19856[1];
              if (state_val_19857 === 7) {
                var inst_19852 = state_19856[2];
                var state_19856__$1 = state_19856;
                var statearr_19858_19879 = state_19856__$1;
                statearr_19858_19879[2] = inst_19852;
                statearr_19858_19879[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19857 === 1) {
                  var state_19856__$1 = state_19856;
                  var statearr_19859_19880 = state_19856__$1;
                  statearr_19859_19880[2] = null;
                  statearr_19859_19880[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19857 === 4) {
                    var inst_19837 = state_19856[7];
                    var inst_19837__$1 = state_19856[2];
                    var inst_19838 = inst_19837__$1 == null;
                    var state_19856__$1 = function() {
                      var statearr_19860 = state_19856;
                      statearr_19860[7] = inst_19837__$1;
                      return statearr_19860;
                    }();
                    if (cljs.core.truth_(inst_19838)) {
                      var statearr_19861_19881 = state_19856__$1;
                      statearr_19861_19881[1] = 5;
                    } else {
                      var statearr_19862_19882 = state_19856__$1;
                      statearr_19862_19882[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19857 === 6) {
                      var inst_19837 = state_19856[7];
                      var inst_19843 = p.call(null, inst_19837);
                      var state_19856__$1 = state_19856;
                      if (cljs.core.truth_(inst_19843)) {
                        var statearr_19863_19883 = state_19856__$1;
                        statearr_19863_19883[1] = 9;
                      } else {
                        var statearr_19864_19884 = state_19856__$1;
                        statearr_19864_19884[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19857 === 3) {
                        var inst_19854 = state_19856[2];
                        var state_19856__$1 = state_19856;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19856__$1, inst_19854);
                      } else {
                        if (state_val_19857 === 2) {
                          var state_19856__$1 = state_19856;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19856__$1, 4, ch);
                        } else {
                          if (state_val_19857 === 11) {
                            var inst_19837 = state_19856[7];
                            var inst_19847 = state_19856[2];
                            var state_19856__$1 = state_19856;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19856__$1, 8, inst_19847, inst_19837);
                          } else {
                            if (state_val_19857 === 9) {
                              var state_19856__$1 = state_19856;
                              var statearr_19865_19885 = state_19856__$1;
                              statearr_19865_19885[2] = tc;
                              statearr_19865_19885[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19857 === 5) {
                                var inst_19840 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_19841 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_19856__$1 = function() {
                                  var statearr_19866 = state_19856;
                                  statearr_19866[8] = inst_19840;
                                  return statearr_19866;
                                }();
                                var statearr_19867_19886 = state_19856__$1;
                                statearr_19867_19886[2] = inst_19841;
                                statearr_19867_19886[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19857 === 10) {
                                  var state_19856__$1 = state_19856;
                                  var statearr_19868_19887 = state_19856__$1;
                                  statearr_19868_19887[2] = fc;
                                  statearr_19868_19887[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19857 === 8) {
                                    var inst_19849 = state_19856[2];
                                    var state_19856__$1 = function() {
                                      var statearr_19869 = state_19856;
                                      statearr_19869[9] = inst_19849;
                                      return statearr_19869;
                                    }();
                                    var statearr_19870_19888 = state_19856__$1;
                                    statearr_19870_19888[2] = null;
                                    statearr_19870_19888[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___19878, tc, fc);
          return function(switch__5693__auto__, c__5708__auto___19878, tc, fc) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_19874 = [null, null, null, null, null, null, null, null, null, null];
                statearr_19874[0] = state_machine__5694__auto__;
                statearr_19874[1] = 1;
                return statearr_19874;
              };
              var state_machine__5694__auto____1 = function(state_19856) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_19856);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e19875) {
                      if (e19875 instanceof Object) {
                        var ex__5697__auto__ = e19875;
                        var statearr_19876_19889 = state_19856;
                        statearr_19876_19889[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19856);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19875;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19890 = state_19856;
                    state_19856 = G__19890;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_19856) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_19856);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___19878, tc, fc);
        }();
        var state__5710__auto__ = function() {
          var statearr_19877 = f__5709__auto__.call(null);
          statearr_19877[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___19878;
          return statearr_19877;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___19878, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_19937) {
            var state_val_19938 = state_19937[1];
            if (state_val_19938 === 7) {
              var inst_19933 = state_19937[2];
              var state_19937__$1 = state_19937;
              var statearr_19939_19955 = state_19937__$1;
              statearr_19939_19955[2] = inst_19933;
              statearr_19939_19955[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19938 === 6) {
                var inst_19923 = state_19937[7];
                var inst_19926 = state_19937[8];
                var inst_19930 = f.call(null, inst_19923, inst_19926);
                var inst_19923__$1 = inst_19930;
                var state_19937__$1 = function() {
                  var statearr_19940 = state_19937;
                  statearr_19940[7] = inst_19923__$1;
                  return statearr_19940;
                }();
                var statearr_19941_19956 = state_19937__$1;
                statearr_19941_19956[2] = null;
                statearr_19941_19956[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19938 === 5) {
                  var inst_19923 = state_19937[7];
                  var state_19937__$1 = state_19937;
                  var statearr_19942_19957 = state_19937__$1;
                  statearr_19942_19957[2] = inst_19923;
                  statearr_19942_19957[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19938 === 4) {
                    var inst_19926 = state_19937[8];
                    var inst_19926__$1 = state_19937[2];
                    var inst_19927 = inst_19926__$1 == null;
                    var state_19937__$1 = function() {
                      var statearr_19943 = state_19937;
                      statearr_19943[8] = inst_19926__$1;
                      return statearr_19943;
                    }();
                    if (cljs.core.truth_(inst_19927)) {
                      var statearr_19944_19958 = state_19937__$1;
                      statearr_19944_19958[1] = 5;
                    } else {
                      var statearr_19945_19959 = state_19937__$1;
                      statearr_19945_19959[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19938 === 3) {
                      var inst_19935 = state_19937[2];
                      var state_19937__$1 = state_19937;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19937__$1, inst_19935);
                    } else {
                      if (state_val_19938 === 2) {
                        var state_19937__$1 = state_19937;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19937__$1, 4, ch);
                      } else {
                        if (state_val_19938 === 1) {
                          var inst_19923 = init;
                          var state_19937__$1 = function() {
                            var statearr_19946 = state_19937;
                            statearr_19946[7] = inst_19923;
                            return statearr_19946;
                          }();
                          var statearr_19947_19960 = state_19937__$1;
                          statearr_19947_19960[2] = null;
                          statearr_19947_19960[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_19951 = [null, null, null, null, null, null, null, null, null];
              statearr_19951[0] = state_machine__5694__auto__;
              statearr_19951[1] = 1;
              return statearr_19951;
            };
            var state_machine__5694__auto____1 = function(state_19937) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_19937);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e19952) {
                    if (e19952 instanceof Object) {
                      var ex__5697__auto__ = e19952;
                      var statearr_19953_19961 = state_19937;
                      statearr_19953_19961[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19937);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19952;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19962 = state_19937;
                  state_19937 = G__19962;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_19937) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_19937);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_19954 = f__5709__auto__.call(null);
        statearr_19954[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_19954;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__) {
            return function(state_20024) {
              var state_val_20025 = state_20024[1];
              if (state_val_20025 === 7) {
                var inst_20005 = state_20024[7];
                var inst_20010 = state_20024[2];
                var inst_20011 = cljs.core.next.call(null, inst_20005);
                var inst_20005__$1 = inst_20011;
                var state_20024__$1 = function() {
                  var statearr_20026 = state_20024;
                  statearr_20026[8] = inst_20010;
                  statearr_20026[7] = inst_20005__$1;
                  return statearr_20026;
                }();
                var statearr_20027_20045 = state_20024__$1;
                statearr_20027_20045[2] = null;
                statearr_20027_20045[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20025 === 1) {
                  var inst_20004 = cljs.core.seq.call(null, coll);
                  var inst_20005 = inst_20004;
                  var state_20024__$1 = function() {
                    var statearr_20028 = state_20024;
                    statearr_20028[7] = inst_20005;
                    return statearr_20028;
                  }();
                  var statearr_20029_20046 = state_20024__$1;
                  statearr_20029_20046[2] = null;
                  statearr_20029_20046[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20025 === 4) {
                    var inst_20005 = state_20024[7];
                    var inst_20008 = cljs.core.first.call(null, inst_20005);
                    var state_20024__$1 = state_20024;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20024__$1, 7, ch, inst_20008);
                  } else {
                    if (state_val_20025 === 6) {
                      var inst_20020 = state_20024[2];
                      var state_20024__$1 = state_20024;
                      var statearr_20030_20047 = state_20024__$1;
                      statearr_20030_20047[2] = inst_20020;
                      statearr_20030_20047[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20025 === 3) {
                        var inst_20022 = state_20024[2];
                        var state_20024__$1 = state_20024;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20024__$1, inst_20022);
                      } else {
                        if (state_val_20025 === 2) {
                          var inst_20005 = state_20024[7];
                          var state_20024__$1 = state_20024;
                          if (cljs.core.truth_(inst_20005)) {
                            var statearr_20031_20048 = state_20024__$1;
                            statearr_20031_20048[1] = 4;
                          } else {
                            var statearr_20032_20049 = state_20024__$1;
                            statearr_20032_20049[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20025 === 9) {
                            var state_20024__$1 = state_20024;
                            var statearr_20033_20050 = state_20024__$1;
                            statearr_20033_20050[2] = null;
                            statearr_20033_20050[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20025 === 5) {
                              var state_20024__$1 = state_20024;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_20034_20051 = state_20024__$1;
                                statearr_20034_20051[1] = 8;
                              } else {
                                var statearr_20035_20052 = state_20024__$1;
                                statearr_20035_20052[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20025 === 10) {
                                var inst_20018 = state_20024[2];
                                var state_20024__$1 = state_20024;
                                var statearr_20036_20053 = state_20024__$1;
                                statearr_20036_20053[2] = inst_20018;
                                statearr_20036_20053[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20025 === 8) {
                                  var inst_20015 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_20024__$1 = state_20024;
                                  var statearr_20037_20054 = state_20024__$1;
                                  statearr_20037_20054[2] = inst_20015;
                                  statearr_20037_20054[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto__);
          return function(switch__5693__auto__, c__5708__auto__) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_20041 = [null, null, null, null, null, null, null, null, null];
                statearr_20041[0] = state_machine__5694__auto__;
                statearr_20041[1] = 1;
                return statearr_20041;
              };
              var state_machine__5694__auto____1 = function(state_20024) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_20024);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e20042) {
                      if (e20042 instanceof Object) {
                        var ex__5697__auto__ = e20042;
                        var statearr_20043_20055 = state_20024;
                        statearr_20043_20055[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20024);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20042;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20056 = state_20024;
                    state_20024 = G__20056;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_20024) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_20024);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__);
        }();
        var state__5710__auto__ = function() {
          var statearr_20044 = f__5709__auto__.call(null);
          statearr_20044[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_20044;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__));
    return c__5708__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj20058 = {};
  return obj20058;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3546__auto__ = _;
    if (and__3546__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4185__auto__ = _ == null ? null : _;
    return function() {
      var or__3558__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj20060 = {};
  return obj20060;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t20284 !== "undefined") {
    } else {
      cljs.core.async.t20284 = function(cs, ch, mult, meta20285) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta20285 = meta20285;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t20284.cljs$lang$type = true;
      cljs.core.async.t20284.cljs$lang$ctorStr = "cljs.core.async/t20284";
      cljs.core.async.t20284.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t20284");
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t20284.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t20284.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_20286) {
          var self__ = this;
          var _20286__$1 = this;
          return self__.meta20285;
        };
      }(cs);
      cljs.core.async.t20284.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_20286, meta20285__$1) {
          var self__ = this;
          var _20286__$1 = this;
          return new cljs.core.async.t20284(self__.cs, self__.ch, self__.mult, meta20285__$1);
        };
      }(cs);
      cljs.core.async.__GT_t20284 = function(cs) {
        return function __GT_t20284(cs__$1, ch__$1, mult__$1, meta20285) {
          return new cljs.core.async.t20284(cs__$1, ch__$1, mult__$1, meta20285);
        };
      }(cs);
    }
    return new cljs.core.async.t20284(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5708__auto___20507 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___20507, cs, m, dchan, dctr, done) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___20507, cs, m, dchan, dctr, done) {
          return function(state_20421) {
            var state_val_20422 = state_20421[1];
            if (state_val_20422 === 7) {
              var inst_20417 = state_20421[2];
              var state_20421__$1 = state_20421;
              var statearr_20423_20508 = state_20421__$1;
              statearr_20423_20508[2] = inst_20417;
              statearr_20423_20508[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20422 === 20) {
                var inst_20318 = state_20421[7];
                var inst_20328 = cljs.core.first.call(null, inst_20318);
                var inst_20329 = cljs.core.nth.call(null, inst_20328, 0, null);
                var inst_20330 = cljs.core.nth.call(null, inst_20328, 1, null);
                var state_20421__$1 = function() {
                  var statearr_20424 = state_20421;
                  statearr_20424[8] = inst_20329;
                  return statearr_20424;
                }();
                if (cljs.core.truth_(inst_20330)) {
                  var statearr_20425_20509 = state_20421__$1;
                  statearr_20425_20509[1] = 22;
                } else {
                  var statearr_20426_20510 = state_20421__$1;
                  statearr_20426_20510[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20422 === 27) {
                  var inst_20358 = state_20421[9];
                  var inst_20360 = state_20421[10];
                  var inst_20365 = cljs.core._nth.call(null, inst_20358, inst_20360);
                  var state_20421__$1 = function() {
                    var statearr_20427 = state_20421;
                    statearr_20427[11] = inst_20365;
                    return statearr_20427;
                  }();
                  var statearr_20428_20511 = state_20421__$1;
                  statearr_20428_20511[2] = null;
                  statearr_20428_20511[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20422 === 1) {
                    var state_20421__$1 = state_20421;
                    var statearr_20429_20512 = state_20421__$1;
                    statearr_20429_20512[2] = null;
                    statearr_20429_20512[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20422 === 24) {
                      var inst_20318 = state_20421[7];
                      var inst_20335 = state_20421[2];
                      var inst_20336 = cljs.core.next.call(null, inst_20318);
                      var inst_20298 = inst_20336;
                      var inst_20299 = null;
                      var inst_20300 = 0;
                      var inst_20301 = 0;
                      var state_20421__$1 = function() {
                        var statearr_20430 = state_20421;
                        statearr_20430[12] = inst_20335;
                        statearr_20430[13] = inst_20299;
                        statearr_20430[14] = inst_20301;
                        statearr_20430[15] = inst_20298;
                        statearr_20430[16] = inst_20300;
                        return statearr_20430;
                      }();
                      var statearr_20431_20513 = state_20421__$1;
                      statearr_20431_20513[2] = null;
                      statearr_20431_20513[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20422 === 39) {
                        var inst_20378 = state_20421[17];
                        var inst_20396 = state_20421[2];
                        var inst_20397 = cljs.core.next.call(null, inst_20378);
                        var inst_20357 = inst_20397;
                        var inst_20358 = null;
                        var inst_20359 = 0;
                        var inst_20360 = 0;
                        var state_20421__$1 = function() {
                          var statearr_20435 = state_20421;
                          statearr_20435[9] = inst_20358;
                          statearr_20435[18] = inst_20396;
                          statearr_20435[19] = inst_20357;
                          statearr_20435[20] = inst_20359;
                          statearr_20435[10] = inst_20360;
                          return statearr_20435;
                        }();
                        var statearr_20436_20514 = state_20421__$1;
                        statearr_20436_20514[2] = null;
                        statearr_20436_20514[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20422 === 4) {
                          var inst_20289 = state_20421[21];
                          var inst_20289__$1 = state_20421[2];
                          var inst_20290 = inst_20289__$1 == null;
                          var state_20421__$1 = function() {
                            var statearr_20437 = state_20421;
                            statearr_20437[21] = inst_20289__$1;
                            return statearr_20437;
                          }();
                          if (cljs.core.truth_(inst_20290)) {
                            var statearr_20438_20515 = state_20421__$1;
                            statearr_20438_20515[1] = 5;
                          } else {
                            var statearr_20439_20516 = state_20421__$1;
                            statearr_20439_20516[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20422 === 15) {
                            var inst_20299 = state_20421[13];
                            var inst_20301 = state_20421[14];
                            var inst_20298 = state_20421[15];
                            var inst_20300 = state_20421[16];
                            var inst_20314 = state_20421[2];
                            var inst_20315 = inst_20301 + 1;
                            var tmp20432 = inst_20299;
                            var tmp20433 = inst_20298;
                            var tmp20434 = inst_20300;
                            var inst_20298__$1 = tmp20433;
                            var inst_20299__$1 = tmp20432;
                            var inst_20300__$1 = tmp20434;
                            var inst_20301__$1 = inst_20315;
                            var state_20421__$1 = function() {
                              var statearr_20440 = state_20421;
                              statearr_20440[22] = inst_20314;
                              statearr_20440[13] = inst_20299__$1;
                              statearr_20440[14] = inst_20301__$1;
                              statearr_20440[15] = inst_20298__$1;
                              statearr_20440[16] = inst_20300__$1;
                              return statearr_20440;
                            }();
                            var statearr_20441_20517 = state_20421__$1;
                            statearr_20441_20517[2] = null;
                            statearr_20441_20517[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20422 === 21) {
                              var inst_20339 = state_20421[2];
                              var state_20421__$1 = state_20421;
                              var statearr_20442_20518 = state_20421__$1;
                              statearr_20442_20518[2] = inst_20339;
                              statearr_20442_20518[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20422 === 31) {
                                var inst_20365 = state_20421[11];
                                var inst_20366 = state_20421[2];
                                var inst_20367 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_20368 = cljs.core.async.untap_STAR_.call(null, m, inst_20365);
                                var state_20421__$1 = function() {
                                  var statearr_20443 = state_20421;
                                  statearr_20443[23] = inst_20367;
                                  statearr_20443[24] = inst_20366;
                                  return statearr_20443;
                                }();
                                var statearr_20444_20519 = state_20421__$1;
                                statearr_20444_20519[2] = inst_20368;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20421__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20422 === 32) {
                                  var inst_20365 = state_20421[11];
                                  var inst_20289 = state_20421[21];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_20421, 31, Object, null, 30);
                                  var inst_20372 = cljs.core.async.put_BANG_.call(null, inst_20365, inst_20289, done);
                                  var state_20421__$1 = state_20421;
                                  var statearr_20445_20520 = state_20421__$1;
                                  statearr_20445_20520[2] = inst_20372;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20421__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20422 === 40) {
                                    var inst_20387 = state_20421[25];
                                    var inst_20388 = state_20421[2];
                                    var inst_20389 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_20390 = cljs.core.async.untap_STAR_.call(null, m, inst_20387);
                                    var state_20421__$1 = function() {
                                      var statearr_20446 = state_20421;
                                      statearr_20446[26] = inst_20389;
                                      statearr_20446[27] = inst_20388;
                                      return statearr_20446;
                                    }();
                                    var statearr_20447_20521 = state_20421__$1;
                                    statearr_20447_20521[2] = inst_20390;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20421__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20422 === 33) {
                                      var inst_20378 = state_20421[17];
                                      var inst_20380 = cljs.core.chunked_seq_QMARK_.call(null, inst_20378);
                                      var state_20421__$1 = state_20421;
                                      if (inst_20380) {
                                        var statearr_20448_20522 = state_20421__$1;
                                        statearr_20448_20522[1] = 36;
                                      } else {
                                        var statearr_20449_20523 = state_20421__$1;
                                        statearr_20449_20523[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20422 === 13) {
                                        var inst_20308 = state_20421[28];
                                        var inst_20311 = cljs.core.async.close_BANG_.call(null, inst_20308);
                                        var state_20421__$1 = state_20421;
                                        var statearr_20450_20524 = state_20421__$1;
                                        statearr_20450_20524[2] = inst_20311;
                                        statearr_20450_20524[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20422 === 22) {
                                          var inst_20329 = state_20421[8];
                                          var inst_20332 = cljs.core.async.close_BANG_.call(null, inst_20329);
                                          var state_20421__$1 = state_20421;
                                          var statearr_20451_20525 = state_20421__$1;
                                          statearr_20451_20525[2] = inst_20332;
                                          statearr_20451_20525[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20422 === 36) {
                                            var inst_20378 = state_20421[17];
                                            var inst_20382 = cljs.core.chunk_first.call(null, inst_20378);
                                            var inst_20383 = cljs.core.chunk_rest.call(null, inst_20378);
                                            var inst_20384 = cljs.core.count.call(null, inst_20382);
                                            var inst_20357 = inst_20383;
                                            var inst_20358 = inst_20382;
                                            var inst_20359 = inst_20384;
                                            var inst_20360 = 0;
                                            var state_20421__$1 = function() {
                                              var statearr_20452 = state_20421;
                                              statearr_20452[9] = inst_20358;
                                              statearr_20452[19] = inst_20357;
                                              statearr_20452[20] = inst_20359;
                                              statearr_20452[10] = inst_20360;
                                              return statearr_20452;
                                            }();
                                            var statearr_20453_20526 = state_20421__$1;
                                            statearr_20453_20526[2] = null;
                                            statearr_20453_20526[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20422 === 41) {
                                              var inst_20387 = state_20421[25];
                                              var inst_20289 = state_20421[21];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_20421, 40, Object, null, 39);
                                              var inst_20394 = cljs.core.async.put_BANG_.call(null, inst_20387, inst_20289, done);
                                              var state_20421__$1 = state_20421;
                                              var statearr_20454_20527 = state_20421__$1;
                                              statearr_20454_20527[2] = inst_20394;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20421__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_20422 === 43) {
                                                var state_20421__$1 = state_20421;
                                                var statearr_20455_20528 = state_20421__$1;
                                                statearr_20455_20528[2] = null;
                                                statearr_20455_20528[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20422 === 29) {
                                                  var inst_20405 = state_20421[2];
                                                  var state_20421__$1 = state_20421;
                                                  var statearr_20456_20529 = state_20421__$1;
                                                  statearr_20456_20529[2] = inst_20405;
                                                  statearr_20456_20529[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_20422 === 44) {
                                                    var inst_20414 = state_20421[2];
                                                    var state_20421__$1 = function() {
                                                      var statearr_20457 = state_20421;
                                                      statearr_20457[29] = inst_20414;
                                                      return statearr_20457;
                                                    }();
                                                    var statearr_20458_20530 = state_20421__$1;
                                                    statearr_20458_20530[2] = null;
                                                    statearr_20458_20530[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20422 === 6) {
                                                      var inst_20349 = state_20421[30];
                                                      var inst_20348 = cljs.core.deref.call(null, cs);
                                                      var inst_20349__$1 = cljs.core.keys.call(null, inst_20348);
                                                      var inst_20350 = cljs.core.count.call(null, inst_20349__$1);
                                                      var inst_20351 = cljs.core.reset_BANG_.call(null, dctr, inst_20350);
                                                      var inst_20356 = cljs.core.seq.call(null, inst_20349__$1);
                                                      var inst_20357 = inst_20356;
                                                      var inst_20358 = null;
                                                      var inst_20359 = 0;
                                                      var inst_20360 = 0;
                                                      var state_20421__$1 = function() {
                                                        var statearr_20459 = state_20421;
                                                        statearr_20459[9] = inst_20358;
                                                        statearr_20459[30] = inst_20349__$1;
                                                        statearr_20459[19] = inst_20357;
                                                        statearr_20459[20] = inst_20359;
                                                        statearr_20459[31] = inst_20351;
                                                        statearr_20459[10] = inst_20360;
                                                        return statearr_20459;
                                                      }();
                                                      var statearr_20460_20531 = state_20421__$1;
                                                      statearr_20460_20531[2] = null;
                                                      statearr_20460_20531[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_20422 === 28) {
                                                        var inst_20357 = state_20421[19];
                                                        var inst_20378 = state_20421[17];
                                                        var inst_20378__$1 = cljs.core.seq.call(null, inst_20357);
                                                        var state_20421__$1 = function() {
                                                          var statearr_20461 = state_20421;
                                                          statearr_20461[17] = inst_20378__$1;
                                                          return statearr_20461;
                                                        }();
                                                        if (inst_20378__$1) {
                                                          var statearr_20462_20532 = state_20421__$1;
                                                          statearr_20462_20532[1] = 33;
                                                        } else {
                                                          var statearr_20463_20533 = state_20421__$1;
                                                          statearr_20463_20533[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_20422 === 25) {
                                                          var inst_20359 = state_20421[20];
                                                          var inst_20360 = state_20421[10];
                                                          var inst_20362 = inst_20360 < inst_20359;
                                                          var inst_20363 = inst_20362;
                                                          var state_20421__$1 = state_20421;
                                                          if (cljs.core.truth_(inst_20363)) {
                                                            var statearr_20464_20534 = state_20421__$1;
                                                            statearr_20464_20534[1] = 27;
                                                          } else {
                                                            var statearr_20465_20535 = state_20421__$1;
                                                            statearr_20465_20535[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_20422 === 34) {
                                                            var state_20421__$1 = state_20421;
                                                            var statearr_20466_20536 = state_20421__$1;
                                                            statearr_20466_20536[2] = null;
                                                            statearr_20466_20536[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_20422 === 17) {
                                                              var state_20421__$1 = state_20421;
                                                              var statearr_20467_20537 = state_20421__$1;
                                                              statearr_20467_20537[2] = null;
                                                              statearr_20467_20537[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_20422 === 3) {
                                                                var inst_20419 = state_20421[2];
                                                                var state_20421__$1 = state_20421;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20421__$1, inst_20419);
                                                              } else {
                                                                if (state_val_20422 === 12) {
                                                                  var inst_20344 = state_20421[2];
                                                                  var state_20421__$1 = state_20421;
                                                                  var statearr_20468_20538 = state_20421__$1;
                                                                  statearr_20468_20538[2] = inst_20344;
                                                                  statearr_20468_20538[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_20422 === 2) {
                                                                    var state_20421__$1 = state_20421;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20421__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_20422 === 23) {
                                                                      var state_20421__$1 = state_20421;
                                                                      var statearr_20469_20539 = state_20421__$1;
                                                                      statearr_20469_20539[2] = null;
                                                                      statearr_20469_20539[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_20422 === 35) {
                                                                        var inst_20403 = state_20421[2];
                                                                        var state_20421__$1 = state_20421;
                                                                        var statearr_20470_20540 = state_20421__$1;
                                                                        statearr_20470_20540[2] = inst_20403;
                                                                        statearr_20470_20540[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_20422 === 19) {
                                                                          var inst_20318 = state_20421[7];
                                                                          var inst_20322 = cljs.core.chunk_first.call(null, inst_20318);
                                                                          var inst_20323 = cljs.core.chunk_rest.call(null, inst_20318);
                                                                          var inst_20324 = cljs.core.count.call(null, inst_20322);
                                                                          var inst_20298 = inst_20323;
                                                                          var inst_20299 = inst_20322;
                                                                          var inst_20300 = inst_20324;
                                                                          var inst_20301 = 0;
                                                                          var state_20421__$1 = function() {
                                                                            var statearr_20471 = state_20421;
                                                                            statearr_20471[13] = inst_20299;
                                                                            statearr_20471[14] = inst_20301;
                                                                            statearr_20471[15] = inst_20298;
                                                                            statearr_20471[16] = inst_20300;
                                                                            return statearr_20471;
                                                                          }();
                                                                          var statearr_20472_20541 = state_20421__$1;
                                                                          statearr_20472_20541[2] = null;
                                                                          statearr_20472_20541[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_20422 === 11) {
                                                                            var inst_20318 = state_20421[7];
                                                                            var inst_20298 = state_20421[15];
                                                                            var inst_20318__$1 = cljs.core.seq.call(null, inst_20298);
                                                                            var state_20421__$1 = function() {
                                                                              var statearr_20473 = state_20421;
                                                                              statearr_20473[7] = inst_20318__$1;
                                                                              return statearr_20473;
                                                                            }();
                                                                            if (inst_20318__$1) {
                                                                              var statearr_20474_20542 = state_20421__$1;
                                                                              statearr_20474_20542[1] = 16;
                                                                            } else {
                                                                              var statearr_20475_20543 = state_20421__$1;
                                                                              statearr_20475_20543[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_20422 === 9) {
                                                                              var inst_20346 = state_20421[2];
                                                                              var state_20421__$1 = state_20421;
                                                                              var statearr_20476_20544 = state_20421__$1;
                                                                              statearr_20476_20544[2] = inst_20346;
                                                                              statearr_20476_20544[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_20422 === 5) {
                                                                                var inst_20296 = cljs.core.deref.call(null, cs);
                                                                                var inst_20297 = cljs.core.seq.call(null, inst_20296);
                                                                                var inst_20298 = inst_20297;
                                                                                var inst_20299 = null;
                                                                                var inst_20300 = 0;
                                                                                var inst_20301 = 0;
                                                                                var state_20421__$1 = function() {
                                                                                  var statearr_20477 = state_20421;
                                                                                  statearr_20477[13] = inst_20299;
                                                                                  statearr_20477[14] = inst_20301;
                                                                                  statearr_20477[15] = inst_20298;
                                                                                  statearr_20477[16] = inst_20300;
                                                                                  return statearr_20477;
                                                                                }();
                                                                                var statearr_20478_20545 = state_20421__$1;
                                                                                statearr_20478_20545[2] = null;
                                                                                statearr_20478_20545[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_20422 === 14) {
                                                                                  var state_20421__$1 = state_20421;
                                                                                  var statearr_20479_20546 = state_20421__$1;
                                                                                  statearr_20479_20546[2] = null;
                                                                                  statearr_20479_20546[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_20422 === 45) {
                                                                                    var inst_20411 = state_20421[2];
                                                                                    var state_20421__$1 = state_20421;
                                                                                    var statearr_20480_20547 = state_20421__$1;
                                                                                    statearr_20480_20547[2] = inst_20411;
                                                                                    statearr_20480_20547[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_20422 === 26) {
                                                                                      var inst_20349 = state_20421[30];
                                                                                      var inst_20407 = state_20421[2];
                                                                                      var inst_20408 = cljs.core.seq.call(null, inst_20349);
                                                                                      var state_20421__$1 = function() {
                                                                                        var statearr_20481 = state_20421;
                                                                                        statearr_20481[32] = inst_20407;
                                                                                        return statearr_20481;
                                                                                      }();
                                                                                      if (inst_20408) {
                                                                                        var statearr_20482_20548 = state_20421__$1;
                                                                                        statearr_20482_20548[1] = 42;
                                                                                      } else {
                                                                                        var statearr_20483_20549 = state_20421__$1;
                                                                                        statearr_20483_20549[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_20422 === 16) {
                                                                                        var inst_20318 = state_20421[7];
                                                                                        var inst_20320 = cljs.core.chunked_seq_QMARK_.call(null, inst_20318);
                                                                                        var state_20421__$1 = state_20421;
                                                                                        if (inst_20320) {
                                                                                          var statearr_20487_20550 = state_20421__$1;
                                                                                          statearr_20487_20550[1] = 19;
                                                                                        } else {
                                                                                          var statearr_20488_20551 = state_20421__$1;
                                                                                          statearr_20488_20551[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_20422 === 38) {
                                                                                          var inst_20400 = state_20421[2];
                                                                                          var state_20421__$1 = state_20421;
                                                                                          var statearr_20489_20552 = state_20421__$1;
                                                                                          statearr_20489_20552[2] = inst_20400;
                                                                                          statearr_20489_20552[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_20422 === 30) {
                                                                                            var inst_20358 = state_20421[9];
                                                                                            var inst_20357 = state_20421[19];
                                                                                            var inst_20359 = state_20421[20];
                                                                                            var inst_20360 = state_20421[10];
                                                                                            var inst_20374 = state_20421[2];
                                                                                            var inst_20375 = inst_20360 + 1;
                                                                                            var tmp20484 = inst_20358;
                                                                                            var tmp20485 = inst_20357;
                                                                                            var tmp20486 = inst_20359;
                                                                                            var inst_20357__$1 = tmp20485;
                                                                                            var inst_20358__$1 = tmp20484;
                                                                                            var inst_20359__$1 = tmp20486;
                                                                                            var inst_20360__$1 = inst_20375;
                                                                                            var state_20421__$1 = function() {
                                                                                              var statearr_20490 = state_20421;
                                                                                              statearr_20490[9] = inst_20358__$1;
                                                                                              statearr_20490[19] = inst_20357__$1;
                                                                                              statearr_20490[33] = inst_20374;
                                                                                              statearr_20490[20] = inst_20359__$1;
                                                                                              statearr_20490[10] = inst_20360__$1;
                                                                                              return statearr_20490;
                                                                                            }();
                                                                                            var statearr_20491_20553 = state_20421__$1;
                                                                                            statearr_20491_20553[2] = null;
                                                                                            statearr_20491_20553[1] = 25;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_20422 === 10) {
                                                                                              var inst_20299 = state_20421[13];
                                                                                              var inst_20301 = state_20421[14];
                                                                                              var inst_20307 = cljs.core._nth.call(null, inst_20299, inst_20301);
                                                                                              var inst_20308 = cljs.core.nth.call(null, inst_20307, 0, null);
                                                                                              var inst_20309 = cljs.core.nth.call(null, inst_20307, 1, null);
                                                                                              var state_20421__$1 = function() {
                                                                                                var statearr_20492 = state_20421;
                                                                                                statearr_20492[28] = inst_20308;
                                                                                                return statearr_20492;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_20309)) {
                                                                                                var statearr_20493_20554 = state_20421__$1;
                                                                                                statearr_20493_20554[1] = 13;
                                                                                              } else {
                                                                                                var statearr_20494_20555 = state_20421__$1;
                                                                                                statearr_20494_20555[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_20422 === 18) {
                                                                                                var inst_20342 = state_20421[2];
                                                                                                var state_20421__$1 = state_20421;
                                                                                                var statearr_20495_20556 = state_20421__$1;
                                                                                                statearr_20495_20556[2] = inst_20342;
                                                                                                statearr_20495_20556[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_20422 === 42) {
                                                                                                  var state_20421__$1 = state_20421;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20421__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_20422 === 37) {
                                                                                                    var inst_20378 = state_20421[17];
                                                                                                    var inst_20387 = cljs.core.first.call(null, inst_20378);
                                                                                                    var state_20421__$1 = function() {
                                                                                                      var statearr_20496 = state_20421;
                                                                                                      statearr_20496[25] = inst_20387;
                                                                                                      return statearr_20496;
                                                                                                    }();
                                                                                                    var statearr_20497_20557 = state_20421__$1;
                                                                                                    statearr_20497_20557[2] = null;
                                                                                                    statearr_20497_20557[1] = 41;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_20422 === 8) {
                                                                                                      var inst_20301 = state_20421[14];
                                                                                                      var inst_20300 = state_20421[16];
                                                                                                      var inst_20303 = inst_20301 < inst_20300;
                                                                                                      var inst_20304 = inst_20303;
                                                                                                      var state_20421__$1 = state_20421;
                                                                                                      if (cljs.core.truth_(inst_20304)) {
                                                                                                        var statearr_20498_20558 = state_20421__$1;
                                                                                                        statearr_20498_20558[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_20499_20559 = state_20421__$1;
                                                                                                        statearr_20499_20559[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___20507, cs, m, dchan, dctr, done);
        return function(switch__5693__auto__, c__5708__auto___20507, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_20503 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20503[0] = state_machine__5694__auto__;
              statearr_20503[1] = 1;
              return statearr_20503;
            };
            var state_machine__5694__auto____1 = function(state_20421) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_20421);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e20504) {
                    if (e20504 instanceof Object) {
                      var ex__5697__auto__ = e20504;
                      var statearr_20505_20560 = state_20421;
                      statearr_20505_20560[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20421);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20504;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20561 = state_20421;
                  state_20421 = G__20561;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_20421) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_20421);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___20507, cs, m, dchan, dctr, done);
      }();
      var state__5710__auto__ = function() {
        var statearr_20506 = f__5709__auto__.call(null);
        statearr_20506[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___20507;
        return statearr_20506;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___20507, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj20563 = {};
  return obj20563;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t20673 !== "undefined") {
    } else {
      cljs.core.async.t20673 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta20674) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta20674 = meta20674;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t20673.cljs$lang$type = true;
      cljs.core.async.t20673.cljs$lang$ctorStr = "cljs.core.async/t20673";
      cljs.core.async.t20673.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t20673");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t20673.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_20675) {
          var self__ = this;
          var _20675__$1 = this;
          return self__.meta20674;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t20673.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_20675, meta20674__$1) {
          var self__ = this;
          var _20675__$1 = this;
          return new cljs.core.async.t20673(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta20674__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t20673 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t20673(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta20674) {
          return new cljs.core.async.t20673(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta20674);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t20673(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__5708__auto___20782 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_20740) {
            var state_val_20741 = state_20740[1];
            if (state_val_20741 === 7) {
              var inst_20689 = state_20740[7];
              var inst_20694 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20689);
              var state_20740__$1 = state_20740;
              var statearr_20742_20783 = state_20740__$1;
              statearr_20742_20783[2] = inst_20694;
              statearr_20742_20783[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20741 === 20) {
                var inst_20704 = state_20740[8];
                var state_20740__$1 = state_20740;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20740__$1, 23, out, inst_20704);
              } else {
                if (state_val_20741 === 1) {
                  var inst_20679 = state_20740[9];
                  var inst_20679__$1 = calc_state.call(null);
                  var inst_20680 = cljs.core.seq_QMARK_.call(null, inst_20679__$1);
                  var state_20740__$1 = function() {
                    var statearr_20743 = state_20740;
                    statearr_20743[9] = inst_20679__$1;
                    return statearr_20743;
                  }();
                  if (inst_20680) {
                    var statearr_20744_20784 = state_20740__$1;
                    statearr_20744_20784[1] = 2;
                  } else {
                    var statearr_20745_20785 = state_20740__$1;
                    statearr_20745_20785[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20741 === 4) {
                    var inst_20679 = state_20740[9];
                    var inst_20685 = state_20740[2];
                    var inst_20686 = cljs.core.get.call(null, inst_20685, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                    var inst_20687 = cljs.core.get.call(null, inst_20685, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                    var inst_20688 = cljs.core.get.call(null, inst_20685, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                    var inst_20689 = inst_20679;
                    var state_20740__$1 = function() {
                      var statearr_20746 = state_20740;
                      statearr_20746[7] = inst_20689;
                      statearr_20746[10] = inst_20686;
                      statearr_20746[11] = inst_20688;
                      statearr_20746[12] = inst_20687;
                      return statearr_20746;
                    }();
                    var statearr_20747_20786 = state_20740__$1;
                    statearr_20747_20786[2] = null;
                    statearr_20747_20786[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20741 === 15) {
                      var state_20740__$1 = state_20740;
                      var statearr_20748_20787 = state_20740__$1;
                      statearr_20748_20787[2] = null;
                      statearr_20748_20787[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20741 === 21) {
                        var state_20740__$1 = state_20740;
                        var statearr_20749_20788 = state_20740__$1;
                        statearr_20749_20788[2] = null;
                        statearr_20749_20788[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20741 === 13) {
                          var inst_20736 = state_20740[2];
                          var state_20740__$1 = state_20740;
                          var statearr_20750_20789 = state_20740__$1;
                          statearr_20750_20789[2] = inst_20736;
                          statearr_20750_20789[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20741 === 22) {
                            var inst_20697 = state_20740[13];
                            var inst_20733 = state_20740[2];
                            var inst_20689 = inst_20697;
                            var state_20740__$1 = function() {
                              var statearr_20751 = state_20740;
                              statearr_20751[7] = inst_20689;
                              statearr_20751[14] = inst_20733;
                              return statearr_20751;
                            }();
                            var statearr_20752_20790 = state_20740__$1;
                            statearr_20752_20790[2] = null;
                            statearr_20752_20790[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20741 === 6) {
                              var inst_20738 = state_20740[2];
                              var state_20740__$1 = state_20740;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20740__$1, inst_20738);
                            } else {
                              if (state_val_20741 === 17) {
                                var inst_20719 = state_20740[15];
                                var state_20740__$1 = state_20740;
                                var statearr_20753_20791 = state_20740__$1;
                                statearr_20753_20791[2] = inst_20719;
                                statearr_20753_20791[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20741 === 3) {
                                  var inst_20679 = state_20740[9];
                                  var state_20740__$1 = state_20740;
                                  var statearr_20754_20792 = state_20740__$1;
                                  statearr_20754_20792[2] = inst_20679;
                                  statearr_20754_20792[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20741 === 12) {
                                    var inst_20700 = state_20740[16];
                                    var inst_20705 = state_20740[17];
                                    var inst_20719 = state_20740[15];
                                    var inst_20719__$1 = inst_20700.call(null, inst_20705);
                                    var state_20740__$1 = function() {
                                      var statearr_20755 = state_20740;
                                      statearr_20755[15] = inst_20719__$1;
                                      return statearr_20755;
                                    }();
                                    if (cljs.core.truth_(inst_20719__$1)) {
                                      var statearr_20756_20793 = state_20740__$1;
                                      statearr_20756_20793[1] = 17;
                                    } else {
                                      var statearr_20757_20794 = state_20740__$1;
                                      statearr_20757_20794[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20741 === 2) {
                                      var inst_20679 = state_20740[9];
                                      var inst_20682 = cljs.core.apply.call(null, cljs.core.hash_map, inst_20679);
                                      var state_20740__$1 = state_20740;
                                      var statearr_20758_20795 = state_20740__$1;
                                      statearr_20758_20795[2] = inst_20682;
                                      statearr_20758_20795[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20741 === 23) {
                                        var inst_20730 = state_20740[2];
                                        var state_20740__$1 = state_20740;
                                        var statearr_20759_20796 = state_20740__$1;
                                        statearr_20759_20796[2] = inst_20730;
                                        statearr_20759_20796[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20741 === 19) {
                                          var inst_20727 = state_20740[2];
                                          var state_20740__$1 = state_20740;
                                          if (cljs.core.truth_(inst_20727)) {
                                            var statearr_20760_20797 = state_20740__$1;
                                            statearr_20760_20797[1] = 20;
                                          } else {
                                            var statearr_20761_20798 = state_20740__$1;
                                            statearr_20761_20798[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20741 === 11) {
                                            var inst_20704 = state_20740[8];
                                            var inst_20710 = inst_20704 == null;
                                            var state_20740__$1 = state_20740;
                                            if (cljs.core.truth_(inst_20710)) {
                                              var statearr_20762_20799 = state_20740__$1;
                                              statearr_20762_20799[1] = 14;
                                            } else {
                                              var statearr_20763_20800 = state_20740__$1;
                                              statearr_20763_20800[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20741 === 9) {
                                              var inst_20697 = state_20740[13];
                                              var inst_20697__$1 = state_20740[2];
                                              var inst_20698 = cljs.core.get.call(null, inst_20697__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                              var inst_20699 = cljs.core.get.call(null, inst_20697__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                              var inst_20700 = cljs.core.get.call(null, inst_20697__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                              var state_20740__$1 = function() {
                                                var statearr_20764 = state_20740;
                                                statearr_20764[13] = inst_20697__$1;
                                                statearr_20764[16] = inst_20700;
                                                statearr_20764[18] = inst_20699;
                                                return statearr_20764;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_20740__$1, 10, inst_20698);
                                            } else {
                                              if (state_val_20741 === 5) {
                                                var inst_20689 = state_20740[7];
                                                var inst_20692 = cljs.core.seq_QMARK_.call(null, inst_20689);
                                                var state_20740__$1 = state_20740;
                                                if (inst_20692) {
                                                  var statearr_20765_20801 = state_20740__$1;
                                                  statearr_20765_20801[1] = 7;
                                                } else {
                                                  var statearr_20766_20802 = state_20740__$1;
                                                  statearr_20766_20802[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20741 === 14) {
                                                  var inst_20705 = state_20740[17];
                                                  var inst_20712 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_20705);
                                                  var state_20740__$1 = state_20740;
                                                  var statearr_20767_20803 = state_20740__$1;
                                                  statearr_20767_20803[2] = inst_20712;
                                                  statearr_20767_20803[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_20741 === 16) {
                                                    var inst_20715 = state_20740[2];
                                                    var inst_20716 = calc_state.call(null);
                                                    var inst_20689 = inst_20716;
                                                    var state_20740__$1 = function() {
                                                      var statearr_20768 = state_20740;
                                                      statearr_20768[7] = inst_20689;
                                                      statearr_20768[19] = inst_20715;
                                                      return statearr_20768;
                                                    }();
                                                    var statearr_20769_20804 = state_20740__$1;
                                                    statearr_20769_20804[2] = null;
                                                    statearr_20769_20804[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20741 === 10) {
                                                      var inst_20704 = state_20740[8];
                                                      var inst_20705 = state_20740[17];
                                                      var inst_20703 = state_20740[2];
                                                      var inst_20704__$1 = cljs.core.nth.call(null, inst_20703, 0, null);
                                                      var inst_20705__$1 = cljs.core.nth.call(null, inst_20703, 1, null);
                                                      var inst_20706 = inst_20704__$1 == null;
                                                      var inst_20707 = cljs.core._EQ_.call(null, inst_20705__$1, change);
                                                      var inst_20708 = inst_20706 || inst_20707;
                                                      var state_20740__$1 = function() {
                                                        var statearr_20770 = state_20740;
                                                        statearr_20770[8] = inst_20704__$1;
                                                        statearr_20770[17] = inst_20705__$1;
                                                        return statearr_20770;
                                                      }();
                                                      if (cljs.core.truth_(inst_20708)) {
                                                        var statearr_20771_20805 = state_20740__$1;
                                                        statearr_20771_20805[1] = 11;
                                                      } else {
                                                        var statearr_20772_20806 = state_20740__$1;
                                                        statearr_20772_20806[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_20741 === 18) {
                                                        var inst_20700 = state_20740[16];
                                                        var inst_20705 = state_20740[17];
                                                        var inst_20699 = state_20740[18];
                                                        var inst_20722 = cljs.core.empty_QMARK_.call(null, inst_20700);
                                                        var inst_20723 = inst_20699.call(null, inst_20705);
                                                        var inst_20724 = cljs.core.not.call(null, inst_20723);
                                                        var inst_20725 = inst_20722 && inst_20724;
                                                        var state_20740__$1 = state_20740;
                                                        var statearr_20773_20807 = state_20740__$1;
                                                        statearr_20773_20807[2] = inst_20725;
                                                        statearr_20773_20807[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_20741 === 8) {
                                                          var inst_20689 = state_20740[7];
                                                          var state_20740__$1 = state_20740;
                                                          var statearr_20774_20808 = state_20740__$1;
                                                          statearr_20774_20808[2] = inst_20689;
                                                          statearr_20774_20808[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__5693__auto__, c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_20778 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20778[0] = state_machine__5694__auto__;
              statearr_20778[1] = 1;
              return statearr_20778;
            };
            var state_machine__5694__auto____1 = function(state_20740) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_20740);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e20779) {
                    if (e20779 instanceof Object) {
                      var ex__5697__auto__ = e20779;
                      var statearr_20780_20809 = state_20740;
                      statearr_20780_20809[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20740);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20779;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20810 = state_20740;
                  state_20740 = G__20810;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_20740) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_20740);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__5710__auto__ = function() {
        var statearr_20781 = f__5709__auto__.call(null);
        statearr_20781[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___20782;
        return statearr_20781;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___20782, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj20812 = {};
  return obj20812;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3546__auto__ = p;
    if (and__3546__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4185__auto__ = p == null ? null : p;
    return function() {
      var or__3558__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3546__auto__ = p;
    if (and__3546__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4185__auto__ = p == null ? null : p;
    return function() {
      var or__3558__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3546__auto__ = p;
      if (and__3546__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4185__auto__ = p == null ? null : p;
      return function() {
        var or__3558__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3546__auto__ = p;
      if (and__3546__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4185__auto__ = p == null ? null : p;
      return function() {
        var or__3558__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3558__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3558__auto__, mults) {
            return function(p1__20813_SHARP_) {
              if (cljs.core.truth_(p1__20813_SHARP_.call(null, topic))) {
                return p1__20813_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__20813_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3558__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t20938 !== "undefined") {
      } else {
        cljs.core.async.t20938 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta20939) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta20939 = meta20939;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t20938.cljs$lang$type = true;
        cljs.core.async.t20938.cljs$lang$ctorStr = "cljs.core.async/t20938";
        cljs.core.async.t20938.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
            return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t20938");
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t20938.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t20938.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_20940) {
            var self__ = this;
            var _20940__$1 = this;
            return self__.meta20939;
          };
        }(mults, ensure_mult);
        cljs.core.async.t20938.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_20940, meta20939__$1) {
            var self__ = this;
            var _20940__$1 = this;
            return new cljs.core.async.t20938(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta20939__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t20938 = function(mults, ensure_mult) {
          return function __GT_t20938(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta20939) {
            return new cljs.core.async.t20938(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta20939);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t20938(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5708__auto___21062 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21062, mults, ensure_mult, p) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21062, mults, ensure_mult, p) {
            return function(state_21014) {
              var state_val_21015 = state_21014[1];
              if (state_val_21015 === 7) {
                var inst_21010 = state_21014[2];
                var state_21014__$1 = state_21014;
                var statearr_21016_21063 = state_21014__$1;
                statearr_21016_21063[2] = inst_21010;
                statearr_21016_21063[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21015 === 20) {
                  var state_21014__$1 = state_21014;
                  var statearr_21017_21064 = state_21014__$1;
                  statearr_21017_21064[2] = null;
                  statearr_21017_21064[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21015 === 1) {
                    var state_21014__$1 = state_21014;
                    var statearr_21018_21065 = state_21014__$1;
                    statearr_21018_21065[2] = null;
                    statearr_21018_21065[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21015 === 24) {
                      var inst_20993 = state_21014[7];
                      var inst_20943 = state_21014[8];
                      var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_21014, 23, Object, null, 22);
                      var inst_21000 = cljs.core.async.muxch_STAR_.call(null, inst_20993);
                      var state_21014__$1 = state_21014;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21014__$1, 25, inst_21000, inst_20943);
                    } else {
                      if (state_val_21015 === 4) {
                        var inst_20943 = state_21014[8];
                        var inst_20943__$1 = state_21014[2];
                        var inst_20944 = inst_20943__$1 == null;
                        var state_21014__$1 = function() {
                          var statearr_21019 = state_21014;
                          statearr_21019[8] = inst_20943__$1;
                          return statearr_21019;
                        }();
                        if (cljs.core.truth_(inst_20944)) {
                          var statearr_21020_21066 = state_21014__$1;
                          statearr_21020_21066[1] = 5;
                        } else {
                          var statearr_21021_21067 = state_21014__$1;
                          statearr_21021_21067[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21015 === 15) {
                          var inst_20985 = state_21014[2];
                          var state_21014__$1 = state_21014;
                          var statearr_21022_21068 = state_21014__$1;
                          statearr_21022_21068[2] = inst_20985;
                          statearr_21022_21068[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21015 === 21) {
                            var inst_21007 = state_21014[2];
                            var state_21014__$1 = function() {
                              var statearr_21023 = state_21014;
                              statearr_21023[9] = inst_21007;
                              return statearr_21023;
                            }();
                            var statearr_21024_21069 = state_21014__$1;
                            statearr_21024_21069[2] = null;
                            statearr_21024_21069[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21015 === 13) {
                              var inst_20967 = state_21014[10];
                              var inst_20969 = cljs.core.chunked_seq_QMARK_.call(null, inst_20967);
                              var state_21014__$1 = state_21014;
                              if (inst_20969) {
                                var statearr_21025_21070 = state_21014__$1;
                                statearr_21025_21070[1] = 16;
                              } else {
                                var statearr_21026_21071 = state_21014__$1;
                                statearr_21026_21071[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21015 === 22) {
                                var inst_21004 = state_21014[2];
                                var state_21014__$1 = state_21014;
                                var statearr_21027_21072 = state_21014__$1;
                                statearr_21027_21072[2] = inst_21004;
                                statearr_21027_21072[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21015 === 6) {
                                  var inst_20993 = state_21014[7];
                                  var inst_20943 = state_21014[8];
                                  var inst_20991 = state_21014[11];
                                  var inst_20991__$1 = topic_fn.call(null, inst_20943);
                                  var inst_20992 = cljs.core.deref.call(null, mults);
                                  var inst_20993__$1 = cljs.core.get.call(null, inst_20992, inst_20991__$1);
                                  var state_21014__$1 = function() {
                                    var statearr_21028 = state_21014;
                                    statearr_21028[7] = inst_20993__$1;
                                    statearr_21028[11] = inst_20991__$1;
                                    return statearr_21028;
                                  }();
                                  if (cljs.core.truth_(inst_20993__$1)) {
                                    var statearr_21029_21073 = state_21014__$1;
                                    statearr_21029_21073[1] = 19;
                                  } else {
                                    var statearr_21030_21074 = state_21014__$1;
                                    statearr_21030_21074[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21015 === 25) {
                                    var inst_21002 = state_21014[2];
                                    var state_21014__$1 = state_21014;
                                    var statearr_21031_21075 = state_21014__$1;
                                    statearr_21031_21075[2] = inst_21002;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21014__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21015 === 17) {
                                      var inst_20967 = state_21014[10];
                                      var inst_20976 = cljs.core.first.call(null, inst_20967);
                                      var inst_20977 = cljs.core.async.muxch_STAR_.call(null, inst_20976);
                                      var inst_20978 = cljs.core.async.close_BANG_.call(null, inst_20977);
                                      var inst_20979 = cljs.core.next.call(null, inst_20967);
                                      var inst_20953 = inst_20979;
                                      var inst_20954 = null;
                                      var inst_20955 = 0;
                                      var inst_20956 = 0;
                                      var state_21014__$1 = function() {
                                        var statearr_21032 = state_21014;
                                        statearr_21032[12] = inst_20956;
                                        statearr_21032[13] = inst_20954;
                                        statearr_21032[14] = inst_20955;
                                        statearr_21032[15] = inst_20978;
                                        statearr_21032[16] = inst_20953;
                                        return statearr_21032;
                                      }();
                                      var statearr_21033_21076 = state_21014__$1;
                                      statearr_21033_21076[2] = null;
                                      statearr_21033_21076[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21015 === 3) {
                                        var inst_21012 = state_21014[2];
                                        var state_21014__$1 = state_21014;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21014__$1, inst_21012);
                                      } else {
                                        if (state_val_21015 === 12) {
                                          var inst_20987 = state_21014[2];
                                          var state_21014__$1 = state_21014;
                                          var statearr_21034_21077 = state_21014__$1;
                                          statearr_21034_21077[2] = inst_20987;
                                          statearr_21034_21077[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21015 === 2) {
                                            var state_21014__$1 = state_21014;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21014__$1, 4, ch);
                                          } else {
                                            if (state_val_21015 === 23) {
                                              var inst_20991 = state_21014[11];
                                              var inst_20995 = state_21014[2];
                                              var inst_20996 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_20991);
                                              var state_21014__$1 = function() {
                                                var statearr_21035 = state_21014;
                                                statearr_21035[17] = inst_20995;
                                                return statearr_21035;
                                              }();
                                              var statearr_21036_21078 = state_21014__$1;
                                              statearr_21036_21078[2] = inst_20996;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21014__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21015 === 19) {
                                                var state_21014__$1 = state_21014;
                                                var statearr_21037_21079 = state_21014__$1;
                                                statearr_21037_21079[2] = null;
                                                statearr_21037_21079[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21015 === 11) {
                                                  var inst_20967 = state_21014[10];
                                                  var inst_20953 = state_21014[16];
                                                  var inst_20967__$1 = cljs.core.seq.call(null, inst_20953);
                                                  var state_21014__$1 = function() {
                                                    var statearr_21038 = state_21014;
                                                    statearr_21038[10] = inst_20967__$1;
                                                    return statearr_21038;
                                                  }();
                                                  if (inst_20967__$1) {
                                                    var statearr_21039_21080 = state_21014__$1;
                                                    statearr_21039_21080[1] = 13;
                                                  } else {
                                                    var statearr_21040_21081 = state_21014__$1;
                                                    statearr_21040_21081[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21015 === 9) {
                                                    var inst_20989 = state_21014[2];
                                                    var state_21014__$1 = state_21014;
                                                    var statearr_21041_21082 = state_21014__$1;
                                                    statearr_21041_21082[2] = inst_20989;
                                                    statearr_21041_21082[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21015 === 5) {
                                                      var inst_20950 = cljs.core.deref.call(null, mults);
                                                      var inst_20951 = cljs.core.vals.call(null, inst_20950);
                                                      var inst_20952 = cljs.core.seq.call(null, inst_20951);
                                                      var inst_20953 = inst_20952;
                                                      var inst_20954 = null;
                                                      var inst_20955 = 0;
                                                      var inst_20956 = 0;
                                                      var state_21014__$1 = function() {
                                                        var statearr_21042 = state_21014;
                                                        statearr_21042[12] = inst_20956;
                                                        statearr_21042[13] = inst_20954;
                                                        statearr_21042[14] = inst_20955;
                                                        statearr_21042[16] = inst_20953;
                                                        return statearr_21042;
                                                      }();
                                                      var statearr_21043_21083 = state_21014__$1;
                                                      statearr_21043_21083[2] = null;
                                                      statearr_21043_21083[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21015 === 14) {
                                                        var state_21014__$1 = state_21014;
                                                        var statearr_21047_21084 = state_21014__$1;
                                                        statearr_21047_21084[2] = null;
                                                        statearr_21047_21084[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21015 === 16) {
                                                          var inst_20967 = state_21014[10];
                                                          var inst_20971 = cljs.core.chunk_first.call(null, inst_20967);
                                                          var inst_20972 = cljs.core.chunk_rest.call(null, inst_20967);
                                                          var inst_20973 = cljs.core.count.call(null, inst_20971);
                                                          var inst_20953 = inst_20972;
                                                          var inst_20954 = inst_20971;
                                                          var inst_20955 = inst_20973;
                                                          var inst_20956 = 0;
                                                          var state_21014__$1 = function() {
                                                            var statearr_21048 = state_21014;
                                                            statearr_21048[12] = inst_20956;
                                                            statearr_21048[13] = inst_20954;
                                                            statearr_21048[14] = inst_20955;
                                                            statearr_21048[16] = inst_20953;
                                                            return statearr_21048;
                                                          }();
                                                          var statearr_21049_21085 = state_21014__$1;
                                                          statearr_21049_21085[2] = null;
                                                          statearr_21049_21085[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21015 === 10) {
                                                            var inst_20956 = state_21014[12];
                                                            var inst_20954 = state_21014[13];
                                                            var inst_20955 = state_21014[14];
                                                            var inst_20953 = state_21014[16];
                                                            var inst_20961 = cljs.core._nth.call(null, inst_20954, inst_20956);
                                                            var inst_20962 = cljs.core.async.muxch_STAR_.call(null, inst_20961);
                                                            var inst_20963 = cljs.core.async.close_BANG_.call(null, inst_20962);
                                                            var inst_20964 = inst_20956 + 1;
                                                            var tmp21044 = inst_20954;
                                                            var tmp21045 = inst_20955;
                                                            var tmp21046 = inst_20953;
                                                            var inst_20953__$1 = tmp21046;
                                                            var inst_20954__$1 = tmp21044;
                                                            var inst_20955__$1 = tmp21045;
                                                            var inst_20956__$1 = inst_20964;
                                                            var state_21014__$1 = function() {
                                                              var statearr_21050 = state_21014;
                                                              statearr_21050[12] = inst_20956__$1;
                                                              statearr_21050[13] = inst_20954__$1;
                                                              statearr_21050[14] = inst_20955__$1;
                                                              statearr_21050[18] = inst_20963;
                                                              statearr_21050[16] = inst_20953__$1;
                                                              return statearr_21050;
                                                            }();
                                                            var statearr_21051_21086 = state_21014__$1;
                                                            statearr_21051_21086[2] = null;
                                                            statearr_21051_21086[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21015 === 18) {
                                                              var inst_20982 = state_21014[2];
                                                              var state_21014__$1 = state_21014;
                                                              var statearr_21052_21087 = state_21014__$1;
                                                              statearr_21052_21087[2] = inst_20982;
                                                              statearr_21052_21087[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21015 === 8) {
                                                                var inst_20956 = state_21014[12];
                                                                var inst_20955 = state_21014[14];
                                                                var inst_20958 = inst_20956 < inst_20955;
                                                                var inst_20959 = inst_20958;
                                                                var state_21014__$1 = state_21014;
                                                                if (cljs.core.truth_(inst_20959)) {
                                                                  var statearr_21053_21088 = state_21014__$1;
                                                                  statearr_21053_21088[1] = 10;
                                                                } else {
                                                                  var statearr_21054_21089 = state_21014__$1;
                                                                  statearr_21054_21089[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21062, mults, ensure_mult, p);
          return function(switch__5693__auto__, c__5708__auto___21062, mults, ensure_mult, p) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21058 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21058[0] = state_machine__5694__auto__;
                statearr_21058[1] = 1;
                return statearr_21058;
              };
              var state_machine__5694__auto____1 = function(state_21014) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21014);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21059) {
                      if (e21059 instanceof Object) {
                        var ex__5697__auto__ = e21059;
                        var statearr_21060_21090 = state_21014;
                        statearr_21060_21090[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21014);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21059;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21091 = state_21014;
                    state_21014 = G__21091;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21014) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21014);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21062, mults, ensure_mult, p);
        }();
        var state__5710__auto__ = function() {
          var statearr_21061 = f__5709__auto__.call(null);
          statearr_21061[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21062;
          return statearr_21061;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21062, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5708__auto___21228 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_21198) {
              var state_val_21199 = state_21198[1];
              if (state_val_21199 === 7) {
                var state_21198__$1 = state_21198;
                var statearr_21200_21229 = state_21198__$1;
                statearr_21200_21229[2] = null;
                statearr_21200_21229[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21199 === 1) {
                  var state_21198__$1 = state_21198;
                  var statearr_21201_21230 = state_21198__$1;
                  statearr_21201_21230[2] = null;
                  statearr_21201_21230[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21199 === 4) {
                    var inst_21162 = state_21198[7];
                    var inst_21164 = inst_21162 < cnt;
                    var state_21198__$1 = state_21198;
                    if (cljs.core.truth_(inst_21164)) {
                      var statearr_21202_21231 = state_21198__$1;
                      statearr_21202_21231[1] = 6;
                    } else {
                      var statearr_21203_21232 = state_21198__$1;
                      statearr_21203_21232[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21199 === 15) {
                      var inst_21194 = state_21198[2];
                      var state_21198__$1 = state_21198;
                      var statearr_21204_21233 = state_21198__$1;
                      statearr_21204_21233[2] = inst_21194;
                      statearr_21204_21233[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21199 === 13) {
                        var inst_21187 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21198__$1 = state_21198;
                        var statearr_21205_21234 = state_21198__$1;
                        statearr_21205_21234[2] = inst_21187;
                        statearr_21205_21234[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21199 === 6) {
                          var state_21198__$1 = state_21198;
                          var statearr_21206_21235 = state_21198__$1;
                          statearr_21206_21235[2] = null;
                          statearr_21206_21235[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21199 === 3) {
                            var inst_21196 = state_21198[2];
                            var state_21198__$1 = state_21198;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21198__$1, inst_21196);
                          } else {
                            if (state_val_21199 === 12) {
                              var inst_21184 = state_21198[8];
                              var inst_21184__$1 = state_21198[2];
                              var inst_21185 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_21184__$1);
                              var state_21198__$1 = function() {
                                var statearr_21207 = state_21198;
                                statearr_21207[8] = inst_21184__$1;
                                return statearr_21207;
                              }();
                              if (cljs.core.truth_(inst_21185)) {
                                var statearr_21208_21236 = state_21198__$1;
                                statearr_21208_21236[1] = 13;
                              } else {
                                var statearr_21209_21237 = state_21198__$1;
                                statearr_21209_21237[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21199 === 2) {
                                var inst_21161 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_21162 = 0;
                                var state_21198__$1 = function() {
                                  var statearr_21210 = state_21198;
                                  statearr_21210[7] = inst_21162;
                                  statearr_21210[9] = inst_21161;
                                  return statearr_21210;
                                }();
                                var statearr_21211_21238 = state_21198__$1;
                                statearr_21211_21238[2] = null;
                                statearr_21211_21238[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21199 === 11) {
                                  var inst_21162 = state_21198[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_21198, 10, Object, null, 9);
                                  var inst_21171 = chs__$1.call(null, inst_21162);
                                  var inst_21172 = done.call(null, inst_21162);
                                  var inst_21173 = cljs.core.async.take_BANG_.call(null, inst_21171, inst_21172);
                                  var state_21198__$1 = state_21198;
                                  var statearr_21212_21239 = state_21198__$1;
                                  statearr_21212_21239[2] = inst_21173;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21198__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21199 === 9) {
                                    var inst_21162 = state_21198[7];
                                    var inst_21175 = state_21198[2];
                                    var inst_21176 = inst_21162 + 1;
                                    var inst_21162__$1 = inst_21176;
                                    var state_21198__$1 = function() {
                                      var statearr_21213 = state_21198;
                                      statearr_21213[10] = inst_21175;
                                      statearr_21213[7] = inst_21162__$1;
                                      return statearr_21213;
                                    }();
                                    var statearr_21214_21240 = state_21198__$1;
                                    statearr_21214_21240[2] = null;
                                    statearr_21214_21240[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21199 === 5) {
                                      var inst_21182 = state_21198[2];
                                      var state_21198__$1 = function() {
                                        var statearr_21215 = state_21198;
                                        statearr_21215[11] = inst_21182;
                                        return statearr_21215;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21198__$1, 12, dchan);
                                    } else {
                                      if (state_val_21199 === 14) {
                                        var inst_21184 = state_21198[8];
                                        var inst_21189 = cljs.core.apply.call(null, f, inst_21184);
                                        var state_21198__$1 = state_21198;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21198__$1, 16, out, inst_21189);
                                      } else {
                                        if (state_val_21199 === 16) {
                                          var inst_21191 = state_21198[2];
                                          var state_21198__$1 = function() {
                                            var statearr_21216 = state_21198;
                                            statearr_21216[12] = inst_21191;
                                            return statearr_21216;
                                          }();
                                          var statearr_21217_21241 = state_21198__$1;
                                          statearr_21217_21241[2] = null;
                                          statearr_21217_21241[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21199 === 10) {
                                            var inst_21166 = state_21198[2];
                                            var inst_21167 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_21198__$1 = function() {
                                              var statearr_21218 = state_21198;
                                              statearr_21218[13] = inst_21166;
                                              return statearr_21218;
                                            }();
                                            var statearr_21219_21242 = state_21198__$1;
                                            statearr_21219_21242[2] = inst_21167;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21198__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21199 === 8) {
                                              var inst_21180 = state_21198[2];
                                              var state_21198__$1 = state_21198;
                                              var statearr_21220_21243 = state_21198__$1;
                                              statearr_21220_21243[2] = inst_21180;
                                              statearr_21220_21243[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__5693__auto__, c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21224 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21224[0] = state_machine__5694__auto__;
                statearr_21224[1] = 1;
                return statearr_21224;
              };
              var state_machine__5694__auto____1 = function(state_21198) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21198);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21225) {
                      if (e21225 instanceof Object) {
                        var ex__5697__auto__ = e21225;
                        var statearr_21226_21244 = state_21198;
                        statearr_21226_21244[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21198);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21225;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21245 = state_21198;
                    state_21198 = G__21245;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21198) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21198);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__5710__auto__ = function() {
          var statearr_21227 = f__5709__auto__.call(null);
          statearr_21227[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21228;
          return statearr_21227;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21228, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___21353 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21353, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21353, out) {
            return function(state_21329) {
              var state_val_21330 = state_21329[1];
              if (state_val_21330 === 7) {
                var inst_21309 = state_21329[7];
                var inst_21308 = state_21329[8];
                var inst_21308__$1 = state_21329[2];
                var inst_21309__$1 = cljs.core.nth.call(null, inst_21308__$1, 0, null);
                var inst_21310 = cljs.core.nth.call(null, inst_21308__$1, 1, null);
                var inst_21311 = inst_21309__$1 == null;
                var state_21329__$1 = function() {
                  var statearr_21331 = state_21329;
                  statearr_21331[7] = inst_21309__$1;
                  statearr_21331[9] = inst_21310;
                  statearr_21331[8] = inst_21308__$1;
                  return statearr_21331;
                }();
                if (cljs.core.truth_(inst_21311)) {
                  var statearr_21332_21354 = state_21329__$1;
                  statearr_21332_21354[1] = 8;
                } else {
                  var statearr_21333_21355 = state_21329__$1;
                  statearr_21333_21355[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21330 === 1) {
                  var inst_21300 = cljs.core.vec.call(null, chs);
                  var inst_21301 = inst_21300;
                  var state_21329__$1 = function() {
                    var statearr_21334 = state_21329;
                    statearr_21334[10] = inst_21301;
                    return statearr_21334;
                  }();
                  var statearr_21335_21356 = state_21329__$1;
                  statearr_21335_21356[2] = null;
                  statearr_21335_21356[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21330 === 4) {
                    var inst_21301 = state_21329[10];
                    var state_21329__$1 = state_21329;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_21329__$1, 7, inst_21301);
                  } else {
                    if (state_val_21330 === 6) {
                      var inst_21325 = state_21329[2];
                      var state_21329__$1 = state_21329;
                      var statearr_21336_21357 = state_21329__$1;
                      statearr_21336_21357[2] = inst_21325;
                      statearr_21336_21357[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21330 === 3) {
                        var inst_21327 = state_21329[2];
                        var state_21329__$1 = state_21329;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21329__$1, inst_21327);
                      } else {
                        if (state_val_21330 === 2) {
                          var inst_21301 = state_21329[10];
                          var inst_21303 = cljs.core.count.call(null, inst_21301);
                          var inst_21304 = inst_21303 > 0;
                          var state_21329__$1 = state_21329;
                          if (cljs.core.truth_(inst_21304)) {
                            var statearr_21338_21358 = state_21329__$1;
                            statearr_21338_21358[1] = 4;
                          } else {
                            var statearr_21339_21359 = state_21329__$1;
                            statearr_21339_21359[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21330 === 11) {
                            var inst_21301 = state_21329[10];
                            var inst_21318 = state_21329[2];
                            var tmp21337 = inst_21301;
                            var inst_21301__$1 = tmp21337;
                            var state_21329__$1 = function() {
                              var statearr_21340 = state_21329;
                              statearr_21340[10] = inst_21301__$1;
                              statearr_21340[11] = inst_21318;
                              return statearr_21340;
                            }();
                            var statearr_21341_21360 = state_21329__$1;
                            statearr_21341_21360[2] = null;
                            statearr_21341_21360[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21330 === 9) {
                              var inst_21309 = state_21329[7];
                              var state_21329__$1 = state_21329;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21329__$1, 11, out, inst_21309);
                            } else {
                              if (state_val_21330 === 5) {
                                var inst_21323 = cljs.core.async.close_BANG_.call(null, out);
                                var state_21329__$1 = state_21329;
                                var statearr_21342_21361 = state_21329__$1;
                                statearr_21342_21361[2] = inst_21323;
                                statearr_21342_21361[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21330 === 10) {
                                  var inst_21321 = state_21329[2];
                                  var state_21329__$1 = state_21329;
                                  var statearr_21343_21362 = state_21329__$1;
                                  statearr_21343_21362[2] = inst_21321;
                                  statearr_21343_21362[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21330 === 8) {
                                    var inst_21301 = state_21329[10];
                                    var inst_21309 = state_21329[7];
                                    var inst_21310 = state_21329[9];
                                    var inst_21308 = state_21329[8];
                                    var inst_21313 = function() {
                                      var c = inst_21310;
                                      var v = inst_21309;
                                      var vec__21306 = inst_21308;
                                      var cs = inst_21301;
                                      return function(c, v, vec__21306, cs, inst_21301, inst_21309, inst_21310, inst_21308, state_val_21330, c__5708__auto___21353, out) {
                                        return function(p1__21246_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__21246_SHARP_);
                                        };
                                      }(c, v, vec__21306, cs, inst_21301, inst_21309, inst_21310, inst_21308, state_val_21330, c__5708__auto___21353, out);
                                    }();
                                    var inst_21314 = cljs.core.filterv.call(null, inst_21313, inst_21301);
                                    var inst_21301__$1 = inst_21314;
                                    var state_21329__$1 = function() {
                                      var statearr_21344 = state_21329;
                                      statearr_21344[10] = inst_21301__$1;
                                      return statearr_21344;
                                    }();
                                    var statearr_21345_21363 = state_21329__$1;
                                    statearr_21345_21363[2] = null;
                                    statearr_21345_21363[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21353, out);
          return function(switch__5693__auto__, c__5708__auto___21353, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21349 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21349[0] = state_machine__5694__auto__;
                statearr_21349[1] = 1;
                return statearr_21349;
              };
              var state_machine__5694__auto____1 = function(state_21329) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21329);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21350) {
                      if (e21350 instanceof Object) {
                        var ex__5697__auto__ = e21350;
                        var statearr_21351_21364 = state_21329;
                        statearr_21351_21364[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21329);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21350;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21365 = state_21329;
                    state_21329 = G__21365;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21329) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21329);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21353, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_21352 = f__5709__auto__.call(null);
          statearr_21352[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21353;
          return statearr_21352;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21353, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___21458 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21458, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21458, out) {
            return function(state_21435) {
              var state_val_21436 = state_21435[1];
              if (state_val_21436 === 7) {
                var inst_21417 = state_21435[7];
                var inst_21417__$1 = state_21435[2];
                var inst_21418 = inst_21417__$1 == null;
                var inst_21419 = cljs.core.not.call(null, inst_21418);
                var state_21435__$1 = function() {
                  var statearr_21437 = state_21435;
                  statearr_21437[7] = inst_21417__$1;
                  return statearr_21437;
                }();
                if (inst_21419) {
                  var statearr_21438_21459 = state_21435__$1;
                  statearr_21438_21459[1] = 8;
                } else {
                  var statearr_21439_21460 = state_21435__$1;
                  statearr_21439_21460[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21436 === 1) {
                  var inst_21412 = 0;
                  var state_21435__$1 = function() {
                    var statearr_21440 = state_21435;
                    statearr_21440[8] = inst_21412;
                    return statearr_21440;
                  }();
                  var statearr_21441_21461 = state_21435__$1;
                  statearr_21441_21461[2] = null;
                  statearr_21441_21461[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21436 === 4) {
                    var state_21435__$1 = state_21435;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21435__$1, 7, ch);
                  } else {
                    if (state_val_21436 === 6) {
                      var inst_21430 = state_21435[2];
                      var state_21435__$1 = state_21435;
                      var statearr_21442_21462 = state_21435__$1;
                      statearr_21442_21462[2] = inst_21430;
                      statearr_21442_21462[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21436 === 3) {
                        var inst_21432 = state_21435[2];
                        var inst_21433 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21435__$1 = function() {
                          var statearr_21443 = state_21435;
                          statearr_21443[9] = inst_21432;
                          return statearr_21443;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21435__$1, inst_21433);
                      } else {
                        if (state_val_21436 === 2) {
                          var inst_21412 = state_21435[8];
                          var inst_21414 = inst_21412 < n;
                          var state_21435__$1 = state_21435;
                          if (cljs.core.truth_(inst_21414)) {
                            var statearr_21444_21463 = state_21435__$1;
                            statearr_21444_21463[1] = 4;
                          } else {
                            var statearr_21445_21464 = state_21435__$1;
                            statearr_21445_21464[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21436 === 11) {
                            var inst_21412 = state_21435[8];
                            var inst_21422 = state_21435[2];
                            var inst_21423 = inst_21412 + 1;
                            var inst_21412__$1 = inst_21423;
                            var state_21435__$1 = function() {
                              var statearr_21446 = state_21435;
                              statearr_21446[10] = inst_21422;
                              statearr_21446[8] = inst_21412__$1;
                              return statearr_21446;
                            }();
                            var statearr_21447_21465 = state_21435__$1;
                            statearr_21447_21465[2] = null;
                            statearr_21447_21465[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21436 === 9) {
                              var state_21435__$1 = state_21435;
                              var statearr_21448_21466 = state_21435__$1;
                              statearr_21448_21466[2] = null;
                              statearr_21448_21466[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21436 === 5) {
                                var state_21435__$1 = state_21435;
                                var statearr_21449_21467 = state_21435__$1;
                                statearr_21449_21467[2] = null;
                                statearr_21449_21467[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21436 === 10) {
                                  var inst_21427 = state_21435[2];
                                  var state_21435__$1 = state_21435;
                                  var statearr_21450_21468 = state_21435__$1;
                                  statearr_21450_21468[2] = inst_21427;
                                  statearr_21450_21468[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21436 === 8) {
                                    var inst_21417 = state_21435[7];
                                    var state_21435__$1 = state_21435;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21435__$1, 11, out, inst_21417);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21458, out);
          return function(switch__5693__auto__, c__5708__auto___21458, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21454 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_21454[0] = state_machine__5694__auto__;
                statearr_21454[1] = 1;
                return statearr_21454;
              };
              var state_machine__5694__auto____1 = function(state_21435) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21435);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21455) {
                      if (e21455 instanceof Object) {
                        var ex__5697__auto__ = e21455;
                        var statearr_21456_21469 = state_21435;
                        statearr_21456_21469[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21435);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21455;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21470 = state_21435;
                    state_21435 = G__21470;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21435) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21435);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21458, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_21457 = f__5709__auto__.call(null);
          statearr_21457[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21458;
          return statearr_21457;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21458, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___21567 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21567, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21567, out) {
            return function(state_21542) {
              var state_val_21543 = state_21542[1];
              if (state_val_21543 === 7) {
                var inst_21537 = state_21542[2];
                var state_21542__$1 = state_21542;
                var statearr_21544_21568 = state_21542__$1;
                statearr_21544_21568[2] = inst_21537;
                statearr_21544_21568[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21543 === 1) {
                  var inst_21519 = null;
                  var state_21542__$1 = function() {
                    var statearr_21545 = state_21542;
                    statearr_21545[7] = inst_21519;
                    return statearr_21545;
                  }();
                  var statearr_21546_21569 = state_21542__$1;
                  statearr_21546_21569[2] = null;
                  statearr_21546_21569[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21543 === 4) {
                    var inst_21522 = state_21542[8];
                    var inst_21522__$1 = state_21542[2];
                    var inst_21523 = inst_21522__$1 == null;
                    var inst_21524 = cljs.core.not.call(null, inst_21523);
                    var state_21542__$1 = function() {
                      var statearr_21547 = state_21542;
                      statearr_21547[8] = inst_21522__$1;
                      return statearr_21547;
                    }();
                    if (inst_21524) {
                      var statearr_21548_21570 = state_21542__$1;
                      statearr_21548_21570[1] = 5;
                    } else {
                      var statearr_21549_21571 = state_21542__$1;
                      statearr_21549_21571[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21543 === 6) {
                      var state_21542__$1 = state_21542;
                      var statearr_21550_21572 = state_21542__$1;
                      statearr_21550_21572[2] = null;
                      statearr_21550_21572[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21543 === 3) {
                        var inst_21539 = state_21542[2];
                        var inst_21540 = cljs.core.async.close_BANG_.call(null, out);
                        var state_21542__$1 = function() {
                          var statearr_21551 = state_21542;
                          statearr_21551[9] = inst_21539;
                          return statearr_21551;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21542__$1, inst_21540);
                      } else {
                        if (state_val_21543 === 2) {
                          var state_21542__$1 = state_21542;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21542__$1, 4, ch);
                        } else {
                          if (state_val_21543 === 11) {
                            var inst_21522 = state_21542[8];
                            var inst_21531 = state_21542[2];
                            var inst_21519 = inst_21522;
                            var state_21542__$1 = function() {
                              var statearr_21552 = state_21542;
                              statearr_21552[10] = inst_21531;
                              statearr_21552[7] = inst_21519;
                              return statearr_21552;
                            }();
                            var statearr_21553_21573 = state_21542__$1;
                            statearr_21553_21573[2] = null;
                            statearr_21553_21573[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21543 === 9) {
                              var inst_21522 = state_21542[8];
                              var state_21542__$1 = state_21542;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21542__$1, 11, out, inst_21522);
                            } else {
                              if (state_val_21543 === 5) {
                                var inst_21519 = state_21542[7];
                                var inst_21522 = state_21542[8];
                                var inst_21526 = cljs.core._EQ_.call(null, inst_21522, inst_21519);
                                var state_21542__$1 = state_21542;
                                if (inst_21526) {
                                  var statearr_21555_21574 = state_21542__$1;
                                  statearr_21555_21574[1] = 8;
                                } else {
                                  var statearr_21556_21575 = state_21542__$1;
                                  statearr_21556_21575[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21543 === 10) {
                                  var inst_21534 = state_21542[2];
                                  var state_21542__$1 = state_21542;
                                  var statearr_21557_21576 = state_21542__$1;
                                  statearr_21557_21576[2] = inst_21534;
                                  statearr_21557_21576[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21543 === 8) {
                                    var inst_21519 = state_21542[7];
                                    var tmp21554 = inst_21519;
                                    var inst_21519__$1 = tmp21554;
                                    var state_21542__$1 = function() {
                                      var statearr_21558 = state_21542;
                                      statearr_21558[7] = inst_21519__$1;
                                      return statearr_21558;
                                    }();
                                    var statearr_21559_21577 = state_21542__$1;
                                    statearr_21559_21577[2] = null;
                                    statearr_21559_21577[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21567, out);
          return function(switch__5693__auto__, c__5708__auto___21567, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21563 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_21563[0] = state_machine__5694__auto__;
                statearr_21563[1] = 1;
                return statearr_21563;
              };
              var state_machine__5694__auto____1 = function(state_21542) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21542);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21564) {
                      if (e21564 instanceof Object) {
                        var ex__5697__auto__ = e21564;
                        var statearr_21565_21578 = state_21542;
                        statearr_21565_21578[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21542);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21564;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21579 = state_21542;
                    state_21542 = G__21579;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21542) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21542);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21567, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_21566 = f__5709__auto__.call(null);
          statearr_21566[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21567;
          return statearr_21566;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21567, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___21714 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21714, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21714, out) {
            return function(state_21684) {
              var state_val_21685 = state_21684[1];
              if (state_val_21685 === 7) {
                var inst_21680 = state_21684[2];
                var state_21684__$1 = state_21684;
                var statearr_21686_21715 = state_21684__$1;
                statearr_21686_21715[2] = inst_21680;
                statearr_21686_21715[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21685 === 1) {
                  var inst_21647 = new Array(n);
                  var inst_21648 = inst_21647;
                  var inst_21649 = 0;
                  var state_21684__$1 = function() {
                    var statearr_21687 = state_21684;
                    statearr_21687[7] = inst_21649;
                    statearr_21687[8] = inst_21648;
                    return statearr_21687;
                  }();
                  var statearr_21688_21716 = state_21684__$1;
                  statearr_21688_21716[2] = null;
                  statearr_21688_21716[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21685 === 4) {
                    var inst_21652 = state_21684[9];
                    var inst_21652__$1 = state_21684[2];
                    var inst_21653 = inst_21652__$1 == null;
                    var inst_21654 = cljs.core.not.call(null, inst_21653);
                    var state_21684__$1 = function() {
                      var statearr_21689 = state_21684;
                      statearr_21689[9] = inst_21652__$1;
                      return statearr_21689;
                    }();
                    if (inst_21654) {
                      var statearr_21690_21717 = state_21684__$1;
                      statearr_21690_21717[1] = 5;
                    } else {
                      var statearr_21691_21718 = state_21684__$1;
                      statearr_21691_21718[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21685 === 15) {
                      var inst_21674 = state_21684[2];
                      var state_21684__$1 = state_21684;
                      var statearr_21692_21719 = state_21684__$1;
                      statearr_21692_21719[2] = inst_21674;
                      statearr_21692_21719[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21685 === 13) {
                        var state_21684__$1 = state_21684;
                        var statearr_21693_21720 = state_21684__$1;
                        statearr_21693_21720[2] = null;
                        statearr_21693_21720[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21685 === 6) {
                          var inst_21649 = state_21684[7];
                          var inst_21670 = inst_21649 > 0;
                          var state_21684__$1 = state_21684;
                          if (cljs.core.truth_(inst_21670)) {
                            var statearr_21694_21721 = state_21684__$1;
                            statearr_21694_21721[1] = 12;
                          } else {
                            var statearr_21695_21722 = state_21684__$1;
                            statearr_21695_21722[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21685 === 3) {
                            var inst_21682 = state_21684[2];
                            var state_21684__$1 = state_21684;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21684__$1, inst_21682);
                          } else {
                            if (state_val_21685 === 12) {
                              var inst_21648 = state_21684[8];
                              var inst_21672 = cljs.core.vec.call(null, inst_21648);
                              var state_21684__$1 = state_21684;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21684__$1, 15, out, inst_21672);
                            } else {
                              if (state_val_21685 === 2) {
                                var state_21684__$1 = state_21684;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21684__$1, 4, ch);
                              } else {
                                if (state_val_21685 === 11) {
                                  var inst_21664 = state_21684[2];
                                  var inst_21665 = new Array(n);
                                  var inst_21648 = inst_21665;
                                  var inst_21649 = 0;
                                  var state_21684__$1 = function() {
                                    var statearr_21696 = state_21684;
                                    statearr_21696[10] = inst_21664;
                                    statearr_21696[7] = inst_21649;
                                    statearr_21696[8] = inst_21648;
                                    return statearr_21696;
                                  }();
                                  var statearr_21697_21723 = state_21684__$1;
                                  statearr_21697_21723[2] = null;
                                  statearr_21697_21723[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21685 === 9) {
                                    var inst_21648 = state_21684[8];
                                    var inst_21662 = cljs.core.vec.call(null, inst_21648);
                                    var state_21684__$1 = state_21684;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21684__$1, 11, out, inst_21662);
                                  } else {
                                    if (state_val_21685 === 5) {
                                      var inst_21657 = state_21684[11];
                                      var inst_21649 = state_21684[7];
                                      var inst_21648 = state_21684[8];
                                      var inst_21652 = state_21684[9];
                                      var inst_21656 = inst_21648[inst_21649] = inst_21652;
                                      var inst_21657__$1 = inst_21649 + 1;
                                      var inst_21658 = inst_21657__$1 < n;
                                      var state_21684__$1 = function() {
                                        var statearr_21698 = state_21684;
                                        statearr_21698[11] = inst_21657__$1;
                                        statearr_21698[12] = inst_21656;
                                        return statearr_21698;
                                      }();
                                      if (cljs.core.truth_(inst_21658)) {
                                        var statearr_21699_21724 = state_21684__$1;
                                        statearr_21699_21724[1] = 8;
                                      } else {
                                        var statearr_21700_21725 = state_21684__$1;
                                        statearr_21700_21725[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21685 === 14) {
                                        var inst_21677 = state_21684[2];
                                        var inst_21678 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_21684__$1 = function() {
                                          var statearr_21702 = state_21684;
                                          statearr_21702[13] = inst_21677;
                                          return statearr_21702;
                                        }();
                                        var statearr_21703_21726 = state_21684__$1;
                                        statearr_21703_21726[2] = inst_21678;
                                        statearr_21703_21726[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21685 === 10) {
                                          var inst_21668 = state_21684[2];
                                          var state_21684__$1 = state_21684;
                                          var statearr_21704_21727 = state_21684__$1;
                                          statearr_21704_21727[2] = inst_21668;
                                          statearr_21704_21727[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21685 === 8) {
                                            var inst_21657 = state_21684[11];
                                            var inst_21648 = state_21684[8];
                                            var tmp21701 = inst_21648;
                                            var inst_21648__$1 = tmp21701;
                                            var inst_21649 = inst_21657;
                                            var state_21684__$1 = function() {
                                              var statearr_21705 = state_21684;
                                              statearr_21705[7] = inst_21649;
                                              statearr_21705[8] = inst_21648__$1;
                                              return statearr_21705;
                                            }();
                                            var statearr_21706_21728 = state_21684__$1;
                                            statearr_21706_21728[2] = null;
                                            statearr_21706_21728[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21714, out);
          return function(switch__5693__auto__, c__5708__auto___21714, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21710 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21710[0] = state_machine__5694__auto__;
                statearr_21710[1] = 1;
                return statearr_21710;
              };
              var state_machine__5694__auto____1 = function(state_21684) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21684);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21711) {
                      if (e21711 instanceof Object) {
                        var ex__5697__auto__ = e21711;
                        var statearr_21712_21729 = state_21684;
                        statearr_21712_21729[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21684);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21711;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21730 = state_21684;
                    state_21684 = G__21730;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21684) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21684);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21714, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_21713 = f__5709__auto__.call(null);
          statearr_21713[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21714;
          return statearr_21713;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21714, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___21873 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___21873, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___21873, out) {
            return function(state_21843) {
              var state_val_21844 = state_21843[1];
              if (state_val_21844 === 7) {
                var inst_21839 = state_21843[2];
                var state_21843__$1 = state_21843;
                var statearr_21845_21874 = state_21843__$1;
                statearr_21845_21874[2] = inst_21839;
                statearr_21845_21874[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21844 === 1) {
                  var inst_21802 = [];
                  var inst_21803 = inst_21802;
                  var inst_21804 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_21843__$1 = function() {
                    var statearr_21846 = state_21843;
                    statearr_21846[7] = inst_21803;
                    statearr_21846[8] = inst_21804;
                    return statearr_21846;
                  }();
                  var statearr_21847_21875 = state_21843__$1;
                  statearr_21847_21875[2] = null;
                  statearr_21847_21875[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21844 === 4) {
                    var inst_21807 = state_21843[9];
                    var inst_21807__$1 = state_21843[2];
                    var inst_21808 = inst_21807__$1 == null;
                    var inst_21809 = cljs.core.not.call(null, inst_21808);
                    var state_21843__$1 = function() {
                      var statearr_21848 = state_21843;
                      statearr_21848[9] = inst_21807__$1;
                      return statearr_21848;
                    }();
                    if (inst_21809) {
                      var statearr_21849_21876 = state_21843__$1;
                      statearr_21849_21876[1] = 5;
                    } else {
                      var statearr_21850_21877 = state_21843__$1;
                      statearr_21850_21877[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21844 === 15) {
                      var inst_21833 = state_21843[2];
                      var state_21843__$1 = state_21843;
                      var statearr_21851_21878 = state_21843__$1;
                      statearr_21851_21878[2] = inst_21833;
                      statearr_21851_21878[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21844 === 13) {
                        var state_21843__$1 = state_21843;
                        var statearr_21852_21879 = state_21843__$1;
                        statearr_21852_21879[2] = null;
                        statearr_21852_21879[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21844 === 6) {
                          var inst_21803 = state_21843[7];
                          var inst_21828 = inst_21803.length;
                          var inst_21829 = inst_21828 > 0;
                          var state_21843__$1 = state_21843;
                          if (cljs.core.truth_(inst_21829)) {
                            var statearr_21853_21880 = state_21843__$1;
                            statearr_21853_21880[1] = 12;
                          } else {
                            var statearr_21854_21881 = state_21843__$1;
                            statearr_21854_21881[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21844 === 3) {
                            var inst_21841 = state_21843[2];
                            var state_21843__$1 = state_21843;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21843__$1, inst_21841);
                          } else {
                            if (state_val_21844 === 12) {
                              var inst_21803 = state_21843[7];
                              var inst_21831 = cljs.core.vec.call(null, inst_21803);
                              var state_21843__$1 = state_21843;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21843__$1, 15, out, inst_21831);
                            } else {
                              if (state_val_21844 === 2) {
                                var state_21843__$1 = state_21843;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21843__$1, 4, ch);
                              } else {
                                if (state_val_21844 === 11) {
                                  var inst_21807 = state_21843[9];
                                  var inst_21811 = state_21843[10];
                                  var inst_21821 = state_21843[2];
                                  var inst_21822 = [];
                                  var inst_21823 = inst_21822.push(inst_21807);
                                  var inst_21803 = inst_21822;
                                  var inst_21804 = inst_21811;
                                  var state_21843__$1 = function() {
                                    var statearr_21855 = state_21843;
                                    statearr_21855[11] = inst_21821;
                                    statearr_21855[7] = inst_21803;
                                    statearr_21855[12] = inst_21823;
                                    statearr_21855[8] = inst_21804;
                                    return statearr_21855;
                                  }();
                                  var statearr_21856_21882 = state_21843__$1;
                                  statearr_21856_21882[2] = null;
                                  statearr_21856_21882[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21844 === 9) {
                                    var inst_21803 = state_21843[7];
                                    var inst_21819 = cljs.core.vec.call(null, inst_21803);
                                    var state_21843__$1 = state_21843;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21843__$1, 11, out, inst_21819);
                                  } else {
                                    if (state_val_21844 === 5) {
                                      var inst_21807 = state_21843[9];
                                      var inst_21811 = state_21843[10];
                                      var inst_21804 = state_21843[8];
                                      var inst_21811__$1 = f.call(null, inst_21807);
                                      var inst_21812 = cljs.core._EQ_.call(null, inst_21811__$1, inst_21804);
                                      var inst_21813 = cljs.core.keyword_identical_QMARK_.call(null, inst_21804, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_21814 = inst_21812 || inst_21813;
                                      var state_21843__$1 = function() {
                                        var statearr_21857 = state_21843;
                                        statearr_21857[10] = inst_21811__$1;
                                        return statearr_21857;
                                      }();
                                      if (cljs.core.truth_(inst_21814)) {
                                        var statearr_21858_21883 = state_21843__$1;
                                        statearr_21858_21883[1] = 8;
                                      } else {
                                        var statearr_21859_21884 = state_21843__$1;
                                        statearr_21859_21884[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21844 === 14) {
                                        var inst_21836 = state_21843[2];
                                        var inst_21837 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_21843__$1 = function() {
                                          var statearr_21861 = state_21843;
                                          statearr_21861[13] = inst_21836;
                                          return statearr_21861;
                                        }();
                                        var statearr_21862_21885 = state_21843__$1;
                                        statearr_21862_21885[2] = inst_21837;
                                        statearr_21862_21885[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21844 === 10) {
                                          var inst_21826 = state_21843[2];
                                          var state_21843__$1 = state_21843;
                                          var statearr_21863_21886 = state_21843__$1;
                                          statearr_21863_21886[2] = inst_21826;
                                          statearr_21863_21886[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21844 === 8) {
                                            var inst_21807 = state_21843[9];
                                            var inst_21811 = state_21843[10];
                                            var inst_21803 = state_21843[7];
                                            var inst_21816 = inst_21803.push(inst_21807);
                                            var tmp21860 = inst_21803;
                                            var inst_21803__$1 = tmp21860;
                                            var inst_21804 = inst_21811;
                                            var state_21843__$1 = function() {
                                              var statearr_21864 = state_21843;
                                              statearr_21864[14] = inst_21816;
                                              statearr_21864[7] = inst_21803__$1;
                                              statearr_21864[8] = inst_21804;
                                              return statearr_21864;
                                            }();
                                            var statearr_21865_21887 = state_21843__$1;
                                            statearr_21865_21887[2] = null;
                                            statearr_21865_21887[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___21873, out);
          return function(switch__5693__auto__, c__5708__auto___21873, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_21869 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21869[0] = state_machine__5694__auto__;
                statearr_21869[1] = 1;
                return statearr_21869;
              };
              var state_machine__5694__auto____1 = function(state_21843) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_21843);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e21870) {
                      if (e21870 instanceof Object) {
                        var ex__5697__auto__ = e21870;
                        var statearr_21871_21888 = state_21843;
                        statearr_21871_21888[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21843);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21870;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21889 = state_21843;
                    state_21843 = G__21889;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_21843) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_21843);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___21873, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_21872 = f__5709__auto__.call(null);
          statearr_21872[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___21873;
          return statearr_21872;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___21873, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("clustermap.api");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIo");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.api.AJAX = function() {
  var AJAX__delegate = function(url, p__8557) {
    var map__8561 = p__8557;
    var map__8561__$1 = cljs.core.seq_QMARK_.call(null, map__8561) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8561) : map__8561;
    var opts = map__8561__$1;
    var content = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "content", "content", 15833224));
    var method = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
    var raw = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
    var comm = cljs.core.async.chan.call(null, 1);
    goog.net.XhrIo.send(url, function(comm, map__8561, map__8561__$1, opts, content, method, raw) {
      return function(event) {
        cljs.core.async.put_BANG_.call(null, comm, function(comm, map__8561, map__8561__$1, opts, content, method, raw) {
          return function(d) {
            if (cljs.core.truth_(raw)) {
              return d;
            } else {
              return cljs.core.js__GT_clj.call(null, d, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
            }
          };
        }(comm, map__8561, map__8561__$1, opts, content, method, raw).call(null, JSON.parse(event.target.getResponseText())["data"]));
        return cljs.core.async.close_BANG_.call(null, comm);
      };
    }(comm, map__8561, map__8561__$1, opts, content, method, raw), function() {
      var or__3558__auto__ = function() {
        var G__8563 = method;
        var G__8563__$1 = G__8563 == null ? null : cljs.core.name.call(null, G__8563);
        var G__8563__$2 = G__8563__$1 == null ? null : clojure.string.upper_case.call(null, G__8563__$1);
        return G__8563__$2;
      }();
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "GET";
      }
    }(), cljs.core.truth_(content) ? JSON.stringify(cljs.core.clj__GT_js.call(null, content)) : null, cljs.core.truth_(content) ? cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["Content-Type", "application/json"], null)) : null);
    return comm;
  };
  var AJAX = function(url, var_args) {
    var p__8557 = null;
    if (arguments.length > 1) {
      p__8557 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return AJAX__delegate.call(this, url, p__8557);
  };
  AJAX.cljs$lang$maxFixedArity = 1;
  AJAX.cljs$lang$applyTo = function(arglist__8564) {
    var url = cljs.core.first(arglist__8564);
    var p__8557 = cljs.core.rest(arglist__8564);
    return AJAX__delegate(url, p__8557);
  };
  AJAX.cljs$core$IFn$_invoke$arity$variadic = AJAX__delegate;
  return AJAX;
}();
clustermap.api.GET = function() {
  var GET__delegate = function(url, p__8565) {
    var map__8567 = p__8565;
    var map__8567__$1 = cljs.core.seq_QMARK_.call(null, map__8567) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8567) : map__8567;
    var opts = map__8567__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "method", "method", 55703592), "GET"], null))));
  };
  var GET = function(url, var_args) {
    var p__8565 = null;
    if (arguments.length > 1) {
      p__8565 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return GET__delegate.call(this, url, p__8565);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__8568) {
    var url = cljs.core.first(arglist__8568);
    var p__8565 = cljs.core.rest(arglist__8568);
    return GET__delegate(url, p__8565);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
clustermap.api.POST = function() {
  var POST__delegate = function(url, content, p__8569) {
    var map__8571 = p__8569;
    var map__8571__$1 = cljs.core.seq_QMARK_.call(null, map__8571) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8571) : map__8571;
    var opts = map__8571__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "content", "content", 15833224), content], null))));
  };
  var POST = function(url, content, var_args) {
    var p__8569 = null;
    if (arguments.length > 2) {
      p__8569 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return POST__delegate.call(this, url, content, p__8569);
  };
  POST.cljs$lang$maxFixedArity = 2;
  POST.cljs$lang$applyTo = function(arglist__8572) {
    var url = cljs.core.first(arglist__8572);
    arglist__8572 = cljs.core.next(arglist__8572);
    var content = cljs.core.first(arglist__8572);
    var p__8569 = cljs.core.rest(arglist__8572);
    return POST__delegate(url, content, p__8569);
  };
  POST.cljs$core$IFn$_invoke$arity$variadic = POST__delegate;
  return POST;
}();
clustermap.api.PUT = function() {
  var PUT__delegate = function(url, content, p__8573) {
    var map__8575 = p__8573;
    var map__8575__$1 = cljs.core.seq_QMARK_.call(null, map__8575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8575) : map__8575;
    var opts = map__8575__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "PUT", new cljs.core.Keyword(null, "content", "content", 15833224), content], null))));
  };
  var PUT = function(url, content, var_args) {
    var p__8573 = null;
    if (arguments.length > 2) {
      p__8573 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return PUT__delegate.call(this, url, content, p__8573);
  };
  PUT.cljs$lang$maxFixedArity = 2;
  PUT.cljs$lang$applyTo = function(arglist__8576) {
    var url = cljs.core.first(arglist__8576);
    arglist__8576 = cljs.core.next(arglist__8576);
    var content = cljs.core.first(arglist__8576);
    var p__8573 = cljs.core.rest(arglist__8576);
    return PUT__delegate(url, content, p__8573);
  };
  PUT.cljs$core$IFn$_invoke$arity$variadic = PUT__delegate;
  return PUT;
}();
clustermap.api.ordered_api_results = function ordered_api_results(ocomm, handler) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_8711) {
            var state_val_8712 = state_8711[1];
            if (state_val_8712 === 7) {
              var inst_8668 = state_8711[7];
              var inst_8667 = state_8711[2];
              var inst_8668__$1 = cljs.core.nth.call(null, inst_8667, 0, null);
              var inst_8669 = cljs.core.nth.call(null, inst_8667, 1, null);
              var inst_8670 = cljs.core.sequential_QMARK_.call(null, inst_8668__$1);
              var state_8711__$1 = function() {
                var statearr_8713 = state_8711;
                statearr_8713[8] = inst_8669;
                statearr_8713[7] = inst_8668__$1;
                return statearr_8713;
              }();
              if (inst_8670) {
                var statearr_8714_8749 = state_8711__$1;
                statearr_8714_8749[1] = 8;
              } else {
                var statearr_8715_8750 = state_8711__$1;
                statearr_8715_8750[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_8712 === 20) {
                var inst_8668 = state_8711[7];
                var state_8711__$1 = state_8711;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 23, inst_8668);
              } else {
                if (state_val_8712 === 1) {
                  var state_8711__$1 = state_8711;
                  var statearr_8716_8751 = state_8711__$1;
                  statearr_8716_8751[2] = null;
                  statearr_8716_8751[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_8712 === 4) {
                    var state_8711__$1 = state_8711;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 7, ocomm);
                  } else {
                    if (state_val_8712 === 15) {
                      var inst_8691 = state_8711[2];
                      var state_8711__$1 = state_8711;
                      var statearr_8717_8752 = state_8711__$1;
                      statearr_8717_8752[2] = inst_8691;
                      statearr_8717_8752[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_8712 === 21) {
                        var state_8711__$1 = state_8711;
                        var statearr_8718_8753 = state_8711__$1;
                        statearr_8718_8753[2] = null;
                        statearr_8718_8753[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_8712 === 13) {
                          var inst_8674 = state_8711[9];
                          var state_8711__$1 = state_8711;
                          var statearr_8719_8754 = state_8711__$1;
                          statearr_8719_8754[2] = inst_8674;
                          statearr_8719_8754[1] = 15;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_8712 === 22) {
                            var inst_8700 = state_8711[2];
                            var state_8711__$1 = state_8711;
                            var statearr_8720_8755 = state_8711__$1;
                            statearr_8720_8755[2] = inst_8700;
                            statearr_8720_8755[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_8712 === 6) {
                              var inst_8707 = state_8711[2];
                              var state_8711__$1 = state_8711;
                              var statearr_8721_8756 = state_8711__$1;
                              statearr_8721_8756[2] = inst_8707;
                              statearr_8721_8756[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_8712 === 17) {
                                var state_8711__$1 = state_8711;
                                var statearr_8722_8757 = state_8711__$1;
                                statearr_8722_8757[2] = null;
                                statearr_8722_8757[1] = 18;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_8712 === 3) {
                                  var inst_8709 = state_8711[2];
                                  var state_8711__$1 = state_8711;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8711__$1, inst_8709);
                                } else {
                                  if (state_val_8712 === 12) {
                                    var inst_8693 = state_8711[2];
                                    var state_8711__$1 = state_8711;
                                    var statearr_8723_8758 = state_8711__$1;
                                    statearr_8723_8758[2] = inst_8693;
                                    statearr_8723_8758[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_8712 === 2) {
                                      var state_8711__$1 = state_8711;
                                      var statearr_8724_8759 = state_8711__$1;
                                      statearr_8724_8759[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_8712 === 23) {
                                        var inst_8697 = state_8711[2];
                                        var state_8711__$1 = state_8711;
                                        var statearr_8726_8760 = state_8711__$1;
                                        statearr_8726_8760[2] = inst_8697;
                                        statearr_8726_8760[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_8712 === 19) {
                                          var inst_8684 = state_8711[2];
                                          var state_8711__$1 = state_8711;
                                          var statearr_8727_8761 = state_8711__$1;
                                          statearr_8727_8761[2] = inst_8684;
                                          statearr_8727_8761[1] = 18;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_8712 === 11) {
                                            var inst_8673 = state_8711[10];
                                            var inst_8676 = cljs.core.empty_QMARK_.call(null, inst_8673);
                                            var state_8711__$1 = state_8711;
                                            if (inst_8676) {
                                              var statearr_8728_8762 = state_8711__$1;
                                              statearr_8728_8762[1] = 13;
                                            } else {
                                              var statearr_8729_8763 = state_8711__$1;
                                              statearr_8729_8763[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_8712 === 9) {
                                              var inst_8668 = state_8711[7];
                                              var state_8711__$1 = state_8711;
                                              if (cljs.core.truth_(inst_8668)) {
                                                var statearr_8730_8764 = state_8711__$1;
                                                statearr_8730_8764[1] = 20;
                                              } else {
                                                var statearr_8731_8765 = state_8711__$1;
                                                statearr_8731_8765[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_8712 === 5) {
                                                var state_8711__$1 = state_8711;
                                                var statearr_8732_8766 = state_8711__$1;
                                                statearr_8732_8766[2] = null;
                                                statearr_8732_8766[1] = 6;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_8712 === 14) {
                                                  var inst_8673 = state_8711[10];
                                                  var inst_8679 = cljs.core.rest.call(null, inst_8673);
                                                  var inst_8680 = cljs.core.first.call(null, inst_8673);
                                                  var state_8711__$1 = function() {
                                                    var statearr_8733 = state_8711;
                                                    statearr_8733[11] = inst_8679;
                                                    return statearr_8733;
                                                  }();
                                                  if (cljs.core.truth_(inst_8680)) {
                                                    var statearr_8734_8767 = state_8711__$1;
                                                    statearr_8734_8767[1] = 16;
                                                  } else {
                                                    var statearr_8735_8768 = state_8711__$1;
                                                    statearr_8735_8768[1] = 17;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_8712 === 16) {
                                                    var inst_8673 = state_8711[10];
                                                    var inst_8682 = cljs.core.first.call(null, inst_8673);
                                                    var state_8711__$1 = state_8711;
                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 19, inst_8682);
                                                  } else {
                                                    if (state_val_8712 === 10) {
                                                      var inst_8669 = state_8711[8];
                                                      var inst_8702 = state_8711[2];
                                                      var inst_8703 = cljs.core.apply.call(null, handler, inst_8702, inst_8669);
                                                      var state_8711__$1 = function() {
                                                        var statearr_8736 = state_8711;
                                                        statearr_8736[12] = inst_8703;
                                                        return statearr_8736;
                                                      }();
                                                      var statearr_8737_8769 = state_8711__$1;
                                                      statearr_8737_8769[2] = null;
                                                      statearr_8737_8769[1] = 2;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_8712 === 18) {
                                                        var inst_8674 = state_8711[9];
                                                        var inst_8679 = state_8711[11];
                                                        var inst_8687 = state_8711[2];
                                                        var inst_8688 = cljs.core.conj.call(null, inst_8674, inst_8687);
                                                        var inst_8673 = inst_8679;
                                                        var inst_8674__$1 = inst_8688;
                                                        var state_8711__$1 = function() {
                                                          var statearr_8738 = state_8711;
                                                          statearr_8738[10] = inst_8673;
                                                          statearr_8738[9] = inst_8674__$1;
                                                          return statearr_8738;
                                                        }();
                                                        var statearr_8739_8770 = state_8711__$1;
                                                        statearr_8739_8770[2] = null;
                                                        statearr_8739_8770[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_8712 === 8) {
                                                          var inst_8668 = state_8711[7];
                                                          var inst_8672 = cljs.core.PersistentVector.EMPTY;
                                                          var inst_8673 = inst_8668;
                                                          var inst_8674 = inst_8672;
                                                          var state_8711__$1 = function() {
                                                            var statearr_8740 = state_8711;
                                                            statearr_8740[10] = inst_8673;
                                                            statearr_8740[9] = inst_8674;
                                                            return statearr_8740;
                                                          }();
                                                          var statearr_8741_8771 = state_8711__$1;
                                                          statearr_8741_8771[2] = null;
                                                          statearr_8741_8771[1] = 11;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_8745 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8745[0] = state_machine__5694__auto__;
              statearr_8745[1] = 1;
              return statearr_8745;
            };
            var state_machine__5694__auto____1 = function(state_8711) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_8711);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e8746) {
                    if (e8746 instanceof Object) {
                      var ex__5697__auto__ = e8746;
                      var statearr_8747_8772 = state_8711;
                      statearr_8747_8772[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8711);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8746;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8773 = state_8711;
                  state_8711 = G__8773;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_8711) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_8711);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_8748 = f__5709__auto__.call(null);
        statearr_8748[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_8748;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.api.ordered_api = function ordered_api(request_handler, result_handler) {
  var ocomm = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
  var _ = clustermap.api.ordered_api_results.call(null, ocomm, result_handler);
  return function(ocomm, _) {
    return function() {
      var G__8776__delegate = function(req_args) {
        var temp__4124__auto__ = cljs.core.apply.call(null, request_handler, req_args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var r = temp__4124__auto__;
          var rseq = cljs.core.sequential_QMARK_.call(null, r) ? r : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
          var vec__8775 = rseq;
          var rcomm = cljs.core.nth.call(null, vec__8775, 0, null);
          var result_handler_args = cljs.core.nthnext.call(null, vec__8775, 1);
          return cljs.core.async.put_BANG_.call(null, ocomm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rcomm, result_handler_args], null));
        } else {
          return null;
        }
      };
      var G__8776 = function(var_args) {
        var req_args = null;
        if (arguments.length > 0) {
          req_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__8776__delegate.call(this, req_args);
      };
      G__8776.cljs$lang$maxFixedArity = 0;
      G__8776.cljs$lang$applyTo = function(arglist__8777) {
        var req_args = cljs.core.seq(arglist__8777);
        return G__8776__delegate(req_args);
      };
      G__8776.cljs$core$IFn$_invoke$arity$variadic = G__8776__delegate;
      return G__8776;
    }();
  }(ocomm, _);
};
clustermap.api.log_api = function() {
  var log_api__delegate = function(f, args) {
    var ch = cljs.core.apply.call(null, f, args);
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, ch) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, ch) {
            return function(state_8795) {
              var state_val_8796 = state_8795[1];
              if (state_val_8796 === 2) {
                var inst_8792 = state_8795[2];
                var inst_8793 = console.log(inst_8792);
                var state_8795__$1 = state_8795;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8795__$1, inst_8793);
              } else {
                if (state_val_8796 === 1) {
                  var state_8795__$1 = state_8795;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8795__$1, 2, ch);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, ch);
          return function(switch__5693__auto__, c__5708__auto__, ch) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_8800 = [null, null, null, null, null, null, null];
                statearr_8800[0] = state_machine__5694__auto__;
                statearr_8800[1] = 1;
                return statearr_8800;
              };
              var state_machine__5694__auto____1 = function(state_8795) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_8795);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e8801) {
                      if (e8801 instanceof Object) {
                        var ex__5697__auto__ = e8801;
                        var statearr_8802_8804 = state_8795;
                        statearr_8802_8804[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8795);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e8801;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__8805 = state_8795;
                    state_8795 = G__8805;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_8795) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_8795);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, ch);
        }();
        var state__5710__auto__ = function() {
          var statearr_8803 = f__5709__auto__.call(null);
          statearr_8803[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_8803;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, ch));
    return c__5708__auto__;
  };
  var log_api = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log_api__delegate.call(this, f, args);
  };
  log_api.cljs$lang$maxFixedArity = 1;
  log_api.cljs$lang$applyTo = function(arglist__8806) {
    var f = cljs.core.first(arglist__8806);
    var args = cljs.core.rest(arglist__8806);
    return log_api__delegate(f, args);
  };
  log_api.cljs$core$IFn$_invoke$arity$variadic = log_api__delegate;
  return log_api;
}();
clustermap.api.map_json_params = function map_json_params(m) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__8809) {
    var vec__8810 = p__8809;
    var k = cljs.core.nth.call(null, vec__8810, 0, null);
    var v = cljs.core.nth.call(null, vec__8810, 1, null);
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, v)));
  }, m));
};
clustermap.api.fetch = function fetch(comm) {
  var r = cljs.core.atom.call(null, null);
  var c__5708__auto___8837 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___8837, r) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___8837, r) {
          return function(state_8828) {
            var state_val_8829 = state_8828[1];
            if (state_val_8829 === 2) {
              var inst_8825 = state_8828[2];
              var inst_8826 = cljs.core.reset_BANG_.call(null, r, inst_8825);
              var state_8828__$1 = state_8828;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8828__$1, inst_8826);
            } else {
              if (state_val_8829 === 1) {
                var state_8828__$1 = state_8828;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8828__$1, 2, comm);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto___8837, r);
        return function(switch__5693__auto__, c__5708__auto___8837, r) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_8833 = [null, null, null, null, null, null, null];
              statearr_8833[0] = state_machine__5694__auto__;
              statearr_8833[1] = 1;
              return statearr_8833;
            };
            var state_machine__5694__auto____1 = function(state_8828) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_8828);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e8834) {
                    if (e8834 instanceof Object) {
                      var ex__5697__auto__ = e8834;
                      var statearr_8835_8838 = state_8828;
                      statearr_8835_8838[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8828);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8834;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8839 = state_8828;
                  state_8828 = G__8839;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_8828) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_8828);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___8837, r);
      }();
      var state__5710__auto__ = function() {
        var statearr_8836 = f__5709__auto__.call(null);
        statearr_8836[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___8837;
        return statearr_8836;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___8837, r));
  return r;
};
clustermap.api.api_prefix = config.api.prefix;
clustermap.api.boundarylines = function() {
  var boundarylines__delegate = function(id, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundarylines/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), opts);
  };
  var boundarylines = function(id, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundarylines__delegate.call(this, id, tolerance, opts);
  };
  boundarylines.cljs$lang$maxFixedArity = 2;
  boundarylines.cljs$lang$applyTo = function(arglist__8840) {
    var id = cljs.core.first(arglist__8840);
    arglist__8840 = cljs.core.next(arglist__8840);
    var tolerance = cljs.core.first(arglist__8840);
    var opts = cljs.core.rest(arglist__8840);
    return boundarylines__delegate(id, tolerance, opts);
  };
  boundarylines.cljs$core$IFn$_invoke$arity$variadic = boundarylines__delegate;
  return boundarylines;
}();
clustermap.api.boundaryline_collection_index = function() {
  var boundaryline_collection_index__delegate = function(id, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundaryline-collection-index/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)), opts);
  };
  var boundaryline_collection_index = function(id, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return boundaryline_collection_index__delegate.call(this, id, opts);
  };
  boundaryline_collection_index.cljs$lang$maxFixedArity = 1;
  boundaryline_collection_index.cljs$lang$applyTo = function(arglist__8841) {
    var id = cljs.core.first(arglist__8841);
    var opts = cljs.core.rest(arglist__8841);
    return boundaryline_collection_index__delegate(id, opts);
  };
  boundaryline_collection_index.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_index__delegate;
  return boundaryline_collection_index;
}();
clustermap.api.boundaryline_set = function() {
  var boundaryline_set__delegate = function(ids, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.POST, "/api/boundaryline-set", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ids", "ids", -998535796), ids, new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818), tolerance], null), opts);
  };
  var boundaryline_set = function(ids, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundaryline_set__delegate.call(this, ids, tolerance, opts);
  };
  boundaryline_set.cljs$lang$maxFixedArity = 2;
  boundaryline_set.cljs$lang$applyTo = function(arglist__8842) {
    var ids = cljs.core.first(arglist__8842);
    arglist__8842 = cljs.core.next(arglist__8842);
    var tolerance = cljs.core.first(arglist__8842);
    var opts = cljs.core.rest(arglist__8842);
    return boundaryline_set__delegate(ids, tolerance, opts);
  };
  boundaryline_set.cljs$core$IFn$_invoke$arity$variadic = boundaryline_set__delegate;
  return boundaryline_set;
}();
clustermap.api.boundaryline_collection_view = function() {
  var boundaryline_collection_view__delegate = function(collection_id, tolerance, bounds, p__8843) {
    var map__8845 = p__8843;
    var map__8845__$1 = cljs.core.seq_QMARK_.call(null, map__8845) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8845) : map__8845;
    var opts = map__8845__$1;
    var boundaryline_ids = cljs.core.get.call(null, map__8845__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var opts__$1 = cljs.core.flatten.call(null, cljs.core.seq.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869))));
    return cljs.core.apply.call(null, clustermap.api.POST, "/api/boundaryline-collection-view/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, collection_id)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), boundaryline_ids], null), opts__$1);
  };
  var boundaryline_collection_view = function(collection_id, tolerance, bounds, var_args) {
    var p__8843 = null;
    if (arguments.length > 3) {
      p__8843 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return boundaryline_collection_view__delegate.call(this, collection_id, tolerance, bounds, p__8843);
  };
  boundaryline_collection_view.cljs$lang$maxFixedArity = 3;
  boundaryline_collection_view.cljs$lang$applyTo = function(arglist__8846) {
    var collection_id = cljs.core.first(arglist__8846);
    arglist__8846 = cljs.core.next(arglist__8846);
    var tolerance = cljs.core.first(arglist__8846);
    arglist__8846 = cljs.core.next(arglist__8846);
    var bounds = cljs.core.first(arglist__8846);
    var p__8843 = cljs.core.rest(arglist__8846);
    return boundaryline_collection_view__delegate(collection_id, tolerance, bounds, p__8843);
  };
  boundaryline_collection_view.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_view__delegate;
  return boundaryline_collection_view;
}();
clustermap.api.boundaryline_aggregation = function() {
  var boundaryline_aggregation__delegate = function(index, type, blcoll, attr, filter, bounds, p__8847) {
    var vec__8849 = p__8847;
    var type_ids = cljs.core.nth.call(null, vec__8849, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/boundaryline-agg/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(blcoll) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(attr) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var boundaryline_aggregation = function(index, type, blcoll, attr, filter, bounds, var_args) {
    var p__8847 = null;
    if (arguments.length > 6) {
      p__8847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
    }
    return boundaryline_aggregation__delegate.call(this, index, type, blcoll, attr, filter, bounds, p__8847);
  };
  boundaryline_aggregation.cljs$lang$maxFixedArity = 6;
  boundaryline_aggregation.cljs$lang$applyTo = function(arglist__8850) {
    var index = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var type = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var blcoll = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var attr = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var filter = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var bounds = cljs.core.first(arglist__8850);
    var p__8847 = cljs.core.rest(arglist__8850);
    return boundaryline_aggregation__delegate(index, type, blcoll, attr, filter, bounds, p__8847);
  };
  boundaryline_aggregation.cljs$core$IFn$_invoke$arity$variadic = boundaryline_aggregation__delegate;
  return boundaryline_aggregation;
}();
clustermap.api.summary_stats = function() {
  var summary_stats__delegate = function(index, type, statsattrs, filter, bounds, p__8851) {
    var vec__8853 = p__8851;
    var type_ids = cljs.core.nth.call(null, vec__8853, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/summary-stats/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "statsattrs", "statsattrs", 1724366357), statsattrs, new cljs.core.Keyword(null, 
    "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var summary_stats = function(index, type, statsattrs, filter, bounds, var_args) {
    var p__8851 = null;
    if (arguments.length > 5) {
      p__8851 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return summary_stats__delegate.call(this, index, type, statsattrs, filter, bounds, p__8851);
  };
  summary_stats.cljs$lang$maxFixedArity = 5;
  summary_stats.cljs$lang$applyTo = function(arglist__8854) {
    var index = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var type = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var statsattrs = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var filter = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var bounds = cljs.core.first(arglist__8854);
    var p__8851 = cljs.core.rest(arglist__8854);
    return summary_stats__delegate(index, type, statsattrs, filter, bounds, p__8851);
  };
  summary_stats.cljs$core$IFn$_invoke$arity$variadic = summary_stats__delegate;
  return summary_stats;
}();
clustermap.api.location_lists = function() {
  var location_lists__delegate = function(index, type, location_attr, attrs, max_count, filter, bounds, p__8855) {
    var vec__8857 = p__8855;
    var type_ids = cljs.core.nth.call(null, vec__8857, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/location-lists/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location_attr) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max-count", 
    "max-count", 1539185305), max_count, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), attrs, new cljs.core.Keyword(null, "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var location_lists = function(index, type, location_attr, attrs, max_count, filter, bounds, var_args) {
    var p__8855 = null;
    if (arguments.length > 7) {
      p__8855 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 7), 0);
    }
    return location_lists__delegate.call(this, index, type, location_attr, attrs, max_count, filter, bounds, p__8855);
  };
  location_lists.cljs$lang$maxFixedArity = 7;
  location_lists.cljs$lang$applyTo = function(arglist__8858) {
    var index = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var type = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var location_attr = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var attrs = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var max_count = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var filter = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var bounds = cljs.core.first(arglist__8858);
    var p__8855 = cljs.core.rest(arglist__8858);
    return location_lists__delegate(index, type, location_attr, attrs, max_count, filter, bounds, p__8855);
  };
  location_lists.cljs$core$IFn$_invoke$arity$variadic = location_lists__delegate;
  return location_lists;
}();
clustermap.api.simple_table = function() {
  var simple_table__delegate = function(index, type, filter_spec, bounds, sort_spec, from, size, p__8859) {
    var vec__8861 = p__8859;
    var type_ids = cljs.core.nth.call(null, vec__8861, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/simple-table/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "filter", "filter", -948537934), filter_spec, new cljs.core.Keyword(null, 
    "bounds", "bounds", 1691609455), bounds, new cljs.core.Keyword(null, "sort", "sort", 953465918), sort_spec, new cljs.core.Keyword(null, "from", "from", 1815293044), from, new cljs.core.Keyword(null, "size", "size", 1098693007), size], null));
  };
  var simple_table = function(index, type, filter_spec, bounds, sort_spec, from, size, var_args) {
    var p__8859 = null;
    if (arguments.length > 7) {
      p__8859 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 7), 0);
    }
    return simple_table__delegate.call(this, index, type, filter_spec, bounds, sort_spec, from, size, p__8859);
  };
  simple_table.cljs$lang$maxFixedArity = 7;
  simple_table.cljs$lang$applyTo = function(arglist__8862) {
    var index = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var type = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var filter_spec = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var bounds = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var sort_spec = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var from = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var size = cljs.core.first(arglist__8862);
    var p__8859 = cljs.core.rest(arglist__8862);
    return simple_table__delegate(index, type, filter_spec, bounds, sort_spec, from, size, p__8859);
  };
  simple_table.cljs$core$IFn$_invoke$arity$variadic = simple_table__delegate;
  return simple_table;
}();
clustermap.api.timeline = function timeline(index, type, filter_spec, bounds, time_variable, after, before, interval, metric_variables) {
  return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/timeline/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), filter_spec, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds, new cljs.core.Keyword(null, "time-variable", "time-variable", 
  -1643449307), time_variable, new cljs.core.Keyword(null, "after", "after", 594996914), after, new cljs.core.Keyword(null, "before", "before", -1633692388), before, new cljs.core.Keyword(null, "interval", "interval", 1708495417), interval, new cljs.core.Keyword(null, "metric-variables", "metric-variables", -1123283594), metric_variables], null));
};
goog.provide("clustermap.boundarylines");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.boundarylines.zoom_tolerances = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, .01], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, .002], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 3E-4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, 0], null)], null);
clustermap.boundarylines.ideal_tolerance = function ideal_tolerance(zoom) {
  var or__3558__auto__ = cljs.core.some.call(null, function(p__16282) {
    var vec__16283 = p__16282;
    var z = cljs.core.nth.call(null, vec__16283, 0, null);
    var t = cljs.core.nth.call(null, vec__16283, 1, null);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = z;
      if (cljs.core.truth_(and__3546__auto__)) {
        return zoom <= z;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return t;
    } else {
      return null;
    }
  }, clustermap.boundarylines.zoom_tolerances);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return 0;
  }
};
clustermap.boundarylines.best_available_tolerance = function best_available_tolerance(zoom, available_tolerances) {
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var coarser = cljs.core.reverse.call(null, cljs.core.filter.call(null, function(i_tol) {
    return function(t) {
      return t > i_tol;
    };
  }(i_tol), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances)));
  var finer = cljs.core.filter.call(null, function(i_tol, coarser) {
    return function(t) {
      return t < i_tol;
    };
  }(i_tol, coarser), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances));
  var avail_set = cljs.core.set.call(null, available_tolerances);
  var or__3558__auto__ = cljs.core.get.call(null, avail_set, i_tol);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var or__3558__auto____$1 = cljs.core.some.call(null, avail_set, finer);
    if (cljs.core.truth_(or__3558__auto____$1)) {
      return or__3558__auto____$1;
    } else {
      return cljs.core.some.call(null, avail_set, coarser);
    }
  }
};
clustermap.boundarylines.make_sequential = function make_sequential(x) {
  if (x == null) {
    return null;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return x;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    }
  }
};
clustermap.boundarylines.cache_boundarylines = function cache_boundarylines(app_state, boundarylines_path, collection_boundarylines_path, boundarylines) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var collection_boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, collection_boundarylines_path);
  var seq__16288 = cljs.core.seq.call(null, boundarylines);
  var chunk__16289 = null;
  var count__16290 = 0;
  var i__16291 = 0;
  while (true) {
    if (i__16291 < count__16290) {
      var bl = cljs.core._nth.call(null, chunk__16289, i__16291);
      var boundaryline_id_16292 = bl["id"];
      var tolerance_16293 = bl["tolerance"];
      var general_cache_path_16294 = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_16292, tolerance_16293], null));
      var collection_cache_path_16295 = cljs.core.truth_(collection_boundarylines_path__$1) ? cljs.core.concat.call(null, collection_boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_16292, tolerance_16293], null)) : null;
      cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, general_cache_path_16294, function(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16292, tolerance_16293, general_cache_path_16294, collection_cache_path_16295, bl, boundarylines_path__$1, collection_boundarylines_path__$1) {
        return function(old) {
          return bl;
        };
      }(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16292, tolerance_16293, general_cache_path_16294, collection_cache_path_16295, bl, boundarylines_path__$1, collection_boundarylines_path__$1));
      if (cljs.core.truth_(collection_cache_path_16295)) {
        cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, collection_cache_path_16295, function(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16292, tolerance_16293, general_cache_path_16294, collection_cache_path_16295, bl, boundarylines_path__$1, collection_boundarylines_path__$1) {
          return function(old) {
            return bl;
          };
        }(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16292, tolerance_16293, general_cache_path_16294, collection_cache_path_16295, bl, boundarylines_path__$1, collection_boundarylines_path__$1));
      } else {
      }
      var G__16296 = seq__16288;
      var G__16297 = chunk__16289;
      var G__16298 = count__16290;
      var G__16299 = i__16291 + 1;
      seq__16288 = G__16296;
      chunk__16289 = G__16297;
      count__16290 = G__16298;
      i__16291 = G__16299;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__16288);
      if (temp__4126__auto__) {
        var seq__16288__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16288__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__16288__$1);
          var G__16300 = cljs.core.chunk_rest.call(null, seq__16288__$1);
          var G__16301 = c__4314__auto__;
          var G__16302 = cljs.core.count.call(null, c__4314__auto__);
          var G__16303 = 0;
          seq__16288 = G__16300;
          chunk__16289 = G__16301;
          count__16290 = G__16302;
          i__16291 = G__16303;
          continue;
        } else {
          var bl = cljs.core.first.call(null, seq__16288__$1);
          var boundaryline_id_16304 = bl["id"];
          var tolerance_16305 = bl["tolerance"];
          var general_cache_path_16306 = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_16304, tolerance_16305], null));
          var collection_cache_path_16307 = cljs.core.truth_(collection_boundarylines_path__$1) ? cljs.core.concat.call(null, collection_boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_16304, tolerance_16305], null)) : null;
          cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, general_cache_path_16306, function(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16304, tolerance_16305, general_cache_path_16306, collection_cache_path_16307, bl, seq__16288__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1) {
            return function(old) {
              return bl;
            };
          }(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16304, tolerance_16305, general_cache_path_16306, collection_cache_path_16307, bl, seq__16288__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1));
          if (cljs.core.truth_(collection_cache_path_16307)) {
            cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, collection_cache_path_16307, function(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16304, tolerance_16305, general_cache_path_16306, collection_cache_path_16307, bl, seq__16288__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1) {
              return function(old) {
                return bl;
              };
            }(seq__16288, chunk__16289, count__16290, i__16291, boundaryline_id_16304, tolerance_16305, general_cache_path_16306, collection_cache_path_16307, bl, seq__16288__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1));
          } else {
          }
          var G__16308 = cljs.core.next.call(null, seq__16288__$1);
          var G__16309 = null;
          var G__16310 = 0;
          var G__16311 = 0;
          seq__16288 = G__16308;
          chunk__16289 = G__16309;
          count__16290 = G__16310;
          i__16291 = G__16311;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.boundarylines.fetch_boundarylines = function() {
  var fetch_boundarylines__delegate = function(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__16312) {
    var map__16328 = p__16312;
    var map__16328__$1 = cljs.core.seq_QMARK_.call(null, map__16328) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16328) : map__16328;
    var bounds = cljs.core.get.call(null, map__16328__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
    var boundaryline_ids = cljs.core.get.call(null, map__16328__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var comm = clustermap.api.boundaryline_collection_view.call(null, collection_id, tolerance, bounds, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), boundaryline_ids, new cljs.core.Keyword(null, "raw", "raw", 1604651272), true);
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids) {
            return function(state_16333) {
              var state_val_16334 = state_16333[1];
              if (state_val_16334 === 2) {
                var inst_16330 = state_16333[2];
                var inst_16331 = clustermap.boundarylines.cache_boundarylines.call(null, app_state, boundarylines_path, collection_boundarylines_path, inst_16330);
                var state_16333__$1 = function() {
                  var statearr_16335 = state_16333;
                  statearr_16335[7] = inst_16331;
                  return statearr_16335;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16333__$1, true);
              } else {
                if (state_val_16334 === 1) {
                  var state_16333__$1 = state_16333;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16333__$1, 2, comm);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids);
          return function(switch__5693__auto__, c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16339 = [null, null, null, null, null, null, null, null];
                statearr_16339[0] = state_machine__5694__auto__;
                statearr_16339[1] = 1;
                return statearr_16339;
              };
              var state_machine__5694__auto____1 = function(state_16333) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16333);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16340) {
                      if (e16340 instanceof Object) {
                        var ex__5697__auto__ = e16340;
                        var statearr_16341_16343 = state_16333;
                        statearr_16341_16343[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16333);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16340;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16344 = state_16333;
                    state_16333 = G__16344;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16333) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16333);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids);
        }();
        var state__5710__auto__ = function() {
          var statearr_16342 = f__5709__auto__.call(null);
          statearr_16342[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_16342;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, comm, map__16328, map__16328__$1, bounds, boundaryline_ids));
    return c__5708__auto__;
  };
  var fetch_boundarylines = function(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, var_args) {
    var p__16312 = null;
    if (arguments.length > 5) {
      p__16312 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return fetch_boundarylines__delegate.call(this, app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__16312);
  };
  fetch_boundarylines.cljs$lang$maxFixedArity = 5;
  fetch_boundarylines.cljs$lang$applyTo = function(arglist__16345) {
    var app_state = cljs.core.first(arglist__16345);
    arglist__16345 = cljs.core.next(arglist__16345);
    var boundarylines_path = cljs.core.first(arglist__16345);
    arglist__16345 = cljs.core.next(arglist__16345);
    var collection_boundarylines_path = cljs.core.first(arglist__16345);
    arglist__16345 = cljs.core.next(arglist__16345);
    var collection_id = cljs.core.first(arglist__16345);
    arglist__16345 = cljs.core.next(arglist__16345);
    var tolerance = cljs.core.first(arglist__16345);
    var p__16312 = cljs.core.rest(arglist__16345);
    return fetch_boundarylines__delegate(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__16312);
  };
  fetch_boundarylines.cljs$core$IFn$_invoke$arity$variadic = fetch_boundarylines__delegate;
  return fetch_boundarylines;
}();
clustermap.boundarylines.fetch_from_index = function fetch_from_index(index, boundaryline_id) {
  var default_bl = cljs.core.truth_(index) ? index[cljs.core.name.call(null, boundaryline_id)] : null;
  var default_tol = cljs.core.truth_(default_bl) ? default_bl["tolerance"] : null;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = default_bl;
    if (cljs.core.truth_(and__3546__auto__)) {
      return default_tol;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_tol, default_bl], null);
  } else {
    return null;
  }
};
clustermap.boundarylines.best_version = function best_version(collection_index, collection_cache, general_cache, zoom, boundaryline_id) {
  var bl_versions = function() {
    var or__3558__auto__ = cljs.core.get.call(null, collection_cache, boundaryline_id);
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.get.call(null, general_cache, boundaryline_id);
    }
  }();
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var use_tol = clustermap.boundarylines.best_available_tolerance.call(null, zoom, cljs.core.keys.call(null, bl_versions));
  var use_bl = cljs.core.get.call(null, bl_versions, use_tol);
  if (cljs.core.truth_(use_bl)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [use_tol, use_bl], null);
  } else {
    return clustermap.boundarylines.fetch_from_index.call(null, collection_index, boundaryline_id);
  }
};
clustermap.boundarylines.get_or_fetch_best_boundarylines = function() {
  var get_or_fetch_best_boundarylines__delegate = function(app_state, boundarylines_path, collection_id, bounds, zoom, p__16346) {
    var map__16351 = p__16346;
    var map__16351__$1 = cljs.core.seq_QMARK_.call(null, map__16351) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16351) : map__16351;
    var boundaryline_ids = cljs.core.get.call(null, map__16351__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
    var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
    var general_cache_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)], null));
    var general_cache = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), general_cache_path);
    var collection_path = cljs.core.truth_(collection_id) ? cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null)) : null;
    var collection_index_path = cljs.core.truth_(collection_id) ? cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "index", "index", -1531685915)], null)) : null;
    var collection_index = cljs.core.truth_(collection_id) ? cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), collection_index_path) : null;
    var collection_cache_path = cljs.core.truth_(collection_path) ? cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)], null)) : null;
    var collection_cache = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), collection_cache_path);
    var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
    var best_versions = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, map__16351, map__16351__$1, boundaryline_ids) {
      return function(blid) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [blid, clustermap.boundarylines.best_version.call(null, collection_index, collection_cache, general_cache, zoom, blid)], null);
      };
    }(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, map__16351, map__16351__$1, boundaryline_ids), boundaryline_ids));
    var required = cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, best_versions, map__16351, map__16351__$1, boundaryline_ids) {
      return function(p__16352) {
        var vec__16353 = p__16352;
        var blid = cljs.core.nth.call(null, vec__16353, 0, null);
        var vec__16354 = cljs.core.nth.call(null, vec__16353, 1, null);
        var tol = cljs.core.nth.call(null, vec__16354, 0, null);
        var bl = cljs.core.nth.call(null, vec__16354, 1, null);
        return cljs.core.not_EQ_.call(null, tol, i_tol);
      };
    }(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, best_versions, map__16351, map__16351__$1, boundaryline_ids), best_versions));
    var notify_chan = cljs.core.truth_(cljs.core.not_empty.call(null, required)) ? clustermap.boundarylines.fetch_boundarylines.call(null, app_state, general_cache_path, collection_cache_path, collection_id, i_tol, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), required, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds) : null;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [best_versions, notify_chan], null);
  };
  var get_or_fetch_best_boundarylines = function(app_state, boundarylines_path, collection_id, bounds, zoom, var_args) {
    var p__16346 = null;
    if (arguments.length > 5) {
      p__16346 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return get_or_fetch_best_boundarylines__delegate.call(this, app_state, boundarylines_path, collection_id, bounds, zoom, p__16346);
  };
  get_or_fetch_best_boundarylines.cljs$lang$maxFixedArity = 5;
  get_or_fetch_best_boundarylines.cljs$lang$applyTo = function(arglist__16355) {
    var app_state = cljs.core.first(arglist__16355);
    arglist__16355 = cljs.core.next(arglist__16355);
    var boundarylines_path = cljs.core.first(arglist__16355);
    arglist__16355 = cljs.core.next(arglist__16355);
    var collection_id = cljs.core.first(arglist__16355);
    arglist__16355 = cljs.core.next(arglist__16355);
    var bounds = cljs.core.first(arglist__16355);
    arglist__16355 = cljs.core.next(arglist__16355);
    var zoom = cljs.core.first(arglist__16355);
    var p__16346 = cljs.core.rest(arglist__16355);
    return get_or_fetch_best_boundarylines__delegate(app_state, boundarylines_path, collection_id, bounds, zoom, p__16346);
  };
  get_or_fetch_best_boundarylines.cljs$core$IFn$_invoke$arity$variadic = get_or_fetch_best_boundarylines__delegate;
  return get_or_fetch_best_boundarylines;
}();
clustermap.boundarylines.boundaryline_collection_rtree = function boundaryline_collection_rtree(app_state, boundarylines_path, collection_id) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var rtree_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rtree", "rtree", -82448827)], null));
  cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rtree_path, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path) {
    return function(old) {
      if (cljs.core.truth_(old)) {
        return old;
      } else {
        return new RTree(10);
      }
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path));
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), rtree_path);
};
clustermap.boundarylines.rtree_index = function rtree_index(rtree, js_index) {
  var keys = Object.keys(js_index);
  var features = [];
  var js_feature_coll = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), "FeatureCollection"], null));
  var _ = js_feature_coll["features"] = features;
  var seq__16360_16364 = cljs.core.seq.call(null, keys);
  var chunk__16361_16365 = null;
  var count__16362_16366 = 0;
  var i__16363_16367 = 0;
  while (true) {
    if (i__16363_16367 < count__16362_16366) {
      var k_16368 = cljs.core._nth.call(null, chunk__16361_16365, i__16363_16367);
      var obj_16369 = js_index[k_16368];
      var geom_16370 = obj_16369["geojson"];
      var feature_16371 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Feature", new cljs.core.Keyword(null, "properties", "properties", 685819552), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), obj_16369["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), obj_16369["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
      1525822383), obj_16369["compact_name"]], null)], null));
      var __16372__$1 = feature_16371["geometry"] = geom_16370;
      var __16373__$2 = feature_16371["properties"]["index_object"] = obj_16369;
      features.push(feature_16371);
      var G__16374 = seq__16360_16364;
      var G__16375 = chunk__16361_16365;
      var G__16376 = count__16362_16366;
      var G__16377 = i__16363_16367 + 1;
      seq__16360_16364 = G__16374;
      chunk__16361_16365 = G__16375;
      count__16362_16366 = G__16376;
      i__16363_16367 = G__16377;
      continue;
    } else {
      var temp__4126__auto___16378 = cljs.core.seq.call(null, seq__16360_16364);
      if (temp__4126__auto___16378) {
        var seq__16360_16379__$1 = temp__4126__auto___16378;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16360_16379__$1)) {
          var c__4314__auto___16380 = cljs.core.chunk_first.call(null, seq__16360_16379__$1);
          var G__16381 = cljs.core.chunk_rest.call(null, seq__16360_16379__$1);
          var G__16382 = c__4314__auto___16380;
          var G__16383 = cljs.core.count.call(null, c__4314__auto___16380);
          var G__16384 = 0;
          seq__16360_16364 = G__16381;
          chunk__16361_16365 = G__16382;
          count__16362_16366 = G__16383;
          i__16363_16367 = G__16384;
          continue;
        } else {
          var k_16385 = cljs.core.first.call(null, seq__16360_16379__$1);
          var obj_16386 = js_index[k_16385];
          var geom_16387 = obj_16386["geojson"];
          var feature_16388 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Feature", new cljs.core.Keyword(null, "properties", "properties", 685819552), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), obj_16386["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), obj_16386["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
          1525822383), obj_16386["compact_name"]], null)], null));
          var __16389__$1 = feature_16388["geometry"] = geom_16387;
          var __16390__$2 = feature_16388["properties"]["index_object"] = obj_16386;
          features.push(feature_16388);
          var G__16391 = cljs.core.next.call(null, seq__16360_16379__$1);
          var G__16392 = null;
          var G__16393 = 0;
          var G__16394 = 0;
          seq__16360_16364 = G__16391;
          chunk__16361_16365 = G__16392;
          count__16362_16366 = G__16393;
          i__16363_16367 = G__16394;
          continue;
        }
      } else {
      }
    }
    break;
  }
  rtree.geoJSON(js_feature_coll);
  return rtree;
};
clustermap.boundarylines.fetch_boundaryline_collection_index = function fetch_boundaryline_collection_index(app_state, boundarylines_path, collection_id) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var index_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "index", "index", -1531685915)], null));
  var index = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), index_path);
  var rtree = clustermap.boundarylines.boundaryline_collection_rtree.call(null, app_state, boundarylines_path__$1, collection_id);
  if (cljs.core.truth_(index)) {
    return null;
  } else {
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
            return function(state_16437) {
              var state_val_16438 = state_16437[1];
              if (state_val_16438 === 5) {
                var inst_16435 = state_16437[2];
                var state_16437__$1 = state_16437;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16437__$1, inst_16435);
              } else {
                if (state_val_16438 === 4) {
                  var state_16437__$1 = state_16437;
                  var statearr_16439_16451 = state_16437__$1;
                  statearr_16439_16451[2] = null;
                  statearr_16439_16451[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16438 === 3) {
                    var inst_16425 = state_16437[7];
                    var inst_16432 = clustermap.boundarylines.rtree_index.call(null, rtree, inst_16425);
                    var state_16437__$1 = state_16437;
                    var statearr_16440_16452 = state_16437__$1;
                    statearr_16440_16452[2] = inst_16432;
                    statearr_16440_16452[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16438 === 2) {
                      var inst_16425 = state_16437[7];
                      var inst_16425__$1 = state_16437[2];
                      var inst_16426 = function() {
                        var bl_coll_index = inst_16425__$1;
                        return function(bl_coll_index, inst_16425, inst_16425__$1, state_val_16438, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
                          return function(old) {
                            if (cljs.core.truth_(old)) {
                              return old;
                            } else {
                              return bl_coll_index;
                            }
                          };
                        }(bl_coll_index, inst_16425, inst_16425__$1, state_val_16438, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
                      }();
                      var inst_16427 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, index_path, inst_16426);
                      var inst_16428 = cljs.core.deref.call(null, app_state);
                      var inst_16429 = cljs.core.get_in.call(null, inst_16428, index_path);
                      var inst_16430 = cljs.core._EQ_.call(null, inst_16429, inst_16425__$1);
                      var state_16437__$1 = function() {
                        var statearr_16441 = state_16437;
                        statearr_16441[8] = inst_16427;
                        statearr_16441[7] = inst_16425__$1;
                        return statearr_16441;
                      }();
                      if (inst_16430) {
                        var statearr_16442_16453 = state_16437__$1;
                        statearr_16442_16453[1] = 3;
                      } else {
                        var statearr_16443_16454 = state_16437__$1;
                        statearr_16443_16454[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16438 === 1) {
                        var inst_16423 = clustermap.api.boundaryline_collection_index.call(null, collection_id, new cljs.core.Keyword(null, "raw", "raw", 1604651272), true);
                        var state_16437__$1 = state_16437;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16437__$1, 2, inst_16423);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
          return function(switch__5693__auto__, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16447 = [null, null, null, null, null, null, null, null, null];
                statearr_16447[0] = state_machine__5694__auto__;
                statearr_16447[1] = 1;
                return statearr_16447;
              };
              var state_machine__5694__auto____1 = function(state_16437) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16437);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16448) {
                      if (e16448 instanceof Object) {
                        var ex__5697__auto__ = e16448;
                        var statearr_16449_16455 = state_16437;
                        statearr_16449_16455[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16437);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16448;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16456 = state_16437;
                    state_16437 = G__16456;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16437) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16437);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
        }();
        var state__5710__auto__ = function() {
          var statearr_16450 = f__5709__auto__.call(null);
          statearr_16450[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_16450;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree));
    return c__5708__auto__;
  }
};
clustermap.boundarylines.point_in_boundarylines = function point_in_boundarylines(app_state, boundarylines_path, collection_id, x, y) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var rtree_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rtree", "rtree", -82448827)], null));
  var rtree = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), rtree_path);
  var hits = cljs.core.truth_(rtree) ? rtree.search(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y, new cljs.core.Keyword(null, "w", "w", 354169001), 0, new cljs.core.Keyword(null, "h", "h", 1109658740), 0], null))) : null;
  return cljs.core.map.call(null, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits) {
    return function(hit) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), hit.properties.id, new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383), hit.properties.compact_name], null);
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits), cljs.core.filter.call(null, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits) {
    return function(hit) {
      return gju.pointInPolygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Point", new cljs.core.Keyword(null, "coordinates", "coordinates", -1225332668), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)], null)), hit.geometry);
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits), function() {
    var or__3558__auto__ = hits;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }()));
};
goog.provide("clustermap.formats.color");
goog.require("cljs.core");
clustermap.formats.color.rgb = function rgb(col) {
  var vec__17901 = col;
  var _ = cljs.core.nth.call(null, vec__17901, 0, null);
  var r1 = cljs.core.nth.call(null, vec__17901, 1, null);
  var r2 = cljs.core.nth.call(null, vec__17901, 2, null);
  var g1 = cljs.core.nth.call(null, vec__17901, 3, null);
  var g2 = cljs.core.nth.call(null, vec__17901, 4, null);
  var b1 = cljs.core.nth.call(null, vec__17901, 5, null);
  var b2 = cljs.core.nth.call(null, vec__17901, 6, null);
  var r = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r2), 16);
  var g = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(g1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(g2), 16);
  var b = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b2), 16);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, g, b], null);
};
clustermap.formats.color.is_light_color_QMARK_ = function is_light_color_QMARK_(col) {
  var vec__17903 = clustermap.formats.color.rgb.call(null, col);
  var r = cljs.core.nth.call(null, vec__17903, 0, null);
  var g = cljs.core.nth.call(null, vec__17903, 1, null);
  var b = cljs.core.nth.call(null, vec__17903, 2, null);
  return r + g + b > 128 * 3;
};
clustermap.formats.color.stand_out_color = function stand_out_color(col) {
  var vec__17905 = clustermap.formats.color.rgb.call(null, col);
  var r = cljs.core.nth.call(null, vec__17905, 0, null);
  var g = cljs.core.nth.call(null, vec__17905, 1, null);
  var b = cljs.core.nth.call(null, vec__17905, 2, null);
  var lightness = Math.ceil(Math.pow(Math.E, Math.log(r * g * b) / 3));
  var standout = 255 - lightness;
  var hex = standout < 16 ? "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(standout.toString(16)) : standout.toString(16);
  return "#" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex);
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("cljs_time.internal.core");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
cljs_time.internal.core._EQ_ = function() {
  var _EQ___delegate = function(args) {
    if (cljs.core.every_QMARK_.call(null, function(p1__24151_SHARP_) {
      return p1__24151_SHARP_ instanceof goog.date.Date;
    }, args)) {
      return cljs.core.apply.call(null, cljs.core._EQ_, cljs.core.map.call(null, function(p1__24152_SHARP_) {
        return p1__24152_SHARP_.getTime();
      }, args));
    } else {
      return cljs.core.apply.call(null, cljs.core._EQ_, args);
    }
  };
  var _EQ_ = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return _EQ___delegate.call(this, args);
  };
  _EQ_.cljs$lang$maxFixedArity = 0;
  _EQ_.cljs$lang$applyTo = function(arglist__24153) {
    var args = cljs.core.seq(arglist__24153);
    return _EQ___delegate(args);
  };
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___delegate;
  return _EQ_;
}();
cljs_time.internal.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.internal.core.days_in_month = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
cljs_time.internal.core.year_corrected_dim = function year_corrected_dim(year, month) {
  var G__24155 = cljs_time.internal.core.days_in_month.call(null, cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, month, 1)) ? 11 : month - 1);
  var G__24155__$1 = cljs.core.truth_(function() {
    var and__3546__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, year);
    if (and__3546__auto__) {
      return cljs_time.internal.core._EQ_.call(null, month, 2);
    } else {
      return and__3546__auto__;
    }
  }()) ? G__24155 + 1 : G__24155;
  return G__24155__$1;
};
cljs_time.internal.core.valid_date_QMARK_ = function valid_date_QMARK_(p__24156) {
  var map__24158 = p__24156;
  var map__24158__$1 = cljs.core.seq_QMARK_.call(null, map__24158) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24158) : map__24158;
  var d = map__24158__$1;
  var millis = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var months = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__24158__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months__$1 = months + 1;
  var _GT__LT_ = function(months__$1, map__24158, map__24158__$1, d, millis, seconds, minutes, hours, days, months, years) {
    return function _GT__LT_(a, b, x) {
      return x >= a && x <= b;
    };
  }(months__$1, map__24158, map__24158__$1, d, millis, seconds, minutes, hours, days, months, years);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = years;
    if (cljs.core.truth_(and__3546__auto__)) {
      return _GT__LT_.call(null, 1, 12, months__$1) && _GT__LT_.call(null, 1, cljs_time.internal.core.year_corrected_dim.call(null, years, months__$1), days) && _GT__LT_.call(null, 0, 23, hours) && _GT__LT_.call(null, 0, 59, minutes) && _GT__LT_.call(null, 0, 60, seconds) && _GT__LT_.call(null, 0, 999, millis);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "Date is not valid", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "invalid-date", "invalid-date", 2030506573), new cljs.core.Keyword(null, "date", "date", -1463434462), d], null));
  }
};
cljs_time.internal.core.index_of = function index_of(coll, x) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__24160_SHARP_, p2__24159_SHARP_) {
    if (cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, p2__24159_SHARP_, x))) {
      return p1__24160_SHARP_;
    } else {
      return null;
    }
  }, coll));
};
cljs_time.internal.core.period = function() {
  var period = null;
  var period__2 = function(period__$1, value) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap.fromArray([period__$1, value], true, false), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486)], null));
  };
  var period__3 = function() {
    var G__24161__delegate = function(p1, v1, kvs) {
      return cljs.core.apply.call(null, cljs.core.assoc, period.call(null, p1, v1), kvs);
    };
    var G__24161 = function(p1, v1, var_args) {
      var kvs = null;
      if (arguments.length > 2) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24161__delegate.call(this, p1, v1, kvs);
    };
    G__24161.cljs$lang$maxFixedArity = 2;
    G__24161.cljs$lang$applyTo = function(arglist__24162) {
      var p1 = cljs.core.first(arglist__24162);
      arglist__24162 = cljs.core.next(arglist__24162);
      var v1 = cljs.core.first(arglist__24162);
      var kvs = cljs.core.rest(arglist__24162);
      return G__24161__delegate(p1, v1, kvs);
    };
    G__24161.cljs$core$IFn$_invoke$arity$variadic = G__24161__delegate;
    return G__24161;
  }();
  period = function(p1, v1, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return period__2.call(this, p1, v1);
      default:
        return period__3.cljs$core$IFn$_invoke$arity$variadic(p1, v1, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  period.cljs$lang$maxFixedArity = 2;
  period.cljs$lang$applyTo = period__3.cljs$lang$applyTo;
  period.cljs$core$IFn$_invoke$arity$2 = period__2;
  period.cljs$core$IFn$_invoke$arity$variadic = period__3.cljs$core$IFn$_invoke$arity$variadic;
  return period;
}();
cljs_time.internal.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
      } else {
        return x;
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__24163) {
    var fmt = cljs.core.first(arglist__24163);
    var args = cljs.core.rest(arglist__24163);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
cljs_time.internal.core.zero_pad = function() {
  var zero_pad = null;
  var zero_pad__1 = function(n) {
    if (0 <= n && n <= 9) {
      return "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
    }
  };
  var zero_pad__2 = function(n, zeros) {
    if (1 > zeros) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, cljs.core.take.call(null, zeros - cljs.core.count.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)), cljs.core.repeat.call(null, "0")))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
    }
  };
  zero_pad = function(n, zeros) {
    switch(arguments.length) {
      case 1:
        return zero_pad__1.call(this, n);
      case 2:
        return zero_pad__2.call(this, n, zeros);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  zero_pad.cljs$core$IFn$_invoke$arity$1 = zero_pad__1;
  zero_pad.cljs$core$IFn$_invoke$arity$2 = zero_pad__2;
  return zero_pad;
}();
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return;
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
  };
  popAndLoadNextScript();
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  goog.dom.setProperties(script, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == "SCRIPT") {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.string.format");
schema.utils.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3558__auto__ = m;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4283__auto__ = function iter__23256(s__23257) {
        return new cljs.core.LazySeq(null, function() {
          var s__23257__$1 = s__23257;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23257__$1);
            if (temp__4126__auto__) {
              var s__23257__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23257__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23257__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__23259 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__23258 = 0;
                  while (true) {
                    if (i__23258 < size__4282__auto__) {
                      var vec__23262 = cljs.core._nth.call(null, c__4281__auto__, i__23258);
                      var k = cljs.core.nth.call(null, vec__23262, 0, null);
                      var v = cljs.core.nth.call(null, vec__23262, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__23259, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__23264 = i__23258 + 1;
                        i__23258 = G__23264;
                        continue;
                      } else {
                        var G__23265 = i__23258 + 1;
                        i__23258 = G__23265;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23259), iter__23256.call(null, cljs.core.chunk_rest.call(null, s__23257__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23259), null);
                }
              } else {
                var vec__23263 = cljs.core.first.call(null, s__23257__$2);
                var k = cljs.core.nth.call(null, vec__23263, 0, null);
                var v = cljs.core.nth.call(null, vec__23263, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__23256.call(null, cljs.core.rest.call(null, s__23257__$2)));
                } else {
                  var G__23266 = cljs.core.rest.call(null, s__23257__$2);
                  s__23257__$1 = G__23266;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__23267) {
    var m = cljs.core.first(arglist__23267);
    var kvs = cljs.core.rest(arglist__23267);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
schema.utils.type_of = function type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function() {
  var format_STAR___delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args);
  };
  var format_STAR_ = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format_STAR___delegate.call(this, fmt, args);
  };
  format_STAR_.cljs$lang$maxFixedArity = 1;
  format_STAR_.cljs$lang$applyTo = function(arglist__23268) {
    var fmt = cljs.core.first(arglist__23268);
    var args = cljs.core.rest(arglist__23268);
    return format_STAR___delegate(fmt, args);
  };
  format_STAR_.cljs$core$IFn$_invoke$arity$variadic = format_STAR___delegate;
  return format_STAR_;
}();
schema.utils.value_name = function value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)) < 20) {
    return value;
  } else {
    return cljs.core.symbol.call(null, "a-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(t));
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "schema.utils/ValidationError");
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__3558__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.__GT_ValidationError = function __GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "schema.utils/NamedError");
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.__GT_NamedError = function __GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.ErrorContainer = function(error, __meta, __extmap) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23270, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23272 = k23270 instanceof cljs.core.Keyword ? k23270.fqn : null;
  switch(G__23272) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23270, else__4147__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23269) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23273 = cljs.core.keyword_identical_QMARK_;
  var expr__23274 = k__4152__auto__;
  if (cljs.core.truth_(pred__23273.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__23274))) {
    return new schema.utils.ErrorContainer(G__23269, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23269), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23269) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__23269, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function __GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error);
};
schema.utils.map__GT_ErrorContainer = function map__GT_ErrorContainer(G__23271) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__23271), null, cljs.core.dissoc.call(null, G__23271, new cljs.core.Keyword(null, "error", "error", -978969032)));
};
schema.utils.error = function error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "x", "x", -555367584, null))));
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function error_val(x) {
  if (schema.utils.error_QMARK_.call(null, x)) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.wrap_error_name = function wrap_error_name(name, maybe_error) {
  var temp__4124__auto__ = schema.utils.error_val.call(null, maybe_error);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return schema.utils.error.call(null, schema.utils.__GT_NamedError.call(null, name, e));
  } else {
    return maybe_error;
  }
};
schema.utils.result_builder = function result_builder(lift_to_error) {
  return function conjer(m, e) {
    var temp__4124__auto__ = schema.utils.error_val.call(null, e);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var err = temp__4124__auto__;
      return schema.utils.error.call(null, cljs.core.conj.call(null, function() {
        var or__3558__auto__ = schema.utils.error_val.call(null, m);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return lift_to_error.call(null, m);
        }
      }(), err));
    } else {
      var temp__4124__auto____$1 = schema.utils.error_val.call(null, m);
      if (cljs.core.truth_(temp__4124__auto____$1)) {
        var merr = temp__4124__auto____$1;
        return schema.utils.error.call(null, cljs.core.conj.call(null, merr, null));
      } else {
        return cljs.core.conj.call(null, m, e);
      }
    }
  };
};
schema.utils.declare_class_schema_BANG_ = function declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
  var obj23278 = {};
  return obj23278;
}();
schema.utils.get_cell = function get_cell(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.schema$utils$PSimpleCell$get_cell$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = schema.utils.get_cell[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = schema.utils.get_cell["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.utils.set_cell = function set_cell(this$, x) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.schema$utils$PSimpleCell$set_cell$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = schema.utils.set_cell[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = schema.utils.set_cell["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
        }
      }
    }().call(null, this$, x);
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "schema.utils/SimpleVCell");
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.__GT_SimpleVCell = function __GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("clojure.string");
goog.require("clojure.string");
schema.core.Schema = function() {
  var obj23280 = {};
  return obj23280;
}();
schema.core.walker = function walker(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.schema$core$Schema$walker$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.schema$core$Schema$walker$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = schema.core.walker[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = schema.core.walker["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.walker", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.explain = function explain(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.schema$core$Schema$explain$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = schema.core.explain[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = schema.core.explain["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
        }
      }
    }().call(null, this$);
  }
};
schema.core.subschema_walker = function subschema_walker(s) {
  throw new Error("Walking is unsupported outside of start-walker; all composite schemas must eagerly bind subschema-walkers outside the returned walker.");
};
schema.core.start_walker = function start_walker(sub_walker, schema__$1) {
  var subschema_walker23282 = schema.core.subschema_walker;
  try {
    schema.core.subschema_walker = sub_walker;
    return schema.core.subschema_walker.call(null, schema__$1);
  } finally {
    schema.core.subschema_walker = subschema_walker23282;
  }
};
schema.core.checker = function checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.core.start_walker.call(null, schema.core.walker, schema__$1));
};
schema.core.check = function check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validate = function validate(schema__$1, value) {
  var temp__4126__auto___23283 = schema.core.check.call(null, schema__$1, value);
  if (cljs.core.truth_(temp__4126__auto___23283)) {
    var error_23284 = temp__4126__auto___23283;
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_23284)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "error", "error", -978969032), error_23284], null));
  } else {
  }
  return value;
};
schema.core.Schema["function"] = true;
schema.core.walker["function"] = function(this$) {
  var class_walker = function() {
    var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var more_schema = temp__4124__auto__;
      return schema.core.subschema_walker.call(null, more_schema);
    } else {
      return cljs.core.identity;
    }
  }();
  return function(class_walker) {
    return function(x) {
      var or__3558__auto__ = x == null || cljs.core.not.call(null, function() {
        var or__3558__auto__ = this$ === x.constructor;
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          return x instanceof this$;
        }
      }()) ? schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$, x, new cljs.core.Delay(function(class_walker) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), this$), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(class_walker), null), null)) : null;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return class_walker.call(null, x);
      }
    };
  }(class_walker);
};
schema.core.explain["function"] = function(this$) {
  var temp__4124__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var more_schema = temp__4124__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    return this$;
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23286, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23288 = k23286 instanceof cljs.core.Keyword ? k23286.fqn : null;
  switch(G__23288) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23286, else__4147__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23285) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23289 = cljs.core.keyword_identical_QMARK_;
  var expr__23290 = k__4152__auto__;
  if (cljs.core.truth_(pred__23289.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__23290))) {
    return new schema.core.AnythingSchema(G__23285, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23285), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23285) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__23285, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.identity;
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function __GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_);
};
schema.core.map__GT_AnythingSchema = function map__GT_AnythingSchema(G__23287) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__23287), null, cljs.core.dissoc.call(null, G__23287, new cljs.core.Keyword(null, "_", "_", 1453416199)));
};
schema.core.Any = new schema.core.AnythingSchema(null);
schema.core.EqSchema = function(v, __meta, __extmap) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23294, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23296 = k23294 instanceof cljs.core.Keyword ? k23294.fqn : null;
  switch(G__23296) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23294, else__4147__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.EqSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23293) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23297 = cljs.core.keyword_identical_QMARK_;
  var expr__23298 = k__4152__auto__;
  if (cljs.core.truth_(pred__23297.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__23298))) {
    return new schema.core.EqSchema(G__23293, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23293), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23293) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__23293, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core._EQ_.call(null, self__.v, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function __GT_EqSchema(v) {
  return new schema.core.EqSchema(v);
};
schema.core.map__GT_EqSchema = function map__GT_EqSchema(G__23295) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__23295), null, cljs.core.dissoc.call(null, G__23295, new cljs.core.Keyword(null, "v", "v", 21465059)));
};
schema.core.eq = function eq(v) {
  return new schema.core.EqSchema(v);
};
schema.core.EnumSchema = function(vs, __meta, __extmap) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23302, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23304 = k23302 instanceof cljs.core.Keyword ? k23302.fqn : null;
  switch(G__23304) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23302, else__4147__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23301) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23305 = cljs.core.keyword_identical_QMARK_;
  var expr__23306 = k__4152__auto__;
  if (cljs.core.truth_(pred__23305.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__23306))) {
    return new schema.core.EnumSchema(G__23301, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23301), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23301) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__23301, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.contains_QMARK_.call(null, self__.vs, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.vs);
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function __GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs);
};
schema.core.map__GT_EnumSchema = function map__GT_EnumSchema(G__23303) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__23303), null, cljs.core.dissoc.call(null, G__23303, new cljs.core.Keyword(null, "vs", "vs", -2022097090)));
};
schema.core.enum$ = function() {
  var enum$__delegate = function(vs) {
    return new schema.core.EnumSchema(cljs.core.set.call(null, vs));
  };
  var enum$ = function(var_args) {
    var vs = null;
    if (arguments.length > 0) {
      vs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return enum$__delegate.call(this, vs);
  };
  enum$.cljs$lang$maxFixedArity = 0;
  enum$.cljs$lang$applyTo = function(arglist__23309) {
    var vs = cljs.core.seq(arglist__23309);
    return enum$__delegate(vs);
  };
  enum$.cljs$core$IFn$_invoke$arity$variadic = enum$__delegate;
  return enum$;
}();
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23311, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23313 = k23311 instanceof cljs.core.Keyword ? k23311.fqn : null;
  switch(G__23313) {
    case "pred-name":
      return self__.pred_name;
      break;
    case "p?":
      return self__.p_QMARK_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23311, else__4147__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Predicate{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23310) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23314 = cljs.core.keyword_identical_QMARK_;
  var expr__23315 = k__4152__auto__;
  if (cljs.core.truth_(pred__23314.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__23315))) {
    return new schema.core.Predicate(G__23310, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23314.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__23315))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__23310, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23310), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23310) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__23310, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var temp__4124__auto__ = function() {
        try {
          if (cljs.core.truth_(self__.p_QMARK_.call(null, x))) {
            return null;
          } else {
            return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
          }
        } catch (e23317) {
          if (e23317 instanceof Object) {
            var e = e23317;
            return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
          } else {
            throw e23317;
          }
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var reason = temp__4124__auto__;
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(reason, temp__4124__auto__, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), self__.pred_name);
          };
        }(reason, temp__4124__auto__, this$__$1), null), reason));
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
      }
    }
  }
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function __GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name);
};
schema.core.map__GT_Predicate = function map__GT_Predicate(G__23312) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__23312), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__23312), null, cljs.core.dissoc.call(null, G__23312, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)));
};
schema.core.pred = function() {
  var pred = null;
  var pred__1 = function(p_QMARK_) {
    return pred.call(null, p_QMARK_, p_QMARK_);
  };
  var pred__2 = function(p_QMARK_, pred_name) {
    if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
    }
    return new schema.core.Predicate(p_QMARK_, pred_name);
  };
  pred = function(p_QMARK_, pred_name) {
    switch(arguments.length) {
      case 1:
        return pred__1.call(this, p_QMARK_);
      case 2:
        return pred__2.call(this, p_QMARK_, pred_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pred.cljs$core$IFn$_invoke$arity$1 = pred__1;
  pred.cljs$core$IFn$_invoke$arity$2 = pred__2;
  return pred;
}();
schema.core.protocol_name = function protocol_name(protocol) {
  return(new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23320, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23322 = k23320 instanceof cljs.core.Keyword ? k23320.fqn : null;
  switch(G__23322) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23320, else__4147__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Protocol{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23319) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23323 = cljs.core.keyword_identical_QMARK_;
  var expr__23324 = k__4152__auto__;
  if (cljs.core.truth_(pred__23323.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__23324))) {
    return new schema.core.Protocol(G__23319, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23319), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23319) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__23319, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, x))) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function __GT_Protocol(p) {
  return new schema.core.Protocol(p);
};
schema.core.map__GT_Protocol = function map__GT_Protocol(G__23321) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__23321), null, cljs.core.dissoc.call(null, G__23321, new cljs.core.Keyword(null, "p", "p", 151049309)));
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (!(typeof x === "string")) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
          };
        }(this$__$1), null), null));
      } else {
        if (cljs.core.not.call(null, cljs.core.re_find.call(null, this$__$1, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
            };
          }(this$__$1), null), null));
        } else {
          return x;
        }
      }
    };
  }(this$__$1);
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, '#"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1)).slice(1, -1)) + '"');
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_, new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null));
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_, new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null));
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_, new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null));
schema.core.Regex = RegExp;
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23328, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23330 = k23328 instanceof cljs.core.Keyword ? k23328.fqn : null;
  switch(G__23330) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23328, else__4147__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Maybe{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23327) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23331 = cljs.core.keyword_identical_QMARK_;
  var expr__23332 = k__4152__auto__;
  if (cljs.core.truth_(pred__23331.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__23332))) {
    return new schema.core.Maybe(G__23327, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23327), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23327) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__23327, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      if (x == null) {
        return null;
      } else {
        return sub_walker.call(null, x);
      }
    };
  }(sub_walker, this$__$1);
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function __GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.map__GT_Maybe = function map__GT_Maybe(G__23329) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__23329), null, cljs.core.dissoc.call(null, G__23329, new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.maybe = function maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23336, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23338 = k23336 instanceof cljs.core.Keyword ? k23336.fqn : null;
  switch(G__23338) {
    case "name":
      return self__.name;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23336, else__4147__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23335) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23339 = cljs.core.keyword_identical_QMARK_;
  var expr__23340 = k__4152__auto__;
  if (cljs.core.truth_(pred__23339.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__23340))) {
    return new schema.core.NamedSchema(G__23335, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23339.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__23340))) {
      return new schema.core.NamedSchema(self__.schema, G__23335, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23335), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23335) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__23335, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walker = schema.core.subschema_walker.call(null, self__.schema);
  return function(sub_walker, this$__$1) {
    return function(x) {
      return schema.utils.wrap_error_name.call(null, self__.name, sub_walker.call(null, x));
    };
  }(sub_walker, this$__$1);
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function __GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.map__GT_NamedSchema = function map__GT_NamedSchema(G__23337) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__23337), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__23337), null, cljs.core.dissoc.call(null, G__23337, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.named = function named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name);
};
schema.core.Either = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23344, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23346 = k23344 instanceof cljs.core.Keyword ? k23344.fqn : null;
  switch(G__23346) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23344, else__4147__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Either{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23343) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23347 = cljs.core.keyword_identical_QMARK_;
  var expr__23348 = k__4152__auto__;
  if (cljs.core.truth_(pred__23347.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__23348))) {
    return new schema.core.Either(G__23343, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23343), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23343) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__23343, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      var sub_walkers__$1 = cljs.core.seq.call(null, sub_walkers);
      while (true) {
        if (cljs.core.not.call(null, sub_walkers__$1)) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walkers__$1, sub_walkers, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "%", "%", -950237169, null)), new cljs.core.Symbol(null, "check", "check", -1428126865, null))), new cljs.core.Symbol(null, "some", "some", 
              -310548046, null));
            };
          }(sub_walkers__$1, sub_walkers, this$__$1), null), null));
        } else {
          var res = cljs.core.first.call(null, sub_walkers__$1).call(null, x);
          if (!schema.utils.error_QMARK_.call(null, res)) {
            return res;
          } else {
            var G__23351 = cljs.core.next.call(null, sub_walkers__$1);
            sub_walkers__$1 = G__23351;
            continue;
          }
        }
        break;
      }
    };
  }(sub_walkers, this$__$1);
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function __GT_Either(schemas) {
  return new schema.core.Either(schemas);
};
schema.core.map__GT_Either = function map__GT_Either(G__23345) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__23345), null, cljs.core.dissoc.call(null, G__23345, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.either = function() {
  var either__delegate = function(schemas) {
    return new schema.core.Either(schemas);
  };
  var either = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return either__delegate.call(this, schemas);
  };
  either.cljs$lang$maxFixedArity = 0;
  either.cljs$lang$applyTo = function(arglist__23352) {
    var schemas = cljs.core.seq(arglist__23352);
    return either__delegate(schemas);
  };
  either.cljs$core$IFn$_invoke$arity$variadic = either__delegate;
  return either;
}();
schema.core.Both = function(schemas, __meta, __extmap) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23354, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23356 = k23354 instanceof cljs.core.Keyword ? k23354.fqn : null;
  switch(G__23356) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23354, else__4147__auto__);
  }
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Both{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23353) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23357 = cljs.core.keyword_identical_QMARK_;
  var expr__23358 = k__4152__auto__;
  if (cljs.core.truth_(pred__23357.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__23358))) {
    return new schema.core.Both(G__23353, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23353), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23353) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__23353, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var sub_walkers = cljs.core.mapv.call(null, schema.core.subschema_walker, self__.schemas);
  return function(sub_walkers, this$__$1) {
    return function(x) {
      return cljs.core.reduce.call(null, function(sub_walkers, this$__$1) {
        return function(x__$1, sub_walker) {
          if (schema.utils.error_QMARK_.call(null, x__$1)) {
            return x__$1;
          } else {
            return sub_walker.call(null, x__$1);
          }
        };
      }(sub_walkers, this$__$1), x, sub_walkers);
    };
  }(sub_walkers, this$__$1);
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function __GT_Both(schemas) {
  return new schema.core.Both(schemas);
};
schema.core.map__GT_Both = function map__GT_Both(G__23355) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__23355), null, cljs.core.dissoc.call(null, G__23355, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)));
};
schema.core.both = function() {
  var both__delegate = function(schemas) {
    return new schema.core.Both(schemas);
  };
  var both = function(var_args) {
    var schemas = null;
    if (arguments.length > 0) {
      schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return both__delegate.call(this, schemas);
  };
  both.cljs$lang$maxFixedArity = 0;
  both.cljs$lang$applyTo = function(arglist__23361) {
    var schemas = cljs.core.seq(arglist__23361);
    return both__delegate(schemas);
  };
  both.cljs$core$IFn$_invoke$arity$variadic = both__delegate;
  return both;
}();
schema.core.ConditionalSchema = function(preds_and_schemas, __meta, __extmap) {
  this.preds_and_schemas = preds_and_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23363, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23365 = k23363 instanceof cljs.core.Keyword ? k23363.fqn : null;
  switch(G__23365) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23363, else__4147__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23362) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23366 = cljs.core.keyword_identical_QMARK_;
  var expr__23367 = k__4152__auto__;
  if (cljs.core.truth_(pred__23366.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__23367))) {
    return new schema.core.ConditionalSchema(G__23362, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23362), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23362) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__23362, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var preds_and_walkers = cljs.core.mapv.call(null, function(this$__$1) {
    return function(p__23369) {
      var vec__23370 = p__23369;
      var pred = cljs.core.nth.call(null, vec__23370, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__23370, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.subschema_walker.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas);
  return function(preds_and_walkers, this$__$1) {
    return function(x) {
      var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(preds_and_walkers, this$__$1) {
        return function(p__23371) {
          var vec__23372 = p__23371;
          var pred = cljs.core.nth.call(null, vec__23372, 0, null);
          return pred.call(null, x);
        };
      }(preds_and_walkers, this$__$1), preds_and_walkers));
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__23373 = temp__4124__auto__;
        var _ = cljs.core.nth.call(null, vec__23373, 0, null);
        var match = cljs.core.nth.call(null, vec__23373, 1, null);
        return match.call(null, x);
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(temp__4124__auto__, preds_and_walkers, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "matches-some-condition?", "matches-some-condition?", 2097370044, null));
          };
        }(temp__4124__auto__, preds_and_walkers, this$__$1), null), null));
      }
    };
  }(preds_and_walkers, this$__$1);
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__23374) {
      var vec__23375 = p__23374;
      var pred = cljs.core.nth.call(null, vec__23375, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__23375, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas));
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function __GT_ConditionalSchema(preds_and_schemas) {
  return new schema.core.ConditionalSchema(preds_and_schemas);
};
schema.core.map__GT_ConditionalSchema = function map__GT_ConditionalSchema(G__23364) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__23364), null, cljs.core.dissoc.call(null, G__23364, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)));
};
schema.core.conditional = function() {
  var conditional__delegate = function(preds_and_schemas) {
    if (cljs.core.seq.call(null, preds_and_schemas) && cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas))) {
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args; got %s", cljs.core.count.call(null, preds_and_schemas)));
    }
    return new schema.core.ConditionalSchema(function() {
      var iter__4283__auto__ = function iter__23385(s__23386) {
        return new cljs.core.LazySeq(null, function() {
          var s__23386__$1 = s__23386;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23386__$1);
            if (temp__4126__auto__) {
              var s__23386__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23386__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23386__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__23388 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__23387 = 0;
                  while (true) {
                    if (i__23387 < size__4282__auto__) {
                      var vec__23391 = cljs.core._nth.call(null, c__4281__auto__, i__23387);
                      var pred = cljs.core.nth.call(null, vec__23391, 0, null);
                      var schema__$1 = cljs.core.nth.call(null, vec__23391, 1, null);
                      cljs.core.chunk_append.call(null, b__23388, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                      var G__23393 = i__23387 + 1;
                      i__23387 = G__23393;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23388), iter__23385.call(null, cljs.core.chunk_rest.call(null, s__23386__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23388), null);
                }
              } else {
                var vec__23392 = cljs.core.first.call(null, s__23386__$2);
                var pred = cljs.core.nth.call(null, vec__23392, 0, null);
                var schema__$1 = cljs.core.nth.call(null, vec__23392, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), iter__23385.call(null, cljs.core.rest.call(null, s__23386__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
    }());
  };
  var conditional = function(var_args) {
    var preds_and_schemas = null;
    if (arguments.length > 0) {
      preds_and_schemas = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return conditional__delegate.call(this, preds_and_schemas);
  };
  conditional.cljs$lang$maxFixedArity = 0;
  conditional.cljs$lang$applyTo = function(arglist__23394) {
    var preds_and_schemas = cljs.core.seq(arglist__23394);
    return conditional__delegate(preds_and_schemas);
  };
  conditional.cljs$core$IFn$_invoke$arity$variadic = conditional__delegate;
  return conditional;
}();
schema.core.if$ = function if$(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core._PLUS_missing_PLUS_ = new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325);
schema.core.RequiredKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23396, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23398 = k23396 instanceof cljs.core.Keyword ? k23396.fqn : null;
  switch(G__23398) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23396, else__4147__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23395) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23399 = cljs.core.keyword_identical_QMARK_;
  var expr__23400 = k__4152__auto__;
  if (cljs.core.truth_(pred__23399.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__23400))) {
    return new schema.core.RequiredKey(G__23395, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23395), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23395) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__23395, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function __GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k);
};
schema.core.map__GT_RequiredKey = function map__GT_RequiredKey(G__23397) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__23397), null, cljs.core.dissoc.call(null, G__23397, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.required_key = function required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k);
  }
};
schema.core.required_key_QMARK_ = function required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23404, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23406 = k23404 instanceof cljs.core.Keyword ? k23404.fqn : null;
  switch(G__23406) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23404, else__4147__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23403) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23407 = cljs.core.keyword_identical_QMARK_;
  var expr__23408 = k__4152__auto__;
  if (cljs.core.truth_(pred__23407.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__23408))) {
    return new schema.core.OptionalKey(G__23403, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23403), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23403) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__23403, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function __GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.map__GT_OptionalKey = function map__GT_OptionalKey(G__23405) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__23405), null, cljs.core.dissoc.call(null, G__23405, new cljs.core.Keyword(null, "k", "k", -2146297393)));
};
schema.core.optional_key = function optional_key(k) {
  return new schema.core.OptionalKey(k);
};
schema.core.optional_key_QMARK_ = function optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (schema.core.optional_key_QMARK_.call(null, ks)) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function specific_key_QMARK_(ks) {
  return schema.core.required_key_QMARK_.call(null, ks) || schema.core.optional_key_QMARK_.call(null, ks);
};
schema.core.explain_kspec = function explain_kspec(kspec) {
  if (schema.core.specific_key_QMARK_.call(null, kspec)) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), schema.core.required_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : schema.core.optional_key_QMARK_.call(null, kspec) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.MapEntry = function(kspec, val_schema, __meta, __extmap) {
  this.kspec = kspec;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23412, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23414 = k23412 instanceof cljs.core.Keyword ? k23412.fqn : null;
  switch(G__23414) {
    case "val-schema":
      return self__.val_schema;
      break;
    case "kspec":
      return self__.kspec;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23412, else__4147__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.MapEntry{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23411) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23415 = cljs.core.keyword_identical_QMARK_;
  var expr__23416 = k__4152__auto__;
  if (cljs.core.truth_(pred__23415.call(null, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), expr__23416))) {
    return new schema.core.MapEntry(G__23411, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23415.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__23416))) {
      return new schema.core.MapEntry(self__.kspec, G__23411, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.kspec, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23411), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), self__.kspec], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23411) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.MapEntry(self__.kspec, self__.val_schema, G__23411, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var val_walker = schema.core.subschema_walker.call(null, self__.val_schema);
  if (schema.core.specific_key_QMARK_.call(null, self__.kspec)) {
    var optional_QMARK_ = schema.core.optional_key_QMARK_.call(null, self__.kspec);
    var k = schema.core.explicit_schema_key.call(null, self__.kspec);
    return function(optional_QMARK_, k, val_walker, this$__$1) {
      return function(x) {
        if (schema.core._PLUS_missing_PLUS_ === x) {
          if (optional_QMARK_) {
            return null;
          } else {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null));
          }
        } else {
          if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
            return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(optional_QMARK_, k, val_walker, this$__$1) {
              return function() {
                return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
              };
            }(optional_QMARK_, k, val_walker, this$__$1), null), null));
          } else {
            var vec__23418 = x;
            var xk = cljs.core.nth.call(null, vec__23418, 0, null);
            var xv = cljs.core.nth.call(null, vec__23418, 1, null);
            if (cljs.core._EQ_.call(null, xk, k)) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "xk", "xk", 741114825, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)))));
            }
            var vres = val_walker.call(null, xv);
            var temp__4124__auto__ = schema.utils.error_val.call(null, vres);
            if (cljs.core.truth_(temp__4124__auto__)) {
              var ve = temp__4124__auto__;
              return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, ve], null));
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xk, vres], null);
            }
          }
        }
      };
    }(optional_QMARK_, k, val_walker, this$__$1);
  } else {
    var key_walker = schema.core.subschema_walker.call(null, self__.kspec);
    return function(key_walker, val_walker, this$__$1) {
      return function(x) {
        if (!cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, x))) {
          return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(key_walker, val_walker, this$__$1) {
            return function() {
              return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "count", "count", -514511684, null))), 2), cljs.core._EQ_);
            };
          }(key_walker, val_walker, this$__$1), null), null));
        } else {
          var out_k = key_walker.call(null, cljs.core.key.call(null, x));
          var out_ke = schema.utils.error_val.call(null, out_k);
          var out_v = val_walker.call(null, cljs.core.val.call(null, x));
          var out_ve = schema.utils.error_val.call(null, out_v);
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = out_ke;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return out_ve;
            }
          }())) {
            return schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              var or__3558__auto__ = out_ke;
              if (cljs.core.truth_(or__3558__auto__)) {
                return or__3558__auto__;
              } else {
                return cljs.core.key.call(null, x);
              }
            }(), function() {
              var or__3558__auto__ = out_ve;
              if (cljs.core.truth_(or__3558__auto__)) {
                return or__3558__auto__;
              } else {
                return new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null);
              }
            }()], null));
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out_k, out_v], null);
          }
        }
      };
    }(key_walker, val_walker, this$__$1);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain_kspec.call(null, self__.kspec)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function __GT_MapEntry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.map__GT_MapEntry = function map__GT_MapEntry(G__23413) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "kspec", "kspec", -1151232248)).cljs$core$IFn$_invoke$arity$1(G__23413), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__23413), null, cljs.core.dissoc.call(null, G__23413, new cljs.core.Keyword(null, "kspec", "kspec", -1151232248), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)));
};
schema.core.map_entry = function map_entry(kspec, val_schema) {
  return new schema.core.MapEntry(kspec, val_schema);
};
schema.core.find_extra_keys_schema = function find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.map_walker = function map_walker(map_schema) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, map_schema);
  var extra_walker = cljs.core.truth_(extra_keys_schema) ? schema.core.subschema_walker.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, map_schema, extra_keys_schema))) : null;
  var explicit_schema = cljs.core.dissoc.call(null, map_schema, extra_keys_schema);
  var explicit_walkers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4283__auto__ = function(extra_keys_schema, extra_walker, explicit_schema) {
      return function iter__23432(s__23433) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema, extra_walker, explicit_schema) {
          return function() {
            var s__23433__$1 = s__23433;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__23433__$1);
              if (temp__4126__auto__) {
                var s__23433__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23433__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23433__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__23435 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__23434 = 0;
                    while (true) {
                      if (i__23434 < size__4282__auto__) {
                        var vec__23438 = cljs.core._nth.call(null, c__4281__auto__, i__23434);
                        var k = cljs.core.nth.call(null, vec__23438, 0, null);
                        var v = cljs.core.nth.call(null, vec__23438, 1, null);
                        cljs.core.chunk_append.call(null, b__23435, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null));
                        var G__23443 = i__23434 + 1;
                        i__23434 = G__23443;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23435), iter__23432.call(null, cljs.core.chunk_rest.call(null, s__23433__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23435), null);
                  }
                } else {
                  var vec__23439 = cljs.core.first.call(null, s__23433__$2);
                  var k = cljs.core.nth.call(null, vec__23439, 0, null);
                  var v = cljs.core.nth.call(null, vec__23439, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.subschema_walker.call(null, schema.core.map_entry.call(null, k, v))], null), iter__23432.call(null, cljs.core.rest.call(null, s__23433__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema, extra_walker, explicit_schema), null, null);
      };
    }(extra_keys_schema, extra_walker, explicit_schema);
    return iter__4283__auto__.call(null, explicit_schema);
  }());
  var err_conj = schema.utils.result_builder.call(null, cljs.core.constantly.call(null, cljs.core.PersistentArrayMap.EMPTY));
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, explicit_schema), cljs.core.count.call(null, explicit_walkers))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
      return function(p1__23420_SHARP_) {
        return cljs.core.count.call(null, p1__23420_SHARP_) > 1;
      };
    }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, explicit_schema))))))));
  }
  return function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
    return function(x) {
      if (!cljs.core.map_QMARK_.call(null, x)) {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, map_schema, x, new cljs.core.Delay(function(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
          };
        }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), null), null));
      } else {
        var x__$1 = x;
        var explicit_walkers__$1 = cljs.core.seq.call(null, explicit_walkers);
        var out = cljs.core.PersistentArrayMap.EMPTY;
        while (true) {
          if (cljs.core.not.call(null, explicit_walkers__$1)) {
            return cljs.core.reduce.call(null, cljs.core.truth_(extra_walker) ? function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, e) {
                return err_conj.call(null, out__$1, extra_walker.call(null, e));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) : function(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj) {
              return function(out__$1, p__23440) {
                var vec__23441 = p__23440;
                var k = cljs.core.nth.call(null, vec__23441, 0, null);
                var _ = cljs.core.nth.call(null, vec__23441, 1, null);
                return err_conj.call(null, out__$1, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null)));
              };
            }(x__$1, explicit_walkers__$1, out, extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj), out, x__$1);
          } else {
            var vec__23442 = cljs.core.first.call(null, explicit_walkers__$1);
            var wk = cljs.core.nth.call(null, vec__23442, 0, null);
            var wv = cljs.core.nth.call(null, vec__23442, 1, null);
            var G__23444 = cljs.core.dissoc.call(null, x__$1, wk);
            var G__23445 = cljs.core.next.call(null, explicit_walkers__$1);
            var G__23446 = err_conj.call(null, out, wv.call(null, function() {
              var or__3558__auto__ = cljs.core.find.call(null, x__$1, wk);
              if (cljs.core.truth_(or__3558__auto__)) {
                return or__3558__auto__;
              } else {
                return schema.core._PLUS_missing_PLUS_;
              }
            }()));
            x__$1 = G__23444;
            explicit_walkers__$1 = G__23445;
            out = G__23446;
            continue;
          }
          break;
        }
      }
    };
  }(extra_keys_schema, extra_walker, explicit_schema, explicit_walkers, err_conj);
};
schema.core.map_explain = function map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4283__auto__ = function iter__23455(s__23456) {
      return new cljs.core.LazySeq(null, function() {
        var s__23456__$1 = s__23456;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__23456__$1);
          if (temp__4126__auto__) {
            var s__23456__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__23456__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23456__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__23458 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__23457 = 0;
                while (true) {
                  if (i__23457 < size__4282__auto__) {
                    var vec__23461 = cljs.core._nth.call(null, c__4281__auto__, i__23457);
                    var k = cljs.core.nth.call(null, vec__23461, 0, null);
                    var v = cljs.core.nth.call(null, vec__23461, 1, null);
                    cljs.core.chunk_append.call(null, b__23458, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))));
                    var G__23463 = i__23457 + 1;
                    i__23457 = G__23463;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23458), iter__23455.call(null, cljs.core.chunk_rest.call(null, s__23456__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23458), null);
              }
            } else {
              var vec__23462 = cljs.core.first.call(null, s__23456__$2);
              var k = cljs.core.nth.call(null, vec__23462, 0, null);
              var v = cljs.core.nth.call(null, vec__23462, 1, null);
              return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.next.call(null, schema.core.explain.call(null, schema.core.map_entry.call(null, k, v)))), iter__23455.call(null, cljs.core.rest.call(null, s__23456__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, this$);
  }());
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_walker.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  var sub_walker = schema.core.subschema_walker.call(null, cljs.core.first.call(null, this$__$1));
  return function(sub_walker, this$__$1) {
    return function(x) {
      var or__3558__auto__ = cljs.core.set_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(sub_walker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
        };
      }(sub_walker, this$__$1), null), null));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        var vec__23464 = cljs.core.juxt.call(null, cljs.core.remove, cljs.core.keep).call(null, schema.utils.error_val, cljs.core.map.call(null, sub_walker, x));
        var good = cljs.core.nth.call(null, vec__23464, 0, null);
        var bad = cljs.core.nth.call(null, vec__23464, 1, null);
        if (cljs.core.seq.call(null, bad)) {
          return schema.utils.error.call(null, cljs.core.set.call(null, bad));
        } else {
          return cljs.core.set.call(null, good);
        }
      }
    };
  }(sub_walker, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23466, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23468 = k23466 instanceof cljs.core.Keyword ? k23466.fqn : null;
  switch(G__23468) {
    case "name":
      return self__.name;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23466, else__4147__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.One{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23465) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23469 = cljs.core.keyword_identical_QMARK_;
  var expr__23470 = k__4152__auto__;
  if (cljs.core.truth_(pred__23469.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__23470))) {
    return new schema.core.One(G__23465, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23469.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__23470))) {
      return new schema.core.One(self__.schema, G__23465, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__23469.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__23470))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__23465, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23465), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23465) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__23465, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/One");
};
schema.core.__GT_One = function __GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name);
};
schema.core.map__GT_One = function map__GT_One(G__23467) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__23467), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__23467), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__23467), null, cljs.core.dissoc.call(null, G__23467, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)));
};
schema.core.one = function one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name);
};
schema.core.optional = function optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name);
};
schema.core.parse_sequence_schema = function parse_sequence_schema(s) {
  var vec__23478 = cljs.core.split_with.call(null, function(p1__23473_SHARP_) {
    return p1__23473_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__23473_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__23478, 0, null);
  var more = cljs.core.nth.call(null, vec__23478, 1, null);
  var vec__23479 = cljs.core.split_with.call(null, function(vec__23478, required, more) {
    return function(p1__23474_SHARP_) {
      var and__3546__auto__ = p1__23474_SHARP_ instanceof schema.core.One;
      if (and__3546__auto__) {
        return(new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__23474_SHARP_);
      } else {
        return and__3546__auto__;
      }
    };
  }(vec__23478, required, more), more);
  var optional = cljs.core.nth.call(null, vec__23479, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__23479, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__23478, required, more, vec__23479, optional, more__$1) {
    return function(p1__23475_SHARP_) {
      return!(p1__23475_SHARP_ instanceof schema.core.One);
    };
  }(vec__23478, required, more, vec__23479, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__23480 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__23480, 0, null);
  var multi = cljs.core.nth.call(null, vec__23480, 1, null);
  var single_walkers = cljs.core.vec.call(null, function() {
    var iter__4283__auto__ = function(vec__23480, singles, multi, this$__$1) {
      return function iter__23481(s__23482) {
        return new cljs.core.LazySeq(null, function(vec__23480, singles, multi, this$__$1) {
          return function() {
            var s__23482__$1 = s__23482;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__23482__$1);
              if (temp__4126__auto__) {
                var s__23482__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23482__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23482__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__23484 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__23483 = 0;
                    while (true) {
                      if (i__23483 < size__4282__auto__) {
                        var s = cljs.core._nth.call(null, c__4281__auto__, i__23483);
                        cljs.core.chunk_append.call(null, b__23484, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null));
                        var G__23499 = i__23483 + 1;
                        i__23483 = G__23499;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23484), iter__23481.call(null, cljs.core.chunk_rest.call(null, s__23482__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23484), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__23482__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, schema.core.subschema_walker.call(null, s.schema)], null), iter__23481.call(null, cljs.core.rest.call(null, s__23482__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__23480, singles, multi, this$__$1), null, null);
      };
    }(vec__23480, singles, multi, this$__$1);
    return iter__4283__auto__.call(null, singles);
  }());
  var multi_walker = cljs.core.truth_(multi) ? schema.core.subschema_walker.call(null, multi) : null;
  var err_conj = schema.utils.result_builder.call(null, function(vec__23480, singles, multi, single_walkers, multi_walker, this$__$1) {
    return function(m) {
      return cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, m), null));
    };
  }(vec__23480, singles, multi, single_walkers, multi_walker, this$__$1));
  return function(vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
    return function(x) {
      var or__3558__auto__ = x == null || cljs.core.sequential_QMARK_.call(null, x) ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
        };
      }(vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        var single_walkers__$1 = single_walkers;
        var x__$1 = x;
        var out = cljs.core.PersistentVector.EMPTY;
        while (true) {
          var temp__4124__auto__ = cljs.core.first.call(null, single_walkers__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var vec__23485 = temp__4124__auto__;
            var first_single = cljs.core.nth.call(null, vec__23485, 0, null);
            var single_walker = cljs.core.nth.call(null, vec__23485, 1, null);
            if (cljs.core.empty_QMARK_.call(null, x__$1)) {
              if (cljs.core.truth_(first_single.optional_QMARK_)) {
                return out;
              } else {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first, single_walkers__$1)), null, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "present?", "present?", -1810613791, null), function() {
                      var iter__4283__auto__ = function(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                        return function iter__23486(s__23487) {
                          return new cljs.core.LazySeq(null, function(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                            return function() {
                              var s__23487__$1 = s__23487;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq.call(null, s__23487__$1);
                                if (temp__4126__auto__) {
                                  var s__23487__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__23487__$2)) {
                                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23487__$2);
                                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                    var b__23489 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                    if (function() {
                                      var i__23488 = 0;
                                      while (true) {
                                        if (i__23488 < size__4282__auto__) {
                                          var vec__23492 = cljs.core._nth.call(null, c__4281__auto__, i__23488);
                                          var single = cljs.core.nth.call(null, vec__23492, 0, null);
                                          if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                            cljs.core.chunk_append.call(null, b__23489, single.name);
                                            var G__23500 = i__23488 + 1;
                                            i__23488 = G__23500;
                                            continue;
                                          } else {
                                            return null;
                                          }
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23489), iter__23486.call(null, cljs.core.chunk_rest.call(null, s__23487__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23489), null);
                                    }
                                  } else {
                                    var vec__23493 = cljs.core.first.call(null, s__23487__$2);
                                    var single = cljs.core.nth.call(null, vec__23493, 0, null);
                                    if (cljs.core.not.call(null, single.optional_QMARK_)) {
                                      return cljs.core.cons.call(null, single.name, iter__23486.call(null, cljs.core.rest.call(null, s__23487__$2)));
                                    } else {
                                      return null;
                                    }
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null, null);
                        };
                      }(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
                      return iter__4283__auto__.call(null, single_walkers__$1);
                    }());
                  };
                }(single_walkers__$1, x__$1, out, vec__23485, first_single, single_walker, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              }
            } else {
              var G__23501 = cljs.core.next.call(null, single_walkers__$1);
              var G__23502 = cljs.core.rest.call(null, x__$1);
              var G__23503 = err_conj.call(null, out, schema.utils.wrap_error_name.call(null, first_single.name, single_walker.call(null, cljs.core.first.call(null, x__$1))));
              single_walkers__$1 = G__23501;
              x__$1 = G__23502;
              out = G__23503;
              continue;
            }
          } else {
            if (cljs.core.truth_(multi)) {
              return cljs.core.reduce.call(null, err_conj, out, cljs.core.map.call(null, multi_walker, x__$1));
            } else {
              if (cljs.core.seq.call(null, x__$1)) {
                return err_conj.call(null, out, schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, null, x__$1, new cljs.core.Delay(function(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1) {
                  return function() {
                    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, x__$1)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
                  };
                }(single_walkers__$1, x__$1, out, temp__4124__auto__, or__3558__auto__, vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1), null), null)));
              } else {
                return out;
              }
            }
          }
          break;
        }
      }
    };
  }(vec__23480, singles, multi, single_walkers, multi_walker, err_conj, this$__$1);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__23494 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__23494, 0, null);
  var multi = cljs.core.nth.call(null, vec__23494, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__4283__auto__ = function(vec__23494, singles, multi, this$__$1) {
      return function iter__23495(s__23496) {
        return new cljs.core.LazySeq(null, function(vec__23494, singles, multi, this$__$1) {
          return function() {
            var s__23496__$1 = s__23496;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__23496__$1);
              if (temp__4126__auto__) {
                var s__23496__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23496__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23496__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__23498 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__23497 = 0;
                    while (true) {
                      if (i__23497 < size__4282__auto__) {
                        var s = cljs.core._nth.call(null, c__4281__auto__, i__23497);
                        cljs.core.chunk_append.call(null, b__23498, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__23504 = i__23497 + 1;
                        i__23497 = G__23504;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23498), iter__23495.call(null, cljs.core.chunk_rest.call(null, s__23496__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23498), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__23496__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), iter__23495.call(null, cljs.core.rest.call(null, s__23496__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__23494, singles, multi, this$__$1), null, null);
      };
    }(vec__23494, singles, multi, this$__$1);
    return iter__4283__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23506, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23508 = k23506 instanceof cljs.core.Keyword ? k23506.fqn : null;
  switch(G__23508) {
    case "schema":
      return self__.schema;
      break;
    case "klass":
      return self__.klass;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23506, else__4147__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.Record{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23505) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23509 = cljs.core.keyword_identical_QMARK_;
  var expr__23510 = k__4152__auto__;
  if (cljs.core.truth_(pred__23509.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__23510))) {
    return new schema.core.Record(G__23505, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23509.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__23510))) {
      return new schema.core.Record(self__.klass, G__23505, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23505), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23505) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__23505, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var map_checker = schema.core.subschema_walker.call(null, self__.schema);
  var pred_checker = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var evf = temp__4126__auto__;
      return schema.core.subschema_walker.call(null, schema.core.pred.call(null, evf));
    } else {
      return null;
    }
  }();
  return function(map_checker, pred_checker, this$__$1) {
    return function(r) {
      var or__3558__auto__ = r instanceof self__.klass ? null : schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, r, new cljs.core.Delay(function(map_checker, pred_checker, this$__$1) {
        return function() {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, r)), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(map_checker, pred_checker, this$__$1), null), null));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        var res = map_checker.call(null, r);
        if (schema.utils.error_QMARK_.call(null, res)) {
          return res;
        } else {
          var pred_res = cljs.core.truth_(pred_checker) ? pred_checker.call(null, r) : null;
          if (schema.utils.error_QMARK_.call(null, pred_res)) {
            return pred_res;
          } else {
            return cljs.core.merge.call(null, r, res);
          }
        }
      }
    };
  }(map_checker, pred_checker, this$__$1);
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function __GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1);
};
schema.core.map__GT_Record = function map__GT_Record(G__23507) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__23507), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__23507), null, cljs.core.dissoc.call(null, G__23507, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)));
};
schema.core.record = function record(klass, schema__$1) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return new schema.core.Record(klass, schema__$1);
};
schema.core.explain_input_schema = function explain_input_schema(input_schema) {
  var vec__23516 = cljs.core.split_with.call(null, function(p1__23513_SHARP_) {
    return p1__23513_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__23516, 0, null);
  var more = cljs.core.nth.call(null, vec__23516, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__23516, required, more) {
    return function(p1__23514_SHARP_) {
      return schema.core.explain.call(null, p1__23514_SHARP_.schema);
    };
  }(vec__23516, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k23518, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__23520 = k23518 instanceof cljs.core.Keyword ? k23518.fqn : null;
  switch(G__23520) {
    case "input-schemas":
      return self__.input_schemas;
      break;
    case "output-schema":
      return self__.output_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23518, else__4147__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#schema.core.FnSchema{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__23517) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__23521 = cljs.core.keyword_identical_QMARK_;
  var expr__23522 = k__4152__auto__;
  if (cljs.core.truth_(pred__23521.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__23522))) {
    return new schema.core.FnSchema(G__23517, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23521.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__23522))) {
      return new schema.core.FnSchema(self__.output_schema, G__23517, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__23517), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__23517) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__23517, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$walker$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      if (cljs.core.fn_QMARK_.call(null, x)) {
        return x;
      } else {
        return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null));
          };
        }(this$__$1), null), null));
      }
    };
  }(this$__$1);
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function __GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas);
};
schema.core.map__GT_FnSchema = function map__GT_FnSchema(G__23519) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__23519), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__23519), null, cljs.core.dissoc.call(null, G__23519, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)));
};
schema.core.arity = function arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas));
};
schema.core.fn_validation_QMARK_ = function fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__3558__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var m__10439__auto__ = cljs.core.meta.call(null, f);
    var k__10440__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4124__auto__ = cljs.core.find.call(null, m__10439__auto__, k__10440__auto__);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pair__10441__auto__ = temp__4124__auto__;
      return cljs.core.val.call(null, pair__10441__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__10440__auto__, m__10439__auto__));
    }
  }
};
schema.core.schema_with_name = function schema_with_name(schema__$1, name) {
  return cljs.core.with_meta.call(null, schema__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), name], null));
};
schema.core.schema_name = function schema_name(schema__$1) {
  return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.utils");
goog.require("schema.core");
goog.require("schema.core");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__10547__10548__auto__) {
  var G__22953 = p1__10547__10548__auto__;
  if (G__22953) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__22953.schema$core$Schema$;
      }
    }())) {
      return true;
    } else {
      if (!G__22953.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__22953);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, G__22953);
  }
}], null));
plumbing.fnk.schema.InputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.either.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__22954_SHARP_) {
    return cljs.core.val.call(null, p1__22954_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__22956 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__22956, 0, null);
  var v = cljs.core.nth.call(null, vec__22956, 1, null);
  var p = vec__22956;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return schema.core.both.call(null, s1, s2);
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___22962 = schema.utils.use_fn_validation;
var output_schema22957_22963 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema22958_22964 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "k", "k", -505765866, null))], null);
var input_checker22959_22965 = schema.core.checker.call(null, input_schema22958_22964);
var output_checker22960_22966 = schema.core.checker.call(null, output_schema22957_22963);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___22962, output_schema22957_22963, input_schema22958_22964, input_checker22959_22965, output_checker22960_22966) {
  return function unwrap_schema_form_key(G__22961) {
    var validate__10517__auto__ = ufv___22962.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___22967 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22961], null);
      var temp__4126__auto___22968 = input_checker22959_22965.call(null, args__10518__auto___22967);
      if (cljs.core.truth_(temp__4126__auto___22968)) {
        var error__10519__auto___22969 = temp__4126__auto___22968;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__10519__auto___22969)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22958_22964, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___22967, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___22969], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var k = G__22961;
      while (true) {
        if (schema.core.specific_key_QMARK_.call(null, k)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            return null;
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___22970 = output_checker22960_22966.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___22970)) {
        var error__10519__auto___22971 = temp__4126__auto___22970;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), cljs.core.pr_str.call(null, error__10519__auto___22971)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22957_22963, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___22971], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___22962, output_schema22957_22963, input_schema22958_22964, input_checker22959_22965, output_checker22960_22966);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema22957_22963, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22958_22964], null)));
var ufv___22977 = schema.utils.use_fn_validation;
var output_schema22972_22978 = schema.core.Any;
var input_schema22973_22979 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker22974_22980 = schema.core.checker.call(null, input_schema22973_22979);
var output_checker22975_22981 = schema.core.checker.call(null, output_schema22972_22978);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___22977, output_schema22972_22978, input_schema22973_22979, input_checker22974_22980, output_checker22975_22981) {
  return function explicit_schema_key_map(G__22976) {
    var validate__10517__auto__ = ufv___22977.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___22982 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22976], null);
      var temp__4126__auto___22983 = input_checker22974_22980.call(null, args__10518__auto___22982);
      if (cljs.core.truth_(temp__4126__auto___22983)) {
        var error__10519__auto___22984 = temp__4126__auto___22983;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__10519__auto___22984)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22973_22979, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___22982, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___22984], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var s = G__22976;
      while (true) {
        new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___22985 = output_checker22975_22981.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___22985)) {
        var error__10519__auto___22986 = temp__4126__auto___22985;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), cljs.core.pr_str.call(null, error__10519__auto___22986)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22972_22978, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___22986], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___22977, output_schema22972_22978, input_schema22973_22979, input_checker22974_22980, output_checker22975_22981);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema22972_22978, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22973_22979], null)));
var ufv___22992 = schema.utils.use_fn_validation;
var output_schema22987_22993 = schema.core.Any;
var input_schema22988_22994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), new cljs.core.Symbol(null, "s", "s", -948495851, null))], null);
var input_checker22989_22995 = schema.core.checker.call(null, input_schema22988_22994);
var output_checker22990_22996 = schema.core.checker.call(null, output_schema22987_22993);
plumbing.fnk.schema.split_schema_keys = function(ufv___22992, output_schema22987_22993, input_schema22988_22994, input_checker22989_22995, output_checker22990_22996) {
  return function split_schema_keys(G__22991) {
    var validate__10517__auto__ = ufv___22992.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___22997 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__22991], null);
      var temp__4126__auto___22998 = input_checker22989_22995.call(null, args__10518__auto___22997);
      if (cljs.core.truth_(temp__4126__auto___22998)) {
        var error__10519__auto___22999 = temp__4126__auto___22998;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__10519__auto___22999)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema22988_22994, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___22997, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___22999], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var s = G__22991;
      while (true) {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", "optional", -600484260, 
        null))], null);
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___23000 = output_checker22990_22996.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23000)) {
        var error__10519__auto___23001 = temp__4126__auto___23000;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), cljs.core.pr_str.call(null, error__10519__auto___23001)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema22987_22993, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23001], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___22992, output_schema22987_22993, input_schema22988_22994, input_checker22989_22995, output_checker22990_22996);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema22987_22993, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema22988_22994], null)));
plumbing.fnk.schema.merge_on_with = function() {
  var merge_on_with__delegate = function(key_project, key_combine, val_combine, maps) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__23005) {
      var vec__23006 = p__23005;
      var k = cljs.core.nth.call(null, vec__23006, 0, null);
      var v = cljs.core.nth.call(null, vec__23006, 1, null);
      var pk = key_project.call(null, k);
      var temp__4124__auto__ = cljs.core.get.call(null, m, pk);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__23007 = temp__4124__auto__;
        var ok = cljs.core.nth.call(null, vec__23007, 0, null);
        var ov = cljs.core.nth.call(null, vec__23007, 1, null);
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
      } else {
        return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
  };
  var merge_on_with = function(key_project, key_combine, val_combine, var_args) {
    var maps = null;
    if (arguments.length > 3) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return merge_on_with__delegate.call(this, key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$lang$maxFixedArity = 3;
  merge_on_with.cljs$lang$applyTo = function(arglist__23008) {
    var key_project = cljs.core.first(arglist__23008);
    arglist__23008 = cljs.core.next(arglist__23008);
    var key_combine = cljs.core.first(arglist__23008);
    arglist__23008 = cljs.core.next(arglist__23008);
    var val_combine = cljs.core.first(arglist__23008);
    var maps = cljs.core.rest(arglist__23008);
    return merge_on_with__delegate(key_project, key_combine, val_combine, maps);
  };
  merge_on_with.cljs$core$IFn$_invoke$arity$variadic = merge_on_with__delegate;
  return merge_on_with;
}();
var ufv___23016 = schema.utils.use_fn_validation;
var output_schema23010_23017 = plumbing.fnk.schema.InputSchema;
var input_schema23011_23018 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i1", "i1", -572470430, null)), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "i2", "i2", 850408895, null))], null);
var input_checker23012_23019 = schema.core.checker.call(null, input_schema23011_23018);
var output_checker23013_23020 = schema.core.checker.call(null, output_schema23010_23017);
plumbing.fnk.schema.union_input_schemata = function(ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020) {
  return function union_input_schemata(G__23014, G__23015) {
    var validate__10517__auto__ = ufv___23016.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___23021 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__23014, G__23015], null);
      var temp__4126__auto___23022 = input_checker23012_23019.call(null, args__10518__auto___23021);
      if (cljs.core.truth_(temp__4126__auto___23022)) {
        var error__10519__auto___23023 = temp__4126__auto___23022;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__10519__auto___23023)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema23011_23018, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___23021, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23023], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var i1 = G__23014;
      var i2 = G__23015;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020) {
          return function(p1__23009_SHARP_) {
            if (schema.core.specific_key_QMARK_.call(null, p1__23009_SHARP_)) {
              return schema.core.explicit_schema_key.call(null, p1__23009_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020), function(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020) {
          return function(k1, k2) {
            if (schema.core.required_key_QMARK_.call(null, k1)) {
              return k1;
            } else {
              if (schema.core.required_key_QMARK_.call(null, k2)) {
                return k2;
              } else {
                if (schema.core.optional_key_QMARK_.call(null, k1)) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "k1", "k1", -1701777341, null), new cljs.core.Symbol(null, "k2", "k2", -1225133949, null)))));
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020), function(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020) {
          return function(s1, s2) {
            if (plumbing.fnk.schema.map_schema_QMARK_.call(null, s1) && plumbing.fnk.schema.map_schema_QMARK_.call(null, s2)) {
              return union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__10517__auto__, ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___23024 = output_checker23013_23020.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23024)) {
        var error__10519__auto___23025 = temp__4126__auto___23024;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), cljs.core.pr_str.call(null, error__10519__auto___23025)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema23010_23017, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23025], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___23016, output_schema23010_23017, input_schema23011_23018, input_checker23012_23019, output_checker23013_23020);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema23010_23017, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema23011_23018], null)));
var ufv___23031 = schema.utils.use_fn_validation;
var output_schema23026_23032 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema23027_23033 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null))], null);
var input_checker23028_23034 = schema.core.checker.call(null, input_schema23027_23033);
var output_checker23029_23035 = schema.core.checker.call(null, output_schema23026_23032);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___23031, output_schema23026_23032, input_schema23027_23033, input_checker23028_23034, output_checker23029_23035) {
  return function required_toplevel_keys(G__23030) {
    var validate__10517__auto__ = ufv___23031.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___23036 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__23030], null);
      var temp__4126__auto___23037 = input_checker23028_23034.call(null, args__10518__auto___23036);
      if (cljs.core.truth_(temp__4126__auto___23037)) {
        var error__10519__auto___23038 = temp__4126__auto___23037;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__10519__auto___23038)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema23027_23033, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___23036, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23038], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var input_schema = G__23030;
      while (true) {
        return cljs.core.keep.call(null, function(validate__10517__auto__, ufv___23031, output_schema23026_23032, input_schema23027_23033, input_checker23028_23034, output_checker23029_23035) {
          return function(k) {
            if (schema.core.required_key_QMARK_.call(null, k)) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__10517__auto__, ufv___23031, output_schema23026_23032, input_schema23027_23033, input_checker23028_23034, output_checker23029_23035), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___23039 = output_checker23029_23035.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23039)) {
        var error__10519__auto___23040 = temp__4126__auto___23039;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), cljs.core.pr_str.call(null, error__10519__auto___23040)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema23026_23032, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23040], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___23031, output_schema23026_23032, input_schema23027_23033, input_checker23028_23034, output_checker23029_23035);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema23026_23032, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema23027_23033], null)));
plumbing.fnk.schema.guess_expr_output_schema = function guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4283__auto__ = function iter__23049(s__23050) {
        return new cljs.core.LazySeq(null, function() {
          var s__23050__$1 = s__23050;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23050__$1);
            if (temp__4126__auto__) {
              var s__23050__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23050__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23050__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__23052 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__23051 = 0;
                  while (true) {
                    if (i__23051 < size__4282__auto__) {
                      var vec__23055 = cljs.core._nth.call(null, c__4281__auto__, i__23051);
                      var k = cljs.core.nth.call(null, vec__23055, 0, null);
                      var v = cljs.core.nth.call(null, vec__23055, 1, null);
                      cljs.core.chunk_append.call(null, b__23052, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null));
                      var G__23057 = i__23051 + 1;
                      i__23051 = G__23057;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23052), iter__23049.call(null, cljs.core.chunk_rest.call(null, s__23050__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23052), null);
                }
              } else {
                var vec__23056 = cljs.core.first.call(null, s__23050__$2);
                var k = cljs.core.nth.call(null, vec__23056, 0, null);
                var v = cljs.core.nth.call(null, vec__23056, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, guess_expr_output_schema.call(null, v)], null), iter__23049.call(null, cljs.core.rest.call(null, s__23050__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function schema_diff(input_schema, output_schema) {
  if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema)) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (!plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema)) {
      return schema.utils.error.call(null, schema.utils.__GT_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4283__auto__ = function iter__23066(s__23067) {
          return new cljs.core.LazySeq(null, function() {
            var s__23067__$1 = s__23067;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__23067__$1);
              if (temp__4126__auto__) {
                var s__23067__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23067__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23067__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__23069 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__23068 = 0;
                    while (true) {
                      if (i__23068 < size__4282__auto__) {
                        var vec__23072 = cljs.core._nth.call(null, c__4281__auto__, i__23068);
                        var k = cljs.core.nth.call(null, vec__23072, 0, null);
                        var v = cljs.core.nth.call(null, vec__23072, 1, null);
                        if (schema.core.specific_key_QMARK_.call(null, k)) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (required_QMARK_ || present_QMARK_) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__23069, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__23074 = i__23068 + 1;
                              i__23068 = G__23074;
                              continue;
                            } else {
                              var G__23075 = i__23068 + 1;
                              i__23068 = G__23075;
                              continue;
                            }
                          } else {
                            var G__23076 = i__23068 + 1;
                            i__23068 = G__23076;
                            continue;
                          }
                        } else {
                          var G__23077 = i__23068 + 1;
                          i__23068 = G__23077;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23069), iter__23066.call(null, cljs.core.chunk_rest.call(null, s__23067__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23069), null);
                  }
                } else {
                  var vec__23073 = cljs.core.first.call(null, s__23067__$2);
                  var k = cljs.core.nth.call(null, vec__23073, 0, null);
                  var v = cljs.core.nth.call(null, vec__23073, 1, null);
                  if (schema.core.specific_key_QMARK_.call(null, k)) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (required_QMARK_ || present_QMARK_) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), iter__23066.call(null, cljs.core.rest.call(null, s__23067__$2)));
                      } else {
                        var G__23078 = cljs.core.rest.call(null, s__23067__$2);
                        s__23067__$1 = G__23078;
                        continue;
                      }
                    } else {
                      var G__23079 = cljs.core.rest.call(null, s__23067__$2);
                      s__23067__$1 = G__23079;
                      continue;
                    }
                  } else {
                    var G__23080 = cljs.core.rest.call(null, s__23067__$2);
                    s__23067__$1 = G__23080;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4283__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(fails), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___23103 = schema.utils.use_fn_validation;
var output_schema23081_23104 = schema.core.Any;
var input_schema23082_23105 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker23083_23106 = schema.core.checker.call(null, input_schema23082_23105);
var output_checker23084_23107 = schema.core.checker.call(null, output_schema23081_23104);
plumbing.fnk.schema.compose_schemata = function(ufv___23103, output_schema23081_23104, input_schema23082_23105, input_checker23083_23106, output_checker23084_23107) {
  return function compose_schemata(G__23085, G__23086) {
    var validate__10517__auto__ = true;
    if (validate__10517__auto__) {
      var args__10518__auto___23108 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__23085, G__23086], null);
      var temp__4126__auto___23109 = input_checker23083_23106.call(null, args__10518__auto___23108);
      if (cljs.core.truth_(temp__4126__auto___23109)) {
        var error__10519__auto___23110 = temp__4126__auto___23109;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__10519__auto___23110)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema23082_23105, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___23108, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23110], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var G__23097 = G__23085;
      var vec__23099 = G__23097;
      var i2 = cljs.core.nth.call(null, vec__23099, 0, null);
      var o2 = cljs.core.nth.call(null, vec__23099, 1, null);
      var G__23098 = G__23086;
      var vec__23100 = G__23098;
      var i1 = cljs.core.nth.call(null, vec__23100, 0, null);
      var o1 = cljs.core.nth.call(null, vec__23100, 1, null);
      var G__23097__$1 = G__23097;
      var G__23098__$1 = G__23098;
      while (true) {
        var vec__23101 = G__23097__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__23101, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__23101, 1, null);
        var vec__23102 = G__23098__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__23102, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__23102, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__10517__auto__) {
      var temp__4126__auto___23111 = output_checker23084_23107.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23111)) {
        var error__10519__auto___23112 = temp__4126__auto___23111;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), cljs.core.pr_str.call(null, error__10519__auto___23112)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema23081_23104, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__10519__auto___23112], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___23103, output_schema23081_23104, input_schema23082_23105, input_checker23083_23106, output_checker23084_23107);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema23081_23104, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema23082_23105], null)));
plumbing.fnk.schema.schema_key = function schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___23191 = schema.utils.use_fn_validation;
var output_schema23113_23192 = schema.core.Any;
var input_schema23114_23193 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "s", "s", -948495851, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "ks", "ks", -754231827, null))], null);
var input_checker23115_23194 = schema.core.checker.call(null, input_schema23114_23193);
var output_checker23116_23195 = schema.core.checker.call(null, output_schema23113_23192);
plumbing.fnk.schema.split_schema = function(ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
  return function split_schema(G__23117, G__23118) {
    var validate__10517__auto__ = ufv___23191.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___23196 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__23117, G__23118], null);
      var temp__4126__auto___23197 = input_checker23115_23194.call(null, args__10518__auto___23196);
      if (cljs.core.truth_(temp__4126__auto___23197)) {
        var error__10519__auto___23198 = temp__4126__auto___23197;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__10519__auto___23198)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema23114_23193, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___23196, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__10519__auto___23198], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var s = G__23117;
      var ks = G__23118;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__4283__auto__ = function(ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
          return function iter__23155(s__23156) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
              return function() {
                var s__23156__$1 = s__23156;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__23156__$1);
                  if (temp__4126__auto__) {
                    var s__23156__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__23156__$2)) {
                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23156__$2);
                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                      var b__23158 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                      if (function() {
                        var i__23157 = 0;
                        while (true) {
                          if (i__23157 < size__4282__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__4281__auto__, i__23157);
                            cljs.core.chunk_append.call(null, b__23158, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__4283__auto__ = function(i__23157, in_QMARK_, c__4281__auto__, size__4282__auto__, b__23158, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
                                return function iter__23175(s__23176) {
                                  return new cljs.core.LazySeq(null, function(i__23157, in_QMARK_, c__4281__auto__, size__4282__auto__, b__23158, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
                                    return function() {
                                      var s__23176__$1 = s__23176;
                                      while (true) {
                                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__23176__$1);
                                        if (temp__4126__auto____$1) {
                                          var s__23176__$2 = temp__4126__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__23176__$2)) {
                                            var c__4281__auto____$1 = cljs.core.chunk_first.call(null, s__23176__$2);
                                            var size__4282__auto____$1 = cljs.core.count.call(null, c__4281__auto____$1);
                                            var b__23178 = cljs.core.chunk_buffer.call(null, size__4282__auto____$1);
                                            if (function() {
                                              var i__23177 = 0;
                                              while (true) {
                                                if (i__23177 < size__4282__auto____$1) {
                                                  var vec__23181 = cljs.core._nth.call(null, c__4281__auto____$1, i__23177);
                                                  var k = cljs.core.nth.call(null, vec__23181, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__23181, 1, null);
                                                  if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                                    cljs.core.chunk_append.call(null, b__23178, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__23199 = i__23177 + 1;
                                                    i__23177 = G__23199;
                                                    continue;
                                                  } else {
                                                    var G__23200 = i__23177 + 1;
                                                    i__23177 = G__23200;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23178), iter__23175.call(null, cljs.core.chunk_rest.call(null, s__23176__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23178), null);
                                            }
                                          } else {
                                            var vec__23182 = cljs.core.first.call(null, s__23176__$2);
                                            var k = cljs.core.nth.call(null, vec__23182, 0, null);
                                            var v = cljs.core.nth.call(null, vec__23182, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__23175.call(null, cljs.core.rest.call(null, s__23176__$2)));
                                            } else {
                                              var G__23201 = cljs.core.rest.call(null, s__23176__$2);
                                              s__23176__$1 = G__23201;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__23157, in_QMARK_, c__4281__auto__, size__4282__auto__, b__23158, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195), null, null);
                                };
                              }(i__23157, in_QMARK_, c__4281__auto__, size__4282__auto__, b__23158, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195);
                              return iter__4283__auto__.call(null, s);
                            }()));
                            var G__23202 = i__23157 + 1;
                            i__23157 = G__23202;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23158), iter__23155.call(null, cljs.core.chunk_rest.call(null, s__23156__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23158), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__23156__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4283__auto__ = function(in_QMARK_, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
                          return function iter__23183(s__23184) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195) {
                              return function() {
                                var s__23184__$1 = s__23184;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__23184__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__23184__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__23184__$2)) {
                                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23184__$2);
                                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                      var b__23186 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                      if (function() {
                                        var i__23185 = 0;
                                        while (true) {
                                          if (i__23185 < size__4282__auto__) {
                                            var vec__23189 = cljs.core._nth.call(null, c__4281__auto__, i__23185);
                                            var k = cljs.core.nth.call(null, vec__23189, 0, null);
                                            var v = cljs.core.nth.call(null, vec__23189, 1, null);
                                            if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                              cljs.core.chunk_append.call(null, b__23186, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__23203 = i__23185 + 1;
                                              i__23185 = G__23203;
                                              continue;
                                            } else {
                                              var G__23204 = i__23185 + 1;
                                              i__23185 = G__23204;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23186), iter__23183.call(null, cljs.core.chunk_rest.call(null, s__23184__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23186), null);
                                      }
                                    } else {
                                      var vec__23190 = cljs.core.first.call(null, s__23184__$2);
                                      var k = cljs.core.nth.call(null, vec__23190, 0, null);
                                      var v = cljs.core.nth.call(null, vec__23190, 1, null);
                                      if (schema.core.specific_key_QMARK_.call(null, k) && cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)))) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__23183.call(null, cljs.core.rest.call(null, s__23184__$2)));
                                      } else {
                                        var G__23205 = cljs.core.rest.call(null, s__23184__$2);
                                        s__23184__$1 = G__23205;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195), null, null);
                          };
                        }(in_QMARK_, s__23156__$2, temp__4126__auto__, ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195);
                        return iter__4283__auto__.call(null, s);
                      }()), iter__23155.call(null, cljs.core.rest.call(null, s__23156__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195), null, null);
          };
        }(ks__$1, validate__10517__auto__, ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195);
        return iter__4283__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___23206 = output_checker23116_23195.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23206)) {
        var error__10519__auto___23207 = temp__4126__auto___23206;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), cljs.core.pr_str.call(null, error__10519__auto___23207)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema23113_23192, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__10519__auto___23207], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___23191, output_schema23113_23192, input_schema23114_23193, input_checker23115_23194, output_checker23116_23195);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema23113_23192, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema23114_23193], null)));
var ufv___23238 = schema.utils.use_fn_validation;
var output_schema23208_23239 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema23209_23240 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker23210_23241 = schema.core.checker.call(null, input_schema23209_23240);
var output_checker23211_23242 = schema.core.checker.call(null, output_schema23208_23239);
plumbing.fnk.schema.sequence_schemata = function(ufv___23238, output_schema23208_23239, input_schema23209_23240, input_checker23210_23241, output_checker23211_23242) {
  return function sequence_schemata(G__23212, G__23213) {
    var validate__10517__auto__ = ufv___23238.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___23243 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__23212, G__23213], null);
      var temp__4126__auto___23244 = input_checker23210_23241.call(null, args__10518__auto___23243);
      if (cljs.core.truth_(temp__4126__auto___23244)) {
        var error__10519__auto___23245 = temp__4126__auto___23244;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__10519__auto___23245)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema23209_23240, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___23243, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23245], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var G__23229 = G__23212;
      var vec__23231 = G__23229;
      var i1 = cljs.core.nth.call(null, vec__23231, 0, null);
      var o1 = cljs.core.nth.call(null, vec__23231, 1, null);
      var G__23230 = G__23213;
      var vec__23232 = G__23230;
      var k = cljs.core.nth.call(null, vec__23232, 0, null);
      var vec__23233 = cljs.core.nth.call(null, vec__23232, 1, null);
      var i2 = cljs.core.nth.call(null, vec__23233, 0, null);
      var o2 = cljs.core.nth.call(null, vec__23233, 1, null);
      var G__23229__$1 = G__23229;
      var G__23230__$1 = G__23230;
      while (true) {
        var vec__23234 = G__23229__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__23234, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__23234, 1, null);
        var vec__23235 = G__23230__$1;
        var k__$1 = cljs.core.nth.call(null, vec__23235, 0, null);
        var vec__23236 = cljs.core.nth.call(null, vec__23235, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__23236, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__23236, 1, null);
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (!plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1)) {
        } else {
          throw new java.lang.IllegalArgumentException(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__23237 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__23237, 0, null);
        var unused = cljs.core.nth.call(null, vec__23237, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___23246 = output_checker23211_23242.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___23246)) {
        var error__10519__auto___23247 = temp__4126__auto___23246;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), cljs.core.pr_str.call(null, error__10519__auto___23247)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema23208_23239, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___23247], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___23238, output_schema23208_23239, input_schema23209_23240, input_checker23210_23241, output_checker23211_23242);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema23208_23239, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema23209_23240], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("plumbing.fnk.schema");
goog.require("plumbing.fnk.schema");
goog.require("schema.utils");
goog.require("schema.utils");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
  };
  var update__4 = function(m, k, f, x1) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
  };
  var update__5 = function(m, k, f, x1, x2) {
    return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
  };
  var update__6 = function() {
    var G__23525__delegate = function(m, k, f, x1, x2, xs) {
      return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
    };
    var G__23525 = function(m, k, f, x1, x2, var_args) {
      var xs = null;
      if (arguments.length > 5) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__23525__delegate.call(this, m, k, f, x1, x2, xs);
    };
    G__23525.cljs$lang$maxFixedArity = 5;
    G__23525.cljs$lang$applyTo = function(arglist__23526) {
      var m = cljs.core.first(arglist__23526);
      arglist__23526 = cljs.core.next(arglist__23526);
      var k = cljs.core.first(arglist__23526);
      arglist__23526 = cljs.core.next(arglist__23526);
      var f = cljs.core.first(arglist__23526);
      arglist__23526 = cljs.core.next(arglist__23526);
      var x1 = cljs.core.first(arglist__23526);
      arglist__23526 = cljs.core.next(arglist__23526);
      var x2 = cljs.core.first(arglist__23526);
      var xs = cljs.core.rest(arglist__23526);
      return G__23525__delegate(m, k, f, x1, x2, xs);
    };
    G__23525.cljs$core$IFn$_invoke$arity$variadic = G__23525__delegate;
    return G__23525;
  }();
  update = function(m, k, f, x1, x2, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x1);
      case 5:
        return update__5.call(this, m, k, f, x1, x2);
      default:
        return update__6.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x1, x2, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 5;
  update.cljs$lang$applyTo = update__6.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$variadic = update__6.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
plumbing.core.map_vals = function map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__12440__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__23535_23541 = cljs.core.seq.call(null, m);
      var chunk__23536_23542 = null;
      var count__23537_23543 = 0;
      var i__23538_23544 = 0;
      while (true) {
        if (i__23538_23544 < count__23537_23543) {
          var vec__23539_23545 = cljs.core._nth.call(null, chunk__23536_23542, i__23538_23544);
          var k_23546 = cljs.core.nth.call(null, vec__23539_23545, 0, null);
          var v_23547 = cljs.core.nth.call(null, vec__23539_23545, 1, null);
          var m23534_23548 = cljs.core.deref.call(null, m_atom__12440__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23534_23548, k_23546, f.call(null, v_23547)));
          var G__23549 = seq__23535_23541;
          var G__23550 = chunk__23536_23542;
          var G__23551 = count__23537_23543;
          var G__23552 = i__23538_23544 + 1;
          seq__23535_23541 = G__23549;
          chunk__23536_23542 = G__23550;
          count__23537_23543 = G__23551;
          i__23538_23544 = G__23552;
          continue;
        } else {
          var temp__4126__auto___23553 = cljs.core.seq.call(null, seq__23535_23541);
          if (temp__4126__auto___23553) {
            var seq__23535_23554__$1 = temp__4126__auto___23553;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__23535_23554__$1)) {
              var c__4314__auto___23555 = cljs.core.chunk_first.call(null, seq__23535_23554__$1);
              var G__23556 = cljs.core.chunk_rest.call(null, seq__23535_23554__$1);
              var G__23557 = c__4314__auto___23555;
              var G__23558 = cljs.core.count.call(null, c__4314__auto___23555);
              var G__23559 = 0;
              seq__23535_23541 = G__23556;
              chunk__23536_23542 = G__23557;
              count__23537_23543 = G__23558;
              i__23538_23544 = G__23559;
              continue;
            } else {
              var vec__23540_23560 = cljs.core.first.call(null, seq__23535_23554__$1);
              var k_23561 = cljs.core.nth.call(null, vec__23540_23560, 0, null);
              var v_23562 = cljs.core.nth.call(null, vec__23540_23560, 1, null);
              var m23534_23563 = cljs.core.deref.call(null, m_atom__12440__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23534_23563, k_23561, f.call(null, v_23562)));
              var G__23564 = cljs.core.next.call(null, seq__23535_23554__$1);
              var G__23565 = null;
              var G__23566 = 0;
              var G__23567 = 0;
              seq__23535_23541 = G__23564;
              chunk__23536_23542 = G__23565;
              count__23537_23543 = G__23566;
              i__23538_23544 = G__23567;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12440__auto__));
    }
  }
};
plumbing.core.map_keys = function map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__12440__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__23576_23582 = cljs.core.seq.call(null, m);
    var chunk__23577_23583 = null;
    var count__23578_23584 = 0;
    var i__23579_23585 = 0;
    while (true) {
      if (i__23579_23585 < count__23578_23584) {
        var vec__23580_23586 = cljs.core._nth.call(null, chunk__23577_23583, i__23579_23585);
        var k_23587 = cljs.core.nth.call(null, vec__23580_23586, 0, null);
        var v_23588 = cljs.core.nth.call(null, vec__23580_23586, 1, null);
        var m23575_23589 = cljs.core.deref.call(null, m_atom__12440__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23575_23589, f.call(null, k_23587), v_23588));
        var G__23590 = seq__23576_23582;
        var G__23591 = chunk__23577_23583;
        var G__23592 = count__23578_23584;
        var G__23593 = i__23579_23585 + 1;
        seq__23576_23582 = G__23590;
        chunk__23577_23583 = G__23591;
        count__23578_23584 = G__23592;
        i__23579_23585 = G__23593;
        continue;
      } else {
        var temp__4126__auto___23594 = cljs.core.seq.call(null, seq__23576_23582);
        if (temp__4126__auto___23594) {
          var seq__23576_23595__$1 = temp__4126__auto___23594;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23576_23595__$1)) {
            var c__4314__auto___23596 = cljs.core.chunk_first.call(null, seq__23576_23595__$1);
            var G__23597 = cljs.core.chunk_rest.call(null, seq__23576_23595__$1);
            var G__23598 = c__4314__auto___23596;
            var G__23599 = cljs.core.count.call(null, c__4314__auto___23596);
            var G__23600 = 0;
            seq__23576_23582 = G__23597;
            chunk__23577_23583 = G__23598;
            count__23578_23584 = G__23599;
            i__23579_23585 = G__23600;
            continue;
          } else {
            var vec__23581_23601 = cljs.core.first.call(null, seq__23576_23595__$1);
            var k_23602 = cljs.core.nth.call(null, vec__23581_23601, 0, null);
            var v_23603 = cljs.core.nth.call(null, vec__23581_23601, 1, null);
            var m23575_23604 = cljs.core.deref.call(null, m_atom__12440__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23575_23604, f.call(null, k_23602), v_23603));
            var G__23605 = cljs.core.next.call(null, seq__23576_23595__$1);
            var G__23606 = null;
            var G__23607 = 0;
            var G__23608 = 0;
            seq__23576_23582 = G__23605;
            chunk__23577_23583 = G__23606;
            count__23578_23584 = G__23607;
            i__23579_23585 = G__23608;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12440__auto__));
  }
};
plumbing.core.map_from_keys = function map_from_keys(f, ks) {
  var m_atom__12440__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__23615_23619 = cljs.core.seq.call(null, ks);
  var chunk__23616_23620 = null;
  var count__23617_23621 = 0;
  var i__23618_23622 = 0;
  while (true) {
    if (i__23618_23622 < count__23617_23621) {
      var k_23623 = cljs.core._nth.call(null, chunk__23616_23620, i__23618_23622);
      var m23614_23624 = cljs.core.deref.call(null, m_atom__12440__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23614_23624, k_23623, f.call(null, k_23623)));
      var G__23625 = seq__23615_23619;
      var G__23626 = chunk__23616_23620;
      var G__23627 = count__23617_23621;
      var G__23628 = i__23618_23622 + 1;
      seq__23615_23619 = G__23625;
      chunk__23616_23620 = G__23626;
      count__23617_23621 = G__23627;
      i__23618_23622 = G__23628;
      continue;
    } else {
      var temp__4126__auto___23629 = cljs.core.seq.call(null, seq__23615_23619);
      if (temp__4126__auto___23629) {
        var seq__23615_23630__$1 = temp__4126__auto___23629;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23615_23630__$1)) {
          var c__4314__auto___23631 = cljs.core.chunk_first.call(null, seq__23615_23630__$1);
          var G__23632 = cljs.core.chunk_rest.call(null, seq__23615_23630__$1);
          var G__23633 = c__4314__auto___23631;
          var G__23634 = cljs.core.count.call(null, c__4314__auto___23631);
          var G__23635 = 0;
          seq__23615_23619 = G__23632;
          chunk__23616_23620 = G__23633;
          count__23617_23621 = G__23634;
          i__23618_23622 = G__23635;
          continue;
        } else {
          var k_23636 = cljs.core.first.call(null, seq__23615_23630__$1);
          var m23614_23637 = cljs.core.deref.call(null, m_atom__12440__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23614_23637, k_23636, f.call(null, k_23636)));
          var G__23638 = cljs.core.next.call(null, seq__23615_23630__$1);
          var G__23639 = null;
          var G__23640 = 0;
          var G__23641 = 0;
          seq__23615_23619 = G__23638;
          chunk__23616_23620 = G__23639;
          count__23617_23621 = G__23640;
          i__23618_23622 = G__23641;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12440__auto__));
};
plumbing.core.map_from_vals = function map_from_vals(f, vs) {
  var m_atom__12440__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__23648_23652 = cljs.core.seq.call(null, vs);
  var chunk__23649_23653 = null;
  var count__23650_23654 = 0;
  var i__23651_23655 = 0;
  while (true) {
    if (i__23651_23655 < count__23650_23654) {
      var v_23656 = cljs.core._nth.call(null, chunk__23649_23653, i__23651_23655);
      var m23647_23657 = cljs.core.deref.call(null, m_atom__12440__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23647_23657, f.call(null, v_23656), v_23656));
      var G__23658 = seq__23648_23652;
      var G__23659 = chunk__23649_23653;
      var G__23660 = count__23650_23654;
      var G__23661 = i__23651_23655 + 1;
      seq__23648_23652 = G__23658;
      chunk__23649_23653 = G__23659;
      count__23650_23654 = G__23660;
      i__23651_23655 = G__23661;
      continue;
    } else {
      var temp__4126__auto___23662 = cljs.core.seq.call(null, seq__23648_23652);
      if (temp__4126__auto___23662) {
        var seq__23648_23663__$1 = temp__4126__auto___23662;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23648_23663__$1)) {
          var c__4314__auto___23664 = cljs.core.chunk_first.call(null, seq__23648_23663__$1);
          var G__23665 = cljs.core.chunk_rest.call(null, seq__23648_23663__$1);
          var G__23666 = c__4314__auto___23664;
          var G__23667 = cljs.core.count.call(null, c__4314__auto___23664);
          var G__23668 = 0;
          seq__23648_23652 = G__23665;
          chunk__23649_23653 = G__23666;
          count__23650_23654 = G__23667;
          i__23651_23655 = G__23668;
          continue;
        } else {
          var v_23669 = cljs.core.first.call(null, seq__23648_23663__$1);
          var m23647_23670 = cljs.core.deref.call(null, m_atom__12440__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23647_23670, f.call(null, v_23669), v_23669));
          var G__23671 = cljs.core.next.call(null, seq__23648_23663__$1);
          var G__23672 = null;
          var G__23673 = 0;
          var G__23674 = 0;
          seq__23648_23652 = G__23671;
          chunk__23649_23653 = G__23672;
          count__23650_23654 = G__23673;
          i__23651_23655 = G__23674;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12440__auto__));
};
plumbing.core.dissoc_in = function dissoc_in(m, p__23675) {
  var vec__23677 = p__23675;
  var k = cljs.core.nth.call(null, vec__23677, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__23677, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__3546__auto__ = ks;
      if (and__3546__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3546__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__12440__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__23686_23692 = cljs.core.seq.call(null, x);
    var chunk__23687_23693 = null;
    var count__23688_23694 = 0;
    var i__23689_23695 = 0;
    while (true) {
      if (i__23689_23695 < count__23688_23694) {
        var vec__23690_23696 = cljs.core._nth.call(null, chunk__23687_23693, i__23689_23695);
        var k_23697 = cljs.core.nth.call(null, vec__23690_23696, 0, null);
        var v_23698 = cljs.core.nth.call(null, vec__23690_23696, 1, null);
        var m23685_23699 = cljs.core.deref.call(null, m_atom__12440__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23685_23699, typeof k_23697 === "string" ? cljs.core.keyword.call(null, k_23697) : k_23697, keywordize_map.call(null, v_23698)));
        var G__23700 = seq__23686_23692;
        var G__23701 = chunk__23687_23693;
        var G__23702 = count__23688_23694;
        var G__23703 = i__23689_23695 + 1;
        seq__23686_23692 = G__23700;
        chunk__23687_23693 = G__23701;
        count__23688_23694 = G__23702;
        i__23689_23695 = G__23703;
        continue;
      } else {
        var temp__4126__auto___23704 = cljs.core.seq.call(null, seq__23686_23692);
        if (temp__4126__auto___23704) {
          var seq__23686_23705__$1 = temp__4126__auto___23704;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23686_23705__$1)) {
            var c__4314__auto___23706 = cljs.core.chunk_first.call(null, seq__23686_23705__$1);
            var G__23707 = cljs.core.chunk_rest.call(null, seq__23686_23705__$1);
            var G__23708 = c__4314__auto___23706;
            var G__23709 = cljs.core.count.call(null, c__4314__auto___23706);
            var G__23710 = 0;
            seq__23686_23692 = G__23707;
            chunk__23687_23693 = G__23708;
            count__23688_23694 = G__23709;
            i__23689_23695 = G__23710;
            continue;
          } else {
            var vec__23691_23711 = cljs.core.first.call(null, seq__23686_23705__$1);
            var k_23712 = cljs.core.nth.call(null, vec__23691_23711, 0, null);
            var v_23713 = cljs.core.nth.call(null, vec__23691_23711, 1, null);
            var m23685_23714 = cljs.core.deref.call(null, m_atom__12440__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__12440__auto__, cljs.core.assoc_BANG_.call(null, m23685_23714, typeof k_23712 === "string" ? cljs.core.keyword.call(null, k_23712) : k_23712, keywordize_map.call(null, v_23713)));
            var G__23715 = cljs.core.next.call(null, seq__23686_23705__$1);
            var G__23716 = null;
            var G__23717 = 0;
            var G__23718 = 0;
            seq__23686_23692 = G__23715;
            chunk__23687_23693 = G__23716;
            count__23688_23694 = G__23717;
            i__23689_23695 = G__23718;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__12440__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function safe_get(m, k) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var pair__12509__auto__ = temp__4124__auto__;
    return cljs.core.val.call(null, pair__12509__auto__);
  } else {
    var e = schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m));
    throw new Error(e);
  }
};
plumbing.core.safe_get_in = function safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__23719 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__23720 = cljs.core.next.call(null, ks);
      m = G__23719;
      ks = G__23720;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function() {
  var assoc_when__delegate = function(m, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null))))));
    }
    return cljs.core.into.call(null, function() {
      var or__3558__auto__ = m;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }(), function() {
      var iter__4283__auto__ = function iter__23729(s__23730) {
        return new cljs.core.LazySeq(null, function() {
          var s__23730__$1 = s__23730;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23730__$1);
            if (temp__4126__auto__) {
              var s__23730__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23730__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23730__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__23732 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__23731 = 0;
                  while (true) {
                    if (i__23731 < size__4282__auto__) {
                      var vec__23735 = cljs.core._nth.call(null, c__4281__auto__, i__23731);
                      var k = cljs.core.nth.call(null, vec__23735, 0, null);
                      var v = cljs.core.nth.call(null, vec__23735, 1, null);
                      if (cljs.core.truth_(v)) {
                        cljs.core.chunk_append.call(null, b__23732, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                        var G__23737 = i__23731 + 1;
                        i__23731 = G__23737;
                        continue;
                      } else {
                        var G__23738 = i__23731 + 1;
                        i__23731 = G__23738;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23732), iter__23729.call(null, cljs.core.chunk_rest.call(null, s__23730__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23732), null);
                }
              } else {
                var vec__23736 = cljs.core.first.call(null, s__23730__$2);
                var k = cljs.core.nth.call(null, vec__23736, 0, null);
                var v = cljs.core.nth.call(null, vec__23736, 1, null);
                if (cljs.core.truth_(v)) {
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), iter__23729.call(null, cljs.core.rest.call(null, s__23730__$2)));
                } else {
                  var G__23739 = cljs.core.rest.call(null, s__23730__$2);
                  s__23730__$1 = G__23739;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
    }());
  };
  var assoc_when = function(m, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return assoc_when__delegate.call(this, m, kvs);
  };
  assoc_when.cljs$lang$maxFixedArity = 1;
  assoc_when.cljs$lang$applyTo = function(arglist__23740) {
    var m = cljs.core.first(arglist__23740);
    var kvs = cljs.core.rest(arglist__23740);
    return assoc_when__delegate(m, kvs);
  };
  assoc_when.cljs$core$IFn$_invoke$arity$variadic = assoc_when__delegate;
  return assoc_when;
}();
plumbing.core.update_in_when = function() {
  var update_in_when__delegate = function(m, key_seq, f, args) {
    var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
    if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
      return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
    } else {
      return m;
    }
  };
  var update_in_when = function(m, key_seq, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return update_in_when__delegate.call(this, m, key_seq, f, args);
  };
  update_in_when.cljs$lang$maxFixedArity = 3;
  update_in_when.cljs$lang$applyTo = function(arglist__23741) {
    var m = cljs.core.first(arglist__23741);
    arglist__23741 = cljs.core.next(arglist__23741);
    var key_seq = cljs.core.first(arglist__23741);
    arglist__23741 = cljs.core.next(arglist__23741);
    var f = cljs.core.first(arglist__23741);
    var args = cljs.core.rest(arglist__23741);
    return update_in_when__delegate(m, key_seq, f, args);
  };
  update_in_when.cljs$core$IFn$_invoke$arity$variadic = update_in_when__delegate;
  return update_in_when;
}();
plumbing.core.grouped_map = function grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.next.call(null, s);
    if (temp__4126__auto__) {
      var n = temp__4126__auto__;
      return aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function() {
  var sum = null;
  var sum__1 = function(xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
  };
  var sum__2 = function(f, xs) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
  };
  sum = function(f, xs) {
    switch(arguments.length) {
      case 1:
        return sum__1.call(this, f);
      case 2:
        return sum__2.call(this, f, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sum.cljs$core$IFn$_invoke$arity$1 = sum__1;
  sum.cljs$core$IFn$_invoke$arity$2 = sum__2;
  return sum;
}();
plumbing.core.singleton = function singleton(xs) {
  var temp__4126__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4126__auto__) {
    var xs__$1 = temp__4126__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__4283__auto__ = function(s) {
    return function iter__23746(s__23747) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__23747__$1 = s__23747;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23747__$1);
            if (temp__4126__auto__) {
              var s__23747__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23747__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__23747__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__23749 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__23748 = 0;
                  while (true) {
                    if (i__23748 < size__4282__auto__) {
                      var x = cljs.core._nth.call(null, c__4281__auto__, i__23748);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__23749, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__23750 = i__23748 + 1;
                        i__23748 = G__23750;
                        continue;
                      } else {
                        var G__23751 = i__23748 + 1;
                        i__23748 = G__23751;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23749), iter__23746.call(null, cljs.core.chunk_rest.call(null, s__23747__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23749), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__23747__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), iter__23746.call(null, cljs.core.rest.call(null, s__23747__$2)));
                } else {
                  var G__23752 = cljs.core.rest.call(null, s__23747__$2);
                  s__23747__$1 = G__23752;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__4283__auto__.call(null, xs);
};
plumbing.core.interleave_all = function() {
  var interleave_all__delegate = function(colls) {
    return new cljs.core.LazySeq(null, function() {
      return function helper(seqs) {
        if (cljs.core.seq.call(null, seqs)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
            return helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
          }, null, null));
        } else {
          return null;
        }
      }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
    }, null, null);
  };
  var interleave_all = function(var_args) {
    var colls = null;
    if (arguments.length > 0) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interleave_all__delegate.call(this, colls);
  };
  interleave_all.cljs$lang$maxFixedArity = 0;
  interleave_all.cljs$lang$applyTo = function(arglist__23753) {
    var colls = cljs.core.seq(arglist__23753);
    return interleave_all__delegate(colls);
  };
  interleave_all.cljs$core$IFn$_invoke$arity$variadic = interleave_all__delegate;
  return interleave_all;
}();
plumbing.core.count_when = function count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function() {
  var conj_when = null;
  var conj_when__2 = function(coll, x) {
    if (cljs.core.truth_(x)) {
      return cljs.core.conj.call(null, coll, x);
    } else {
      return coll;
    }
  };
  var conj_when__3 = function() {
    var G__23754__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__23755 = conj_when.call(null, coll, x);
          var G__23756 = cljs.core.first.call(null, xs);
          var G__23757 = cljs.core.next.call(null, xs);
          coll = G__23755;
          x = G__23756;
          xs = G__23757;
          continue;
        } else {
          return conj_when.call(null, coll, x);
        }
        break;
      }
    };
    var G__23754 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23754__delegate.call(this, coll, x, xs);
    };
    G__23754.cljs$lang$maxFixedArity = 2;
    G__23754.cljs$lang$applyTo = function(arglist__23758) {
      var coll = cljs.core.first(arglist__23758);
      arglist__23758 = cljs.core.next(arglist__23758);
      var x = cljs.core.first(arglist__23758);
      var xs = cljs.core.rest(arglist__23758);
      return G__23754__delegate(coll, x, xs);
    };
    G__23754.cljs$core$IFn$_invoke$arity$variadic = G__23754__delegate;
    return G__23754;
  }();
  conj_when = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj_when__2.call(this, coll, x);
      default:
        return conj_when__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_when.cljs$lang$maxFixedArity = 2;
  conj_when.cljs$lang$applyTo = conj_when__3.cljs$lang$applyTo;
  conj_when.cljs$core$IFn$_invoke$arity$2 = conj_when__2;
  conj_when.cljs$core$IFn$_invoke$arity$variadic = conj_when__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_when;
}();
plumbing.core.cons_when = function cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function() {
  var swap_pair_BANG_ = null;
  var swap_pair_BANG___2 = function(a, f) {
    while (true) {
      var old_val = cljs.core.deref.call(null, a);
      var new_val = f.call(null, old_val);
      if (cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
      } else {
        continue;
      }
      break;
    }
  };
  var swap_pair_BANG___3 = function() {
    var G__23760__delegate = function(a, f, args) {
      return swap_pair_BANG_.call(null, a, function(p1__23759_SHARP_) {
        return cljs.core.apply.call(null, f, p1__23759_SHARP_, args);
      });
    };
    var G__23760 = function(a, f, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23760__delegate.call(this, a, f, args);
    };
    G__23760.cljs$lang$maxFixedArity = 2;
    G__23760.cljs$lang$applyTo = function(arglist__23761) {
      var a = cljs.core.first(arglist__23761);
      arglist__23761 = cljs.core.next(arglist__23761);
      var f = cljs.core.first(arglist__23761);
      var args = cljs.core.rest(arglist__23761);
      return G__23760__delegate(a, f, args);
    };
    G__23760.cljs$core$IFn$_invoke$arity$variadic = G__23760__delegate;
    return G__23760;
  }();
  swap_pair_BANG_ = function(a, f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return swap_pair_BANG___2.call(this, a, f);
      default:
        return swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic(a, f, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
  swap_pair_BANG_.cljs$lang$applyTo = swap_pair_BANG___3.cljs$lang$applyTo;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_pair_BANG___2;
  swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_pair_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return swap_pair_BANG_;
}();
plumbing.core.get_and_set_BANG_ = function get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function millis() {
  return(new Date).getTime();
};
plumbing.core.mapply = function() {
  var mapply = null;
  var mapply__2 = function(f, m) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
  };
  var mapply__3 = function() {
    var G__23762__delegate = function(f, arg, args) {
      return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
    };
    var G__23762 = function(f, arg, var_args) {
      var args = null;
      if (arguments.length > 2) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23762__delegate.call(this, f, arg, args);
    };
    G__23762.cljs$lang$maxFixedArity = 2;
    G__23762.cljs$lang$applyTo = function(arglist__23763) {
      var f = cljs.core.first(arglist__23763);
      arglist__23763 = cljs.core.next(arglist__23763);
      var arg = cljs.core.first(arglist__23763);
      var args = cljs.core.rest(arglist__23763);
      return G__23762__delegate(f, arg, args);
    };
    G__23762.cljs$core$IFn$_invoke$arity$variadic = G__23762__delegate;
    return G__23762;
  }();
  mapply = function(f, arg, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return mapply__2.call(this, f, arg);
      default:
        return mapply__3.cljs$core$IFn$_invoke$arity$variadic(f, arg, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapply.cljs$lang$maxFixedArity = 2;
  mapply.cljs$lang$applyTo = mapply__3.cljs$lang$applyTo;
  mapply.cljs$core$IFn$_invoke$arity$2 = mapply__2;
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapply;
}();
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  var safeStyle = new goog.html.SafeStyle;
  safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return safeStyle;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-.%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.VALUE_RE_ = /^[-.%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet("link", "script", "style");
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toLowerCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      if (value instanceof goog.string.Const) {
        value = goog.string.Const.unwrap(value);
      } else {
        if (name.toLowerCase() == "style") {
          value = goog.html.SafeHtml.getStyleValue_(value);
        } else {
          if (/^on/i.test(name)) {
            throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
                throw Error('Attribute "' + name + '" requires goog.string.Const or goog.html.SafeUrl value, "' + value + '" given.');
              }
            }
          }
        }
      }
      goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
      result += " " + name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
    }
  }
  var content = opt_content;
  if (!goog.isDef(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  var safeHtml = new goog.html.SafeHtml;
  safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  safeHtml.dir_ = dir;
  return safeHtml;
};
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.create("iframe", {"onload":goog.string.Const.from("this.xpcOnload()")}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.IEventType = function() {
  var obj23772 = {};
  return obj23772;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clojure$browser$event$IEventType$event_types$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__23773) {
      var vec__23774 = p__23773;
      var k = cljs.core.nth.call(null, vec__23774, 0, null);
      var v = cljs.core.nth.call(null, vec__23774, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = true;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__23775) {
        var vec__23776 = p__23775;
        var k = cljs.core.nth.call(null, vec__23776, 0, null);
        var v = cljs.core.nth.call(null, vec__23776, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.json");
goog.require("goog.json");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__23777) {
  var vec__23778 = p__23777;
  var k = cljs.core.nth.call(null, vec__23778, 0, null);
  var v = cljs.core.nth.call(null, vec__23778, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj23780 = {};
  return obj23780;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clojure.browser.net.close[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clojure.browser.net.close["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__23781) {
      var vec__23782 = p__23781;
      var k = cljs.core.nth.call(null, vec__23782, 0, null);
      var v = cljs.core.nth.call(null, vec__23782, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__23783) {
  var vec__23784 = p__23783;
  var k = cljs.core.nth.call(null, vec__23784, 0, null);
  var v = cljs.core.nth.call(null, vec__23784, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj23786 = {};
  return obj23786;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__23792) {
      var vec__23793 = p__23792;
      var k = cljs.core.nth.call(null, vec__23793, 0, null);
      var v = cljs.core.nth.call(null, vec__23793, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__23794 = sum;
        G__23794[field] = v;
        return G__23794;
      } else {
        return sum;
      }
    }, function() {
      var obj23796 = {};
      return obj23796;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1E3;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1E3;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return!!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1E3);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = event.data;
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = (event.data);
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("weasel.impls.websocket");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("goog.net.WebSocket");
goog.require("goog.net.WebSocket");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
weasel.impls.websocket.IWebSocket = function() {
  var obj23798 = {};
  return obj23798;
}();
weasel.impls.websocket.open_QMARK_ = function open_QMARK_(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = weasel.impls.websocket.open_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = weasel.impls.websocket.open_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
        }
      }
    }().call(null, this$);
  }
};
weasel.impls.websocket.websocket_connection = function() {
  var websocket_connection = null;
  var websocket_connection__0 = function() {
    return websocket_connection.call(null, null, null);
  };
  var websocket_connection__1 = function(auto_reconnect_QMARK_) {
    return websocket_connection.call(null, auto_reconnect_QMARK_, null);
  };
  var websocket_connection__2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
  };
  websocket_connection = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    switch(arguments.length) {
      case 0:
        return websocket_connection__0.call(this);
      case 1:
        return websocket_connection__1.call(this, auto_reconnect_QMARK_);
      case 2:
        return websocket_connection__2.call(this, auto_reconnect_QMARK_, next_reconnect_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  websocket_connection.cljs$core$IFn$_invoke$arity$0 = websocket_connection__0;
  websocket_connection.cljs$core$IFn$_invoke$arity$1 = websocket_connection__1;
  websocket_connection.cljs$core$IFn$_invoke$arity$2 = websocket_connection__2;
  return websocket_connection;
}();
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = true;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__23799) {
      var vec__23800 = p__23799;
      var k = cljs.core.nth.call(null, vec__23800, 0, null);
      var v = cljs.core.nth.call(null, vec__23800, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = true;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$ = true;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj22640 = {};
  return obj22640;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3546__auto__ = reader;
    if (and__3546__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4185__auto__ = reader == null ? null : reader;
    return function() {
      var or__3558__auto__ = cljs.reader.read_char[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.read_char["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3546__auto__ = reader;
    if (and__3546__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4185__auto__ = reader == null ? null : reader;
    return function() {
      var or__3558__auto__ = cljs.reader.unread[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.unread["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3558__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__22641) {
    var rdr = cljs.core.first(arglist__22641);
    var msg = cljs.core.rest(arglist__22641);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3546__auto__ = !(ch === "#");
  if (and__3546__auto__) {
    var and__3546__auto____$1 = !(ch === "'");
    if (and__3546__auto____$1) {
      var and__3546__auto____$2 = !(ch === ":");
      if (and__3546__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3546__auto____$2;
      }
    } else {
      return and__3546__auto____$1;
    }
  } else {
    return and__3546__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__22642 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__22643 = cljs.reader.read_char.call(null, rdr);
      sb = G__22642;
      ch = G__22643;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__22644 = cljs.reader.read_char.call(null, rdr);
      ch = G__22644;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__22645 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__22645;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__22646 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__22646;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = ch == null;
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3558__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__22647 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__22648 = cljs.reader.read_char.call(null, reader);
      buffer = G__22647;
      ch = G__22648;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__22649 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__22650 = cljs.reader.read_char.call(null, reader);
        buffer = G__22649;
        ch = G__22650;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__22651 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__22652 = cljs.reader.read_char.call(null, reader);
          buffer = G__22651;
          ch = G__22652;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__22657 = function() {
            var G__22655 = buffer;
            G__22655.append(nch);
            return G__22655;
          }();
          var G__22658 = cljs.reader.read_char.call(null, reader);
          buffer = G__22657;
          ch = G__22658;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__22659 = function() {
            var G__22656 = buffer;
            G__22656.append(ch);
            return G__22656;
          }();
          var G__22660 = cljs.reader.read_char.call(null, reader);
          buffer = G__22659;
          ch = G__22660;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        return not_found;
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__22662 = o;
    if (G__22662) {
      var bit__4208__auto__ = G__22662.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4208__auto__ || G__22662.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__22662.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__22662);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__22662);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__22663 = reader;
        var G__22664 = eof_is_error;
        var G__22665 = sentinel;
        var G__22666 = is_recursive;
        reader = G__22663;
        eof_is_error = G__22664;
        sentinel = G__22665;
        is_recursive = G__22666;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__22667 = cljs.reader.read_comment.call(null, reader, ch);
          var G__22668 = eof_is_error;
          var G__22669 = sentinel;
          var G__22670 = is_recursive;
          reader = G__22667;
          eof_is_error = G__22668;
          sentinel = G__22669;
          is_recursive = G__22670;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__22671 = reader;
            var G__22672 = eof_is_error;
            var G__22673 = sentinel;
            var G__22674 = is_recursive;
            reader = G__22671;
            eof_is_error = G__22672;
            sentinel = G__22673;
            is_recursive = G__22674;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__22675 = b.append("0");
          b = G__22675;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__22677 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__22677, 0, null);
  var years = cljs.core.nth.call(null, vec__22677, 1, null);
  var months = cljs.core.nth.call(null, vec__22677, 2, null);
  var days = cljs.core.nth.call(null, vec__22677, 3, null);
  var hours = cljs.core.nth.call(null, vec__22677, 4, null);
  var minutes = cljs.core.nth.call(null, vec__22677, 5, null);
  var seconds = cljs.core.nth.call(null, vec__22677, 6, null);
  var fraction = cljs.core.nth.call(null, vec__22677, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__22677, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__22677, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__22677, 10, null);
  var v = vec__22677;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__22679 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__22679, 0, null);
    var months = cljs.core.nth.call(null, vec__22679, 1, null);
    var days = cljs.core.nth.call(null, vec__22679, 2, null);
    var hours = cljs.core.nth.call(null, vec__22679, 3, null);
    var minutes = cljs.core.nth.call(null, vec__22679, 4, null);
    var seconds = cljs.core.nth.call(null, vec__22679, 5, null);
    var ms = cljs.core.nth.call(null, vec__22679, 6, null);
    var offset = cljs.core.nth.call(null, vec__22679, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__22692_22704 = cljs.core.seq.call(null, form);
    var chunk__22693_22705 = null;
    var count__22694_22706 = 0;
    var i__22695_22707 = 0;
    while (true) {
      if (i__22695_22707 < count__22694_22706) {
        var x_22708 = cljs.core._nth.call(null, chunk__22693_22705, i__22695_22707);
        arr.push(x_22708);
        var G__22709 = seq__22692_22704;
        var G__22710 = chunk__22693_22705;
        var G__22711 = count__22694_22706;
        var G__22712 = i__22695_22707 + 1;
        seq__22692_22704 = G__22709;
        chunk__22693_22705 = G__22710;
        count__22694_22706 = G__22711;
        i__22695_22707 = G__22712;
        continue;
      } else {
        var temp__4126__auto___22713 = cljs.core.seq.call(null, seq__22692_22704);
        if (temp__4126__auto___22713) {
          var seq__22692_22714__$1 = temp__4126__auto___22713;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22692_22714__$1)) {
            var c__4314__auto___22715 = cljs.core.chunk_first.call(null, seq__22692_22714__$1);
            var G__22716 = cljs.core.chunk_rest.call(null, seq__22692_22714__$1);
            var G__22717 = c__4314__auto___22715;
            var G__22718 = cljs.core.count.call(null, c__4314__auto___22715);
            var G__22719 = 0;
            seq__22692_22704 = G__22716;
            chunk__22693_22705 = G__22717;
            count__22694_22706 = G__22718;
            i__22695_22707 = G__22719;
            continue;
          } else {
            var x_22720 = cljs.core.first.call(null, seq__22692_22714__$1);
            arr.push(x_22720);
            var G__22721 = cljs.core.next.call(null, seq__22692_22714__$1);
            var G__22722 = null;
            var G__22723 = 0;
            var G__22724 = 0;
            seq__22692_22704 = G__22721;
            chunk__22693_22705 = G__22722;
            count__22694_22706 = G__22723;
            i__22695_22707 = G__22724;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj22697 = {};
        return obj22697;
      }();
      var seq__22698_22725 = cljs.core.seq.call(null, form);
      var chunk__22699_22726 = null;
      var count__22700_22727 = 0;
      var i__22701_22728 = 0;
      while (true) {
        if (i__22701_22728 < count__22700_22727) {
          var vec__22702_22729 = cljs.core._nth.call(null, chunk__22699_22726, i__22701_22728);
          var k_22730 = cljs.core.nth.call(null, vec__22702_22729, 0, null);
          var v_22731 = cljs.core.nth.call(null, vec__22702_22729, 1, null);
          obj[cljs.core.name.call(null, k_22730)] = v_22731;
          var G__22732 = seq__22698_22725;
          var G__22733 = chunk__22699_22726;
          var G__22734 = count__22700_22727;
          var G__22735 = i__22701_22728 + 1;
          seq__22698_22725 = G__22732;
          chunk__22699_22726 = G__22733;
          count__22700_22727 = G__22734;
          i__22701_22728 = G__22735;
          continue;
        } else {
          var temp__4126__auto___22736 = cljs.core.seq.call(null, seq__22698_22725);
          if (temp__4126__auto___22736) {
            var seq__22698_22737__$1 = temp__4126__auto___22736;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__22698_22737__$1)) {
              var c__4314__auto___22738 = cljs.core.chunk_first.call(null, seq__22698_22737__$1);
              var G__22739 = cljs.core.chunk_rest.call(null, seq__22698_22737__$1);
              var G__22740 = c__4314__auto___22738;
              var G__22741 = cljs.core.count.call(null, c__4314__auto___22738);
              var G__22742 = 0;
              seq__22698_22725 = G__22739;
              chunk__22699_22726 = G__22740;
              count__22700_22727 = G__22741;
              i__22701_22728 = G__22742;
              continue;
            } else {
              var vec__22703_22743 = cljs.core.first.call(null, seq__22698_22737__$1);
              var k_22744 = cljs.core.nth.call(null, vec__22703_22743, 0, null);
              var v_22745 = cljs.core.nth.call(null, vec__22703_22743, 1, null);
              obj[cljs.core.name.call(null, k_22744)] = v_22745;
              var G__22746 = cljs.core.next.call(null, seq__22698_22737__$1);
              var G__22747 = null;
              var G__22748 = 0;
              var G__22749 = 0;
              seq__22698_22725 = G__22746;
              chunk__22699_22726 = G__22747;
              count__22700_22727 = G__22748;
              i__22701_22728 = G__22749;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("weasel.repl");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.browser.event");
goog.require("weasel.impls.websocket");
goog.require("weasel.impls.websocket");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
weasel.repl.ws_connection = cljs.core.atom.call(null, null);
weasel.repl.alive_QMARK_ = function alive_QMARK_() {
  return!(cljs.core.deref.call(null, weasel.repl.ws_connection) == null);
};
weasel.repl.process_message = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("process-message", new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "error", "error", -978969032), function(message) {
  return console.error("Websocket REPL error " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(message)));
});
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "eval-js", "eval-js", 760905924), function(message) {
  var code = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(message);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(code))], null);
    } catch (e23764) {
      if (e23764 instanceof Error) {
        var e = e23764;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
      } else {
        var e = e23764;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), "No stacktrace available."], null);
      }
    }
  }()], null);
});
weasel.repl.repl_print = function repl_print(x) {
  var temp__4124__auto__ = cljs.core.deref.call(null, weasel.repl.ws_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, cljs.core.deref.call(null, weasel.repl.ws_connection), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, x)], null));
  } else {
    return null;
  }
};
weasel.repl.connect = function() {
  var connect__delegate = function(repl_server_url, p__23765) {
    var map__23768 = p__23765;
    var map__23768__$1 = cljs.core.seq_QMARK_.call(null, map__23768) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23768) : map__23768;
    var on_close = cljs.core.get.call(null, map__23768__$1, new cljs.core.Keyword(null, "on-close", "on-close", -761178394));
    var on_error = cljs.core.get.call(null, map__23768__$1, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530));
    var on_open = cljs.core.get.call(null, map__23768__$1, new cljs.core.Keyword(null, "on-open", "on-open", -1391088163));
    var verbose = cljs.core.get.call(null, map__23768__$1, new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
    var repl_connection = weasel.impls.websocket.websocket_connection.call(null);
    cljs.core.swap_BANG_.call(null, weasel.repl.ws_connection, cljs.core.constantly.call(null, repl_connection));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "opened", "opened", -1451743091), function(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        clojure.browser.net.transmit.call(null, repl_connection, cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ready", "ready", 1086465795)], null)));
        if (cljs.core.truth_(verbose)) {
          console.info("Opened Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_open)) {
          return on_open.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "message", "message", -406056002), function(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        var map__23769 = cljs.reader.read_string.call(null, evt.message);
        var map__23769__$1 = cljs.core.seq_QMARK_.call(null, map__23769) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23769) : map__23769;
        var message = map__23769__$1;
        var op = cljs.core.get.call(null, map__23769__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
        var response = cljs.core.pr_str.call(null, weasel.repl.process_message.call(null, message));
        return clojure.browser.net.transmit.call(null, repl_connection, response);
      };
    }(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "closed", "closed", -919675359), function(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        cljs.core.reset_BANG_.call(null, weasel.repl.ws_connection, null);
        if (cljs.core.truth_(verbose)) {
          console.info("Closed Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_close)) {
          return on_close.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "error", "error", -978969032), function(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        if (cljs.core.truth_(verbose)) {
          console.error("WebSocket error", evt);
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_error)) {
          return on_error.call(null, evt);
        } else {
          return null;
        }
      };
    }(repl_connection, map__23768, map__23768__$1, on_close, on_error, on_open, verbose));
    return clojure.browser.net.connect.call(null, repl_connection, repl_server_url);
  };
  var connect = function(repl_server_url, var_args) {
    var p__23765 = null;
    if (arguments.length > 1) {
      p__23765 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return connect__delegate.call(this, repl_server_url, p__23765);
  };
  connect.cljs$lang$maxFixedArity = 1;
  connect.cljs$lang$applyTo = function(arglist__23770) {
    var repl_server_url = cljs.core.first(arglist__23770);
    var p__23765 = cljs.core.rest(arglist__23770);
    return connect__delegate(repl_server_url, p__23765);
  };
  connect.cljs$core$IFn$_invoke$arity$variadic = connect__delegate;
  return connect;
}();
goog.provide("clustermap.formats.number");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.formats.number.round_decimal = function round_decimal(n, dec_places) {
  if (cljs.core.truth_(dec_places)) {
    return Math.round(n * Math.pow(10, dec_places)) / Math.pow(10, dec_places);
  } else {
    return n;
  }
};
clustermap.formats.number.prefix_sign = function prefix_sign(n_str, n, plus_QMARK_) {
  if (n < 0) {
    return "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
  } else {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = plus_QMARK_;
      if (cljs.core.truth_(and__3546__auto__)) {
        return n > 0;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return "+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
    } else {
      return n_str;
    }
  }
};
clustermap.formats.number.split_thousands = function split_thousands(n_str) {
  return clojure.string.join.call(null, ",", cljs.core.map.call(null, function(p1__17912_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.str, p1__17912_SHARP_);
  }, cljs.core.reverse.call(null, cljs.core.map.call(null, cljs.core.reverse, cljs.core.partition.call(null, 3, 3, cljs.core.PersistentVector.EMPTY, cljs.core.reverse.call(null, n_str))))));
};
clustermap.formats.number.eng_notation = function() {
  var eng_notation__delegate = function(n, p__17913) {
    var map__17918 = p__17913;
    var map__17918__$1 = cljs.core.seq_QMARK_.call(null, map__17918) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17918) : map__17918;
    var sf = cljs.core.get.call(null, map__17918__$1, new cljs.core.Keyword(null, "sf", "sf", -1949491738));
    if (cljs.core.truth_(n)) {
      var sign = n > 0 ? 1 : cljs.core._EQ_.call(null, n, 0) ? 0 : n < 0 ? -1 : null;
      var abs_n = Math.abs(n);
      var vec__17919 = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(abs_n)).split(".");
      var i = cljs.core.nth.call(null, vec__17919, 0, null);
      var d = cljs.core.nth.call(null, vec__17919, 1, null);
      var exp = abs_n >= 1 ? 3 * ((cljs.core.count.call(null, i) - 1) / 3 | 0) : abs_n > 0 ? -3 * ((3 + cljs.core.count.call(null, cljs.core.take_while.call(null, function(sign, abs_n, vec__17919, i, d, map__17918, map__17918__$1, sf) {
        return function(c) {
          return cljs.core._EQ_.call(null, c, "0");
        };
      }(sign, abs_n, vec__17919, i, d, map__17918, map__17918__$1, sf), d))) / 3 | 0) : 0;
      var usig = abs_n * Math.pow(10, -1 * exp);
      var vec__17920 = cljs.core.truth_(sf) ? ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(usig)).split(".") : null;
      var usig_i = cljs.core.nth.call(null, vec__17920, 0, null);
      var usig_d = cljs.core.nth.call(null, vec__17920, 1, null);
      var sigmult = cljs.core.truth_(function() {
        var and__3546__auto__ = sf;
        if (cljs.core.truth_(and__3546__auto__)) {
          return usig > 0;
        } else {
          return and__3546__auto__;
        }
      }()) ? Math.pow(10, cljs.core.count.call(null, usig_i) - sf) : null;
      var round_usig_str = cljs.core.truth_(sigmult) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sigmult * Math.round(usig / sigmult)) : null;
      var vec__17921 = cljs.core.truth_(round_usig_str) ? round_usig_str.split(".") : null;
      var round_usig_i = cljs.core.nth.call(null, vec__17921, 0, null);
      var round_usig_d = cljs.core.nth.call(null, vec__17921, 1, null);
      var trunc_usig_str = cljs.core.truth_(round_usig_str) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.filter.call(null, cljs.core.identity, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, sf, round_usig_i), cljs.core.repeat.call(null, cljs.core.count.call(null, round_usig_i) - sf, "0"), cljs.core.count.call(null, round_usig_d) > 0 ? new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", cljs.core.take.call(null, sf - cljs.core.count.call(null, round_usig_i), round_usig_d)], null) : null], null))))) : null;
      var trunc_usig = cljs.core.truth_(trunc_usig_str) ? parseFloat(trunc_usig_str) : null;
      var sig = sign * function() {
        var or__3558__auto__ = trunc_usig;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return usig;
        }
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig, exp], null);
    } else {
      return null;
    }
  };
  var eng_notation = function(n, var_args) {
    var p__17913 = null;
    if (arguments.length > 1) {
      p__17913 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return eng_notation__delegate.call(this, n, p__17913);
  };
  eng_notation.cljs$lang$maxFixedArity = 1;
  eng_notation.cljs$lang$applyTo = function(arglist__17922) {
    var n = cljs.core.first(arglist__17922);
    var p__17913 = cljs.core.rest(arglist__17922);
    return eng_notation__delegate(n, p__17913);
  };
  eng_notation.cljs$core$IFn$_invoke$arity$variadic = eng_notation__delegate;
  return eng_notation;
}();
clustermap.formats.number.readable = function() {
  var readable__delegate = function(n, p__17923) {
    var map__17926 = p__17923;
    var map__17926__$1 = cljs.core.seq_QMARK_.call(null, map__17926) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17926) : map__17926;
    var default$ = cljs.core.get.call(null, map__17926__$1, new cljs.core.Keyword(null, "default", "default", -1987822328));
    var plus_QMARK_ = cljs.core.get.call(null, map__17926__$1, new cljs.core.Keyword(null, "plus?", "plus?", -3051327));
    var dec = cljs.core.get.call(null, map__17926__$1, new cljs.core.Keyword(null, "dec", "dec", 1888433436));
    if (cljs.core.truth_(n)) {
      var abs_n = Math.abs(n);
      var round_n = clustermap.formats.number.round_decimal.call(null, abs_n, dec);
      var round_n_str = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(round_n);
      var vec__17927 = clojure.string.split.call(null, round_n_str, /\./);
      var i_str = cljs.core.nth.call(null, vec__17927, 0, null);
      var d_str = cljs.core.nth.call(null, vec__17927, 1, null);
      var t_str = clustermap.formats.number.split_thousands.call(null, i_str);
      var t_dec_str = clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t_str, d_str], null)));
      return clustermap.formats.number.prefix_sign.call(null, t_dec_str, n, plus_QMARK_);
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__17923 = null;
    if (arguments.length > 1) {
      p__17923 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__17923);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__17928) {
    var n = cljs.core.first(arglist__17928);
    var p__17923 = cljs.core.rest(arglist__17928);
    return readable__delegate(n, p__17923);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.number.fnum = clustermap.formats.number.readable;
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var a = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__22009) {
    var opts__9486__auto__ = cljs.core.first(arglist__22009);
    var children__9487__auto__ = cljs.core.rest(arglist__22009);
    return a__delegate(opts__9486__auto__, children__9487__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var abbr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__22010) {
    var opts__9486__auto__ = cljs.core.first(arglist__22010);
    var children__9487__auto__ = cljs.core.rest(arglist__22010);
    return abbr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var address = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__22011) {
    var opts__9486__auto__ = cljs.core.first(arglist__22011);
    var children__9487__auto__ = cljs.core.rest(arglist__22011);
    return address__delegate(opts__9486__auto__, children__9487__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var area = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__22012) {
    var opts__9486__auto__ = cljs.core.first(arglist__22012);
    var children__9487__auto__ = cljs.core.rest(arglist__22012);
    return area__delegate(opts__9486__auto__, children__9487__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var article = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__22013) {
    var opts__9486__auto__ = cljs.core.first(arglist__22013);
    var children__9487__auto__ = cljs.core.rest(arglist__22013);
    return article__delegate(opts__9486__auto__, children__9487__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var aside = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__22014) {
    var opts__9486__auto__ = cljs.core.first(arglist__22014);
    var children__9487__auto__ = cljs.core.rest(arglist__22014);
    return aside__delegate(opts__9486__auto__, children__9487__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var audio = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__22015) {
    var opts__9486__auto__ = cljs.core.first(arglist__22015);
    var children__9487__auto__ = cljs.core.rest(arglist__22015);
    return audio__delegate(opts__9486__auto__, children__9487__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var b = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__22016) {
    var opts__9486__auto__ = cljs.core.first(arglist__22016);
    var children__9487__auto__ = cljs.core.rest(arglist__22016);
    return b__delegate(opts__9486__auto__, children__9487__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var base = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__22017) {
    var opts__9486__auto__ = cljs.core.first(arglist__22017);
    var children__9487__auto__ = cljs.core.rest(arglist__22017);
    return base__delegate(opts__9486__auto__, children__9487__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var bdi = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__22018) {
    var opts__9486__auto__ = cljs.core.first(arglist__22018);
    var children__9487__auto__ = cljs.core.rest(arglist__22018);
    return bdi__delegate(opts__9486__auto__, children__9487__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var bdo = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__22019) {
    var opts__9486__auto__ = cljs.core.first(arglist__22019);
    var children__9487__auto__ = cljs.core.rest(arglist__22019);
    return bdo__delegate(opts__9486__auto__, children__9487__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var big = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__22020) {
    var opts__9486__auto__ = cljs.core.first(arglist__22020);
    var children__9487__auto__ = cljs.core.rest(arglist__22020);
    return big__delegate(opts__9486__auto__, children__9487__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var blockquote = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__22021) {
    var opts__9486__auto__ = cljs.core.first(arglist__22021);
    var children__9487__auto__ = cljs.core.rest(arglist__22021);
    return blockquote__delegate(opts__9486__auto__, children__9487__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var body = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__22022) {
    var opts__9486__auto__ = cljs.core.first(arglist__22022);
    var children__9487__auto__ = cljs.core.rest(arglist__22022);
    return body__delegate(opts__9486__auto__, children__9487__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var br = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__22023) {
    var opts__9486__auto__ = cljs.core.first(arglist__22023);
    var children__9487__auto__ = cljs.core.rest(arglist__22023);
    return br__delegate(opts__9486__auto__, children__9487__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var button = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__22024) {
    var opts__9486__auto__ = cljs.core.first(arglist__22024);
    var children__9487__auto__ = cljs.core.rest(arglist__22024);
    return button__delegate(opts__9486__auto__, children__9487__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var canvas = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__22025) {
    var opts__9486__auto__ = cljs.core.first(arglist__22025);
    var children__9487__auto__ = cljs.core.rest(arglist__22025);
    return canvas__delegate(opts__9486__auto__, children__9487__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var caption = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__22026) {
    var opts__9486__auto__ = cljs.core.first(arglist__22026);
    var children__9487__auto__ = cljs.core.rest(arglist__22026);
    return caption__delegate(opts__9486__auto__, children__9487__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var cite = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__22027) {
    var opts__9486__auto__ = cljs.core.first(arglist__22027);
    var children__9487__auto__ = cljs.core.rest(arglist__22027);
    return cite__delegate(opts__9486__auto__, children__9487__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var code = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__22028) {
    var opts__9486__auto__ = cljs.core.first(arglist__22028);
    var children__9487__auto__ = cljs.core.rest(arglist__22028);
    return code__delegate(opts__9486__auto__, children__9487__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var col = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__22029) {
    var opts__9486__auto__ = cljs.core.first(arglist__22029);
    var children__9487__auto__ = cljs.core.rest(arglist__22029);
    return col__delegate(opts__9486__auto__, children__9487__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var colgroup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__22030) {
    var opts__9486__auto__ = cljs.core.first(arglist__22030);
    var children__9487__auto__ = cljs.core.rest(arglist__22030);
    return colgroup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var data = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__22031) {
    var opts__9486__auto__ = cljs.core.first(arglist__22031);
    var children__9487__auto__ = cljs.core.rest(arglist__22031);
    return data__delegate(opts__9486__auto__, children__9487__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var datalist = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__22032) {
    var opts__9486__auto__ = cljs.core.first(arglist__22032);
    var children__9487__auto__ = cljs.core.rest(arglist__22032);
    return datalist__delegate(opts__9486__auto__, children__9487__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dd = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__22033) {
    var opts__9486__auto__ = cljs.core.first(arglist__22033);
    var children__9487__auto__ = cljs.core.rest(arglist__22033);
    return dd__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var del = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__22034) {
    var opts__9486__auto__ = cljs.core.first(arglist__22034);
    var children__9487__auto__ = cljs.core.rest(arglist__22034);
    return del__delegate(opts__9486__auto__, children__9487__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dfn = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__22035) {
    var opts__9486__auto__ = cljs.core.first(arglist__22035);
    var children__9487__auto__ = cljs.core.rest(arglist__22035);
    return dfn__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var div = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__22036) {
    var opts__9486__auto__ = cljs.core.first(arglist__22036);
    var children__9487__auto__ = cljs.core.rest(arglist__22036);
    return div__delegate(opts__9486__auto__, children__9487__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dl = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__22037) {
    var opts__9486__auto__ = cljs.core.first(arglist__22037);
    var children__9487__auto__ = cljs.core.rest(arglist__22037);
    return dl__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dt = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__22038) {
    var opts__9486__auto__ = cljs.core.first(arglist__22038);
    var children__9487__auto__ = cljs.core.rest(arglist__22038);
    return dt__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var em = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__22039) {
    var opts__9486__auto__ = cljs.core.first(arglist__22039);
    var children__9487__auto__ = cljs.core.rest(arglist__22039);
    return em__delegate(opts__9486__auto__, children__9487__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var embed = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__22040) {
    var opts__9486__auto__ = cljs.core.first(arglist__22040);
    var children__9487__auto__ = cljs.core.rest(arglist__22040);
    return embed__delegate(opts__9486__auto__, children__9487__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var fieldset = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__22041) {
    var opts__9486__auto__ = cljs.core.first(arglist__22041);
    var children__9487__auto__ = cljs.core.rest(arglist__22041);
    return fieldset__delegate(opts__9486__auto__, children__9487__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var figcaption = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__22042) {
    var opts__9486__auto__ = cljs.core.first(arglist__22042);
    var children__9487__auto__ = cljs.core.rest(arglist__22042);
    return figcaption__delegate(opts__9486__auto__, children__9487__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var figure = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__22043) {
    var opts__9486__auto__ = cljs.core.first(arglist__22043);
    var children__9487__auto__ = cljs.core.rest(arglist__22043);
    return figure__delegate(opts__9486__auto__, children__9487__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var footer = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__22044) {
    var opts__9486__auto__ = cljs.core.first(arglist__22044);
    var children__9487__auto__ = cljs.core.rest(arglist__22044);
    return footer__delegate(opts__9486__auto__, children__9487__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var form = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__22045) {
    var opts__9486__auto__ = cljs.core.first(arglist__22045);
    var children__9487__auto__ = cljs.core.rest(arglist__22045);
    return form__delegate(opts__9486__auto__, children__9487__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h1 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__22046) {
    var opts__9486__auto__ = cljs.core.first(arglist__22046);
    var children__9487__auto__ = cljs.core.rest(arglist__22046);
    return h1__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h2 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__22047) {
    var opts__9486__auto__ = cljs.core.first(arglist__22047);
    var children__9487__auto__ = cljs.core.rest(arglist__22047);
    return h2__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h3 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__22048) {
    var opts__9486__auto__ = cljs.core.first(arglist__22048);
    var children__9487__auto__ = cljs.core.rest(arglist__22048);
    return h3__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h4 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__22049) {
    var opts__9486__auto__ = cljs.core.first(arglist__22049);
    var children__9487__auto__ = cljs.core.rest(arglist__22049);
    return h4__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h5 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__22050) {
    var opts__9486__auto__ = cljs.core.first(arglist__22050);
    var children__9487__auto__ = cljs.core.rest(arglist__22050);
    return h5__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h6 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__22051) {
    var opts__9486__auto__ = cljs.core.first(arglist__22051);
    var children__9487__auto__ = cljs.core.rest(arglist__22051);
    return h6__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var head = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__22052) {
    var opts__9486__auto__ = cljs.core.first(arglist__22052);
    var children__9487__auto__ = cljs.core.rest(arglist__22052);
    return head__delegate(opts__9486__auto__, children__9487__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var header = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__22053) {
    var opts__9486__auto__ = cljs.core.first(arglist__22053);
    var children__9487__auto__ = cljs.core.rest(arglist__22053);
    return header__delegate(opts__9486__auto__, children__9487__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var hr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__22054) {
    var opts__9486__auto__ = cljs.core.first(arglist__22054);
    var children__9487__auto__ = cljs.core.rest(arglist__22054);
    return hr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var html = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__22055) {
    var opts__9486__auto__ = cljs.core.first(arglist__22055);
    var children__9487__auto__ = cljs.core.rest(arglist__22055);
    return html__delegate(opts__9486__auto__, children__9487__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var i = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__22056) {
    var opts__9486__auto__ = cljs.core.first(arglist__22056);
    var children__9487__auto__ = cljs.core.rest(arglist__22056);
    return i__delegate(opts__9486__auto__, children__9487__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var iframe = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__22057) {
    var opts__9486__auto__ = cljs.core.first(arglist__22057);
    var children__9487__auto__ = cljs.core.rest(arglist__22057);
    return iframe__delegate(opts__9486__auto__, children__9487__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var img = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__22058) {
    var opts__9486__auto__ = cljs.core.first(arglist__22058);
    var children__9487__auto__ = cljs.core.rest(arglist__22058);
    return img__delegate(opts__9486__auto__, children__9487__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ins = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__22059) {
    var opts__9486__auto__ = cljs.core.first(arglist__22059);
    var children__9487__auto__ = cljs.core.rest(arglist__22059);
    return ins__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var kbd = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__22060) {
    var opts__9486__auto__ = cljs.core.first(arglist__22060);
    var children__9487__auto__ = cljs.core.rest(arglist__22060);
    return kbd__delegate(opts__9486__auto__, children__9487__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var keygen = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__22061) {
    var opts__9486__auto__ = cljs.core.first(arglist__22061);
    var children__9487__auto__ = cljs.core.rest(arglist__22061);
    return keygen__delegate(opts__9486__auto__, children__9487__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var label = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__22062) {
    var opts__9486__auto__ = cljs.core.first(arglist__22062);
    var children__9487__auto__ = cljs.core.rest(arglist__22062);
    return label__delegate(opts__9486__auto__, children__9487__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var legend = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__22063) {
    var opts__9486__auto__ = cljs.core.first(arglist__22063);
    var children__9487__auto__ = cljs.core.rest(arglist__22063);
    return legend__delegate(opts__9486__auto__, children__9487__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var li = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__22064) {
    var opts__9486__auto__ = cljs.core.first(arglist__22064);
    var children__9487__auto__ = cljs.core.rest(arglist__22064);
    return li__delegate(opts__9486__auto__, children__9487__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var link = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__22065) {
    var opts__9486__auto__ = cljs.core.first(arglist__22065);
    var children__9487__auto__ = cljs.core.rest(arglist__22065);
    return link__delegate(opts__9486__auto__, children__9487__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var main = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__22066) {
    var opts__9486__auto__ = cljs.core.first(arglist__22066);
    var children__9487__auto__ = cljs.core.rest(arglist__22066);
    return main__delegate(opts__9486__auto__, children__9487__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var map = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__22067) {
    var opts__9486__auto__ = cljs.core.first(arglist__22067);
    var children__9487__auto__ = cljs.core.rest(arglist__22067);
    return map__delegate(opts__9486__auto__, children__9487__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var mark = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__22068) {
    var opts__9486__auto__ = cljs.core.first(arglist__22068);
    var children__9487__auto__ = cljs.core.rest(arglist__22068);
    return mark__delegate(opts__9486__auto__, children__9487__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var menu = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__22069) {
    var opts__9486__auto__ = cljs.core.first(arglist__22069);
    var children__9487__auto__ = cljs.core.rest(arglist__22069);
    return menu__delegate(opts__9486__auto__, children__9487__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var menuitem = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__22070) {
    var opts__9486__auto__ = cljs.core.first(arglist__22070);
    var children__9487__auto__ = cljs.core.rest(arglist__22070);
    return menuitem__delegate(opts__9486__auto__, children__9487__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var meta = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__22071) {
    var opts__9486__auto__ = cljs.core.first(arglist__22071);
    var children__9487__auto__ = cljs.core.rest(arglist__22071);
    return meta__delegate(opts__9486__auto__, children__9487__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var meter = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__22072) {
    var opts__9486__auto__ = cljs.core.first(arglist__22072);
    var children__9487__auto__ = cljs.core.rest(arglist__22072);
    return meter__delegate(opts__9486__auto__, children__9487__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var nav = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__22073) {
    var opts__9486__auto__ = cljs.core.first(arglist__22073);
    var children__9487__auto__ = cljs.core.rest(arglist__22073);
    return nav__delegate(opts__9486__auto__, children__9487__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var noscript = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__22074) {
    var opts__9486__auto__ = cljs.core.first(arglist__22074);
    var children__9487__auto__ = cljs.core.rest(arglist__22074);
    return noscript__delegate(opts__9486__auto__, children__9487__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var object = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__22075) {
    var opts__9486__auto__ = cljs.core.first(arglist__22075);
    var children__9487__auto__ = cljs.core.rest(arglist__22075);
    return object__delegate(opts__9486__auto__, children__9487__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ol = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__22076) {
    var opts__9486__auto__ = cljs.core.first(arglist__22076);
    var children__9487__auto__ = cljs.core.rest(arglist__22076);
    return ol__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var optgroup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__22077) {
    var opts__9486__auto__ = cljs.core.first(arglist__22077);
    var children__9487__auto__ = cljs.core.rest(arglist__22077);
    return optgroup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var output = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__22078) {
    var opts__9486__auto__ = cljs.core.first(arglist__22078);
    var children__9487__auto__ = cljs.core.rest(arglist__22078);
    return output__delegate(opts__9486__auto__, children__9487__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var p = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__22079) {
    var opts__9486__auto__ = cljs.core.first(arglist__22079);
    var children__9487__auto__ = cljs.core.rest(arglist__22079);
    return p__delegate(opts__9486__auto__, children__9487__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var param = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__22080) {
    var opts__9486__auto__ = cljs.core.first(arglist__22080);
    var children__9487__auto__ = cljs.core.rest(arglist__22080);
    return param__delegate(opts__9486__auto__, children__9487__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var pre = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__22081) {
    var opts__9486__auto__ = cljs.core.first(arglist__22081);
    var children__9487__auto__ = cljs.core.rest(arglist__22081);
    return pre__delegate(opts__9486__auto__, children__9487__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var progress = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__22082) {
    var opts__9486__auto__ = cljs.core.first(arglist__22082);
    var children__9487__auto__ = cljs.core.rest(arglist__22082);
    return progress__delegate(opts__9486__auto__, children__9487__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var q = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__22083) {
    var opts__9486__auto__ = cljs.core.first(arglist__22083);
    var children__9487__auto__ = cljs.core.rest(arglist__22083);
    return q__delegate(opts__9486__auto__, children__9487__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rp = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__22084) {
    var opts__9486__auto__ = cljs.core.first(arglist__22084);
    var children__9487__auto__ = cljs.core.rest(arglist__22084);
    return rp__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rt = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__22085) {
    var opts__9486__auto__ = cljs.core.first(arglist__22085);
    var children__9487__auto__ = cljs.core.rest(arglist__22085);
    return rt__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ruby = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__22086) {
    var opts__9486__auto__ = cljs.core.first(arglist__22086);
    var children__9487__auto__ = cljs.core.rest(arglist__22086);
    return ruby__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var s = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__22087) {
    var opts__9486__auto__ = cljs.core.first(arglist__22087);
    var children__9487__auto__ = cljs.core.rest(arglist__22087);
    return s__delegate(opts__9486__auto__, children__9487__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var samp = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__22088) {
    var opts__9486__auto__ = cljs.core.first(arglist__22088);
    var children__9487__auto__ = cljs.core.rest(arglist__22088);
    return samp__delegate(opts__9486__auto__, children__9487__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var script = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__22089) {
    var opts__9486__auto__ = cljs.core.first(arglist__22089);
    var children__9487__auto__ = cljs.core.rest(arglist__22089);
    return script__delegate(opts__9486__auto__, children__9487__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var section = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__22090) {
    var opts__9486__auto__ = cljs.core.first(arglist__22090);
    var children__9487__auto__ = cljs.core.rest(arglist__22090);
    return section__delegate(opts__9486__auto__, children__9487__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var select = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__22091) {
    var opts__9486__auto__ = cljs.core.first(arglist__22091);
    var children__9487__auto__ = cljs.core.rest(arglist__22091);
    return select__delegate(opts__9486__auto__, children__9487__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var small = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__22092) {
    var opts__9486__auto__ = cljs.core.first(arglist__22092);
    var children__9487__auto__ = cljs.core.rest(arglist__22092);
    return small__delegate(opts__9486__auto__, children__9487__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var source = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__22093) {
    var opts__9486__auto__ = cljs.core.first(arglist__22093);
    var children__9487__auto__ = cljs.core.rest(arglist__22093);
    return source__delegate(opts__9486__auto__, children__9487__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var span = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__22094) {
    var opts__9486__auto__ = cljs.core.first(arglist__22094);
    var children__9487__auto__ = cljs.core.rest(arglist__22094);
    return span__delegate(opts__9486__auto__, children__9487__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var strong = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__22095) {
    var opts__9486__auto__ = cljs.core.first(arglist__22095);
    var children__9487__auto__ = cljs.core.rest(arglist__22095);
    return strong__delegate(opts__9486__auto__, children__9487__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var style = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__22096) {
    var opts__9486__auto__ = cljs.core.first(arglist__22096);
    var children__9487__auto__ = cljs.core.rest(arglist__22096);
    return style__delegate(opts__9486__auto__, children__9487__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var sub = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__22097) {
    var opts__9486__auto__ = cljs.core.first(arglist__22097);
    var children__9487__auto__ = cljs.core.rest(arglist__22097);
    return sub__delegate(opts__9486__auto__, children__9487__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var summary = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__22098) {
    var opts__9486__auto__ = cljs.core.first(arglist__22098);
    var children__9487__auto__ = cljs.core.rest(arglist__22098);
    return summary__delegate(opts__9486__auto__, children__9487__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var sup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__22099) {
    var opts__9486__auto__ = cljs.core.first(arglist__22099);
    var children__9487__auto__ = cljs.core.rest(arglist__22099);
    return sup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var table = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__22100) {
    var opts__9486__auto__ = cljs.core.first(arglist__22100);
    var children__9487__auto__ = cljs.core.rest(arglist__22100);
    return table__delegate(opts__9486__auto__, children__9487__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tbody = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__22101) {
    var opts__9486__auto__ = cljs.core.first(arglist__22101);
    var children__9487__auto__ = cljs.core.rest(arglist__22101);
    return tbody__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var td = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__22102) {
    var opts__9486__auto__ = cljs.core.first(arglist__22102);
    var children__9487__auto__ = cljs.core.rest(arglist__22102);
    return td__delegate(opts__9486__auto__, children__9487__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tfoot = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__22103) {
    var opts__9486__auto__ = cljs.core.first(arglist__22103);
    var children__9487__auto__ = cljs.core.rest(arglist__22103);
    return tfoot__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var th = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__22104) {
    var opts__9486__auto__ = cljs.core.first(arglist__22104);
    var children__9487__auto__ = cljs.core.rest(arglist__22104);
    return th__delegate(opts__9486__auto__, children__9487__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var thead = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__22105) {
    var opts__9486__auto__ = cljs.core.first(arglist__22105);
    var children__9487__auto__ = cljs.core.rest(arglist__22105);
    return thead__delegate(opts__9486__auto__, children__9487__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var time = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__22106) {
    var opts__9486__auto__ = cljs.core.first(arglist__22106);
    var children__9487__auto__ = cljs.core.rest(arglist__22106);
    return time__delegate(opts__9486__auto__, children__9487__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var title = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__22107) {
    var opts__9486__auto__ = cljs.core.first(arglist__22107);
    var children__9487__auto__ = cljs.core.rest(arglist__22107);
    return title__delegate(opts__9486__auto__, children__9487__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__22108) {
    var opts__9486__auto__ = cljs.core.first(arglist__22108);
    var children__9487__auto__ = cljs.core.rest(arglist__22108);
    return tr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var track = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__22109) {
    var opts__9486__auto__ = cljs.core.first(arglist__22109);
    var children__9487__auto__ = cljs.core.rest(arglist__22109);
    return track__delegate(opts__9486__auto__, children__9487__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var u = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__22110) {
    var opts__9486__auto__ = cljs.core.first(arglist__22110);
    var children__9487__auto__ = cljs.core.rest(arglist__22110);
    return u__delegate(opts__9486__auto__, children__9487__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ul = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__22111) {
    var opts__9486__auto__ = cljs.core.first(arglist__22111);
    var children__9487__auto__ = cljs.core.rest(arglist__22111);
    return ul__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var var$ = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__22112) {
    var opts__9486__auto__ = cljs.core.first(arglist__22112);
    var children__9487__auto__ = cljs.core.rest(arglist__22112);
    return var$__delegate(opts__9486__auto__, children__9487__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var video = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__22113) {
    var opts__9486__auto__ = cljs.core.first(arglist__22113);
    var children__9487__auto__ = cljs.core.rest(arglist__22113);
    return video__delegate(opts__9486__auto__, children__9487__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var wbr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__22114) {
    var opts__9486__auto__ = cljs.core.first(arglist__22114);
    var children__9487__auto__ = cljs.core.rest(arglist__22114);
    return wbr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var circle = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__22115) {
    var opts__9486__auto__ = cljs.core.first(arglist__22115);
    var children__9487__auto__ = cljs.core.rest(arglist__22115);
    return circle__delegate(opts__9486__auto__, children__9487__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ellipse = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__22116) {
    var opts__9486__auto__ = cljs.core.first(arglist__22116);
    var children__9487__auto__ = cljs.core.rest(arglist__22116);
    return ellipse__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var g = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__22117) {
    var opts__9486__auto__ = cljs.core.first(arglist__22117);
    var children__9487__auto__ = cljs.core.rest(arglist__22117);
    return g__delegate(opts__9486__auto__, children__9487__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var line = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__22118) {
    var opts__9486__auto__ = cljs.core.first(arglist__22118);
    var children__9487__auto__ = cljs.core.rest(arglist__22118);
    return line__delegate(opts__9486__auto__, children__9487__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var path = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__22119) {
    var opts__9486__auto__ = cljs.core.first(arglist__22119);
    var children__9487__auto__ = cljs.core.rest(arglist__22119);
    return path__delegate(opts__9486__auto__, children__9487__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var polyline = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__22120) {
    var opts__9486__auto__ = cljs.core.first(arglist__22120);
    var children__9487__auto__ = cljs.core.rest(arglist__22120);
    return polyline__delegate(opts__9486__auto__, children__9487__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rect = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__22121) {
    var opts__9486__auto__ = cljs.core.first(arglist__22121);
    var children__9487__auto__ = cljs.core.rest(arglist__22121);
    return rect__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var svg = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__22122) {
    var opts__9486__auto__ = cljs.core.first(arglist__22122);
    var children__9487__auto__ = cljs.core.rest(arglist__22122);
    return svg__delegate(opts__9486__auto__, children__9487__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var text = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__22123) {
    var opts__9486__auto__ = cljs.core.first(arglist__22123);
    var children__9487__auto__ = cljs.core.rest(arglist__22123);
    return text__delegate(opts__9486__auto__, children__9487__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var defs = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__22124) {
    var opts__9486__auto__ = cljs.core.first(arglist__22124);
    var children__9487__auto__ = cljs.core.rest(arglist__22124);
    return defs__delegate(opts__9486__auto__, children__9487__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var linearGradient = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__22125) {
    var opts__9486__auto__ = cljs.core.first(arglist__22125);
    var children__9487__auto__ = cljs.core.rest(arglist__22125);
    return linearGradient__delegate(opts__9486__auto__, children__9487__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var polygon = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__22126) {
    var opts__9486__auto__ = cljs.core.first(arglist__22126);
    var children__9487__auto__ = cljs.core.rest(arglist__22126);
    return polygon__delegate(opts__9486__auto__, children__9487__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var radialGradient = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__22127) {
    var opts__9486__auto__ = cljs.core.first(arglist__22127);
    var children__9487__auto__ = cljs.core.rest(arglist__22127);
    return radialGradient__delegate(opts__9486__auto__, children__9487__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var stop = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__22128) {
    var opts__9486__auto__ = cljs.core.first(arglist__22128);
    var children__9487__auto__ = cljs.core.rest(arglist__22128);
    return stop__delegate(opts__9486__auto__, children__9487__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tspan = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__22129) {
    var opts__9486__auto__ = cljs.core.first(arglist__22129);
    var children__9487__auto__ = cljs.core.rest(arglist__22129);
    return tspan__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj22131 = {};
  return obj22131;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.display_name[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.display_name["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj22133 = {};
  return obj22133;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.init_state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.init_state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj22135 = {};
  return obj22135;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.should_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.should_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj22137 = {};
  return obj22137;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_mount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_mount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj22139 = {};
  return obj22139;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.did_mount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.did_mount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj22141 = {};
  return obj22141;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_unmount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_unmount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj22143 = {};
  return obj22143;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj22145 = {};
  return obj22145;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.did_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.did_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj22147 = {};
  return obj22147;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_receive_props[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_receive_props["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj22149 = {};
  return obj22149;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.render[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.render["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj22151 = {};
  return obj22151;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.render_state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.render_state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj22153 = {};
  return obj22153;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj22155 = {};
  return obj22155;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj22157 = {};
  return obj22157;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_render_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_render_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_render_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_render_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj22159 = {};
  return obj22159;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj22161 = {};
  return obj22161;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._get_queue[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._get_queue["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj22163 = {};
  return obj22163;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._value[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._value["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj22165 = {};
  return obj22165;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._path[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._path["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj22167 = {};
  return obj22167;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3546__auto__ = value;
      if (and__3546__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4185__auto__ = value == null ? null : value;
      return function() {
        var or__3558__auto__ = om.core._to_cursor[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._to_cursor["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3546__auto__ = value;
      if (and__3546__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4185__auto__ = value == null ? null : value;
      return function() {
        var or__3558__auto__ = om.core._to_cursor[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._to_cursor["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj22169 = {};
  return obj22169;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._derive[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._derive["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj22171 = {};
  return obj22171;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._transact_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj22173 = {};
  return obj22173;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._listen_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._notify_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__22175 = state;
    if (G__22175) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22175.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__22175.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__22175);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__22175);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__22177 = x;
  if (G__22177) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__22177.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__22177.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__22177);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__22177);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_22179 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22179;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__22181 = state;
    G__22181["__om_prev_state"] = state["__om_state"];
    G__22181["__om_state"] = pending_state;
    G__22181["__om_pending_state"] = null;
    return G__22181;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3558__auto__ = props;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3558__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__22182 = c;
    if (G__22182) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22182.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__22182.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__22182);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__22182);
    }
  }()) {
    var state_22209 = this$.state;
    var _STAR_read_enabled_STAR_22183_22210 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3558__auto__ = state_22209["__om_prev_state"];
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return state_22209["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22183_22210;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__22184 = c;
    if (G__22184) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22184.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__22184.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__22184);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__22184);
    }
  }()) {
    var _STAR_read_enabled_STAR_22185 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22185;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__22186 = c;
    if (G__22186) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22186.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__22186.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__22186);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__22186);
    }
  }()) {
    var _STAR_read_enabled_STAR_22187 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22187;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_22188 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__22189 = c;
      if (G__22189) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__22189.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__22189.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__22189);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__22189);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22188;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_22190 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__22191 = c;
      if (G__22191) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__22191.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__22191.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__22191);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__22191);
      }
    }()) {
      var _STAR_parent_STAR_22192 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_22193 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_22194 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_22194;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_22193;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_22192;
      }
    } else {
      if (function() {
        var G__22195 = c;
        if (G__22195) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__22195.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__22195.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__22195);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__22195);
        }
      }()) {
        var _STAR_parent_STAR_22196 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_22197 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_22198 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_22198;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_22197;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_22196;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22190;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_22211 = om.core.children.call(null, this$);
  if (function() {
    var G__22199 = c_22211;
    if (G__22199) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22199.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__22199.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__22199);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__22199);
    }
  }()) {
    var state_22212 = this$.state;
    var _STAR_read_enabled_STAR_22200_22213 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_22211, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22200_22213;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3558__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__22201 = c;
    if (G__22201) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22201.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__22201.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__22201);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__22201);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_22202 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22202;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3558__auto__ = id;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__22203 = c;
    if (G__22203) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22203.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__22203.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__22203);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__22203);
    }
  }()) {
    var _STAR_read_enabled_STAR_22204 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22204;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__22205 = c;
    if (G__22205) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22205.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__22205.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__22205);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__22205);
    }
  }()) {
    var _STAR_read_enabled_STAR_22206 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22206;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_22214 = om.core.children.call(null, this$);
  if (function() {
    var G__22207 = c_22214;
    if (G__22207) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22207.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__22207.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__22207);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__22207);
    }
  }()) {
    var _STAR_read_enabled_STAR_22208_22215 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_22214);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22208_22215;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x22219 = obj;
  x22219.om$core$IGetState$ = true;
  x22219.om$core$IGetState$_get_state$arity$1 = function(x22219) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3558__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x22219);
  x22219.om$core$IGetState$_get_state$arity$2 = function(x22219) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x22219);
  x22219.om$core$IGetRenderState$ = true;
  x22219.om$core$IGetRenderState$_get_render_state$arity$1 = function(x22219) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x22219);
  x22219.om$core$IGetRenderState$_get_render_state$arity$2 = function(x22219) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x22219);
  x22219.om$core$ISetState$ = true;
  x22219.om$core$ISetState$_set_state_BANG_$arity$3 = function(x22219) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_22220 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = !(app_state == null);
          if (and__3546__auto__) {
            return render;
          } else {
            return and__3546__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22220;
      }
    };
  }(x22219);
  x22219.om$core$ISetState$_set_state_BANG_$arity$4 = function(x22219) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_22221 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = !(app_state == null);
          if (and__3546__auto__) {
            return render;
          } else {
            return and__3546__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22221;
      }
    };
  }(x22219);
  return x22219;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__22223) {
          var vec__22224 = p__22223;
          var k = cljs.core.nth.call(null, vec__22224, 0, null);
          var v = cljs.core.nth.call(null, vec__22224, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__22225 = null;
  var G__22225__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22225__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22225 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22225__2.call(this, self__, k);
      case 3:
        return G__22225__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22225.cljs$core$IFn$_invoke$arity$2 = G__22225__2;
  G__22225.cljs$core$IFn$_invoke$arity$3 = G__22225__3;
  return G__22225;
}();
om.core.MapCursor.prototype.apply = function(self__, args22222) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22222)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__22227 = null;
  var G__22227__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22227__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22227 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22227__2.call(this, self__, k);
      case 3:
        return G__22227__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22227.cljs$core$IFn$_invoke$arity$2 = G__22227__2;
  G__22227.cljs$core$IFn$_invoke$arity$3 = G__22227__3;
  return G__22227;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args22226) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22226)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x22229 = cljs.core.clone.call(null, val);
  x22229.cljs$core$IEquiv$ = true;
  x22229.cljs$core$IEquiv$_equiv$arity$2 = function(x22229) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x22229);
  x22229.om$core$ITransact$ = true;
  x22229.om$core$ITransact$_transact_BANG_$arity$4 = function(x22229) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x22229);
  x22229.om$core$ICursor$ = true;
  x22229.om$core$ICursor$_path$arity$1 = function(x22229) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x22229);
  x22229.om$core$ICursor$_state$arity$1 = function(x22229) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x22229);
  x22229.cljs$core$IDeref$ = true;
  x22229.cljs$core$IDeref$_deref$arity$1 = function(x22229) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x22229);
  return x22229;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__22232 = val;
        if (G__22232) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__22232.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__22232.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__22232);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__22232);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__22233 = val;
              if (G__22233) {
                var bit__4208__auto__ = G__22233.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4208__auto__ || G__22233.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__22233.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__22233);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__22233);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__22238 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__22239 = null;
  var count__22240 = 0;
  var i__22241 = 0;
  while (true) {
    if (i__22241 < count__22240) {
      var f = cljs.core._nth.call(null, chunk__22239, i__22241);
      f.call(null);
      var G__22242 = seq__22238;
      var G__22243 = chunk__22239;
      var G__22244 = count__22240;
      var G__22245 = i__22241 + 1;
      seq__22238 = G__22242;
      chunk__22239 = G__22243;
      count__22240 = G__22244;
      i__22241 = G__22245;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__22238);
      if (temp__4126__auto__) {
        var seq__22238__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22238__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__22238__$1);
          var G__22246 = cljs.core.chunk_rest.call(null, seq__22238__$1);
          var G__22247 = c__4314__auto__;
          var G__22248 = cljs.core.count.call(null, c__4314__auto__);
          var G__22249 = 0;
          seq__22238 = G__22246;
          chunk__22239 = G__22247;
          count__22240 = G__22248;
          i__22241 = G__22249;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__22238__$1);
          f.call(null);
          var G__22250 = cljs.core.next.call(null, seq__22238__$1);
          var G__22251 = null;
          var G__22252 = 0;
          var G__22253 = 0;
          seq__22238 = G__22250;
          chunk__22239 = G__22251;
          count__22240 = G__22252;
          i__22241 = G__22253;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3558__auto__ = function() {
      var G__22258 = x;
      if (G__22258) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__22258.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__22258.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__22258);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__22258);
      }
    }();
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var G__22259 = x;
      if (G__22259) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto____$1 = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return G__22259.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__22259.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__22259);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__22259);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3558__auto__ = descriptor;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_22264 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22264;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__22265 = m;
      var map__22265__$1 = cljs.core.seq_QMARK_.call(null, map__22265) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22265) : map__22265;
      var opts = cljs.core.get.call(null, map__22265__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__22265__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__22265__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__22265__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3558__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__22265, map__22265__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_22266 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22266;
          }
        };
      }(map__22265, map__22265__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__22265, map__22265__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_22267 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22267;
          }
        };
      }(map__22265, map__22265__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_22269 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_22269;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__22278 = state;
    if (G__22278) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__22278.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__22278.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__22278);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__22278);
    }
  }()) {
  } else {
    var listeners_22286 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_22287 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x22279_22288 = state;
    x22279_22288.om$core$IRenderQueue$ = true;
    x22279_22288.om$core$IRenderQueue$_get_queue$arity$1 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_22287);
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
    x22279_22288.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_22287), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_22287, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
    x22279_22288.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_22287, cljs.core.empty);
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
    x22279_22288.om$core$INotify$ = true;
    x22279_22288.om$core$INotify$_listen_BANG_$arity$3 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_22286, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
    x22279_22288.om$core$INotify$_unlisten_BANG_$arity$2 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_22286, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
    x22279_22288.om$core$INotify$_notify_BANG_$arity$3 = function(x22279_22288, listeners_22286, render_queue_22287) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__22280_22289 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_22286));
        var chunk__22281_22290 = null;
        var count__22282_22291 = 0;
        var i__22283_22292 = 0;
        while (true) {
          if (i__22283_22292 < count__22282_22291) {
            var vec__22284_22293 = cljs.core._nth.call(null, chunk__22281_22290, i__22283_22292);
            var __22294 = cljs.core.nth.call(null, vec__22284_22293, 0, null);
            var f_22295 = cljs.core.nth.call(null, vec__22284_22293, 1, null);
            f_22295.call(null, tx_data, root_cursor);
            var G__22296 = seq__22280_22289;
            var G__22297 = chunk__22281_22290;
            var G__22298 = count__22282_22291;
            var G__22299 = i__22283_22292 + 1;
            seq__22280_22289 = G__22296;
            chunk__22281_22290 = G__22297;
            count__22282_22291 = G__22298;
            i__22283_22292 = G__22299;
            continue;
          } else {
            var temp__4126__auto___22300 = cljs.core.seq.call(null, seq__22280_22289);
            if (temp__4126__auto___22300) {
              var seq__22280_22301__$1 = temp__4126__auto___22300;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__22280_22301__$1)) {
                var c__4314__auto___22302 = cljs.core.chunk_first.call(null, seq__22280_22301__$1);
                var G__22303 = cljs.core.chunk_rest.call(null, seq__22280_22301__$1);
                var G__22304 = c__4314__auto___22302;
                var G__22305 = cljs.core.count.call(null, c__4314__auto___22302);
                var G__22306 = 0;
                seq__22280_22289 = G__22303;
                chunk__22281_22290 = G__22304;
                count__22282_22291 = G__22305;
                i__22283_22292 = G__22306;
                continue;
              } else {
                var vec__22285_22307 = cljs.core.first.call(null, seq__22280_22301__$1);
                var __22308 = cljs.core.nth.call(null, vec__22285_22307, 0, null);
                var f_22309 = cljs.core.nth.call(null, vec__22285_22307, 1, null);
                f_22309.call(null, tx_data, root_cursor);
                var G__22310 = cljs.core.next.call(null, seq__22280_22301__$1);
                var G__22311 = null;
                var G__22312 = 0;
                var G__22313 = 0;
                seq__22280_22289 = G__22310;
                chunk__22281_22290 = G__22311;
                count__22282_22291 = G__22312;
                i__22283_22292 = G__22313;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x22279_22288, listeners_22286, render_queue_22287);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__22314) {
  var map__22329 = p__22314;
  var map__22329__$1 = cljs.core.seq_QMARK_.call(null, map__22329) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22329) : map__22329;
  var options = map__22329__$1;
  var instrument = cljs.core.get.call(null, map__22329__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__22329__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__22329__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__22329__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__22343 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__22343, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__22343, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__22330 = value;
    if (G__22330) {
      var bit__4208__auto__ = G__22330.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4208__auto__ || G__22330.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__22330.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__22330);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__22330);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__22329, map__22329__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_22337 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_22338 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_22338;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_22337;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__22339_22344 = cljs.core.seq.call(null, queue);
        var chunk__22340_22345 = null;
        var count__22341_22346 = 0;
        var i__22342_22347 = 0;
        while (true) {
          if (i__22342_22347 < count__22341_22346) {
            var c_22348 = cljs.core._nth.call(null, chunk__22340_22345, i__22342_22347);
            if (cljs.core.truth_(c_22348.isMounted())) {
              c_22348.forceUpdate();
            } else {
            }
            var G__22349 = seq__22339_22344;
            var G__22350 = chunk__22340_22345;
            var G__22351 = count__22341_22346;
            var G__22352 = i__22342_22347 + 1;
            seq__22339_22344 = G__22349;
            chunk__22340_22345 = G__22350;
            count__22341_22346 = G__22351;
            i__22342_22347 = G__22352;
            continue;
          } else {
            var temp__4126__auto___22353 = cljs.core.seq.call(null, seq__22339_22344);
            if (temp__4126__auto___22353) {
              var seq__22339_22354__$1 = temp__4126__auto___22353;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__22339_22354__$1)) {
                var c__4314__auto___22355 = cljs.core.chunk_first.call(null, seq__22339_22354__$1);
                var G__22356 = cljs.core.chunk_rest.call(null, seq__22339_22354__$1);
                var G__22357 = c__4314__auto___22355;
                var G__22358 = cljs.core.count.call(null, c__4314__auto___22355);
                var G__22359 = 0;
                seq__22339_22344 = G__22356;
                chunk__22340_22345 = G__22357;
                count__22341_22346 = G__22358;
                i__22342_22347 = G__22359;
                continue;
              } else {
                var c_22360 = cljs.core.first.call(null, seq__22339_22354__$1);
                if (cljs.core.truth_(c_22360.isMounted())) {
                  c_22360.forceUpdate();
                } else {
                }
                var G__22361 = cljs.core.next.call(null, seq__22339_22354__$1);
                var G__22362 = null;
                var G__22363 = 0;
                var G__22364 = 0;
                seq__22339_22344 = G__22361;
                chunk__22340_22345 = G__22362;
                count__22341_22346 = G__22363;
                i__22342_22347 = G__22364;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__22329, map__22329__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__22329, map__22329__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__22329, map__22329__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__22329, map__22329__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__22329, map__22329__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("om_tools.core");
goog.require("cljs.core");
goog.require("plumbing.core");
goog.require("plumbing.core");
goog.require("plumbing.fnk.schema");
goog.require("om.core");
goog.require("om.core");
om_tools.core.state_proxy = function state_proxy(owner) {
  if (cljs.core.truth_(owner)) {
    var get_state = function() {
      return om.core.get_state.call(null, owner);
    };
    if (typeof om_tools.core.t22950 !== "undefined") {
    } else {
      om_tools.core.t22950 = function(get_state, owner, state_proxy, meta22951) {
        this.get_state = get_state;
        this.owner = owner;
        this.state_proxy = state_proxy;
        this.meta22951 = meta22951;
        this.cljs$lang$protocol_mask$partition1$ = 98304;
        this.cljs$lang$protocol_mask$partition0$ = 425984;
      };
      om_tools.core.t22950.cljs$lang$type = true;
      om_tools.core.t22950.cljs$lang$ctorStr = "om-tools.core/t22950";
      om_tools.core.t22950.cljs$lang$ctorPrWriter = function(get_state) {
        return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "om-tools.core/t22950");
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(get_state) {
        return function(s, f) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null)));
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(get_state) {
        return function(s, f, x) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x));
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(get_state) {
        return function(s, f, x, y) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, f.call(null, self__.get_state.call(null), x, y));
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(get_state) {
        return function(s, f, x, y, more) {
          var self__ = this;
          var s__$1 = this;
          return cljs.core._reset_BANG_.call(null, s__$1, cljs.core.apply.call(null, f, self__.get_state.call(null), x, y, more));
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(get_state) {
        return function(_, v) {
          var self__ = this;
          var ___$1 = this;
          return om.core.set_state_BANG_.call(null, self__.owner, v);
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$IDeref$_deref$arity$1 = function(get_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.get_state.call(null);
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$IMeta$_meta$arity$1 = function(get_state) {
        return function(_22952) {
          var self__ = this;
          var _22952__$1 = this;
          return self__.meta22951;
        };
      }(get_state);
      om_tools.core.t22950.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(get_state) {
        return function(_22952, meta22951__$1) {
          var self__ = this;
          var _22952__$1 = this;
          return new om_tools.core.t22950(self__.get_state, self__.owner, self__.state_proxy, meta22951__$1);
        };
      }(get_state);
      om_tools.core.__GT_t22950 = function(get_state) {
        return function __GT_t22950(get_state__$1, owner__$1, state_proxy__$1, meta22951) {
          return new om_tools.core.t22950(get_state__$1, owner__$1, state_proxy__$1, meta22951);
        };
      }(get_state);
    }
    return new om_tools.core.t22950(get_state, owner, state_proxy, null);
  } else {
    return null;
  }
};
om_tools.core.set_state_QMARK__BANG_ = function() {
  var set_state_QMARK__BANG_ = null;
  var set_state_QMARK__BANG___2 = function(owner, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, v);
    }
  };
  var set_state_QMARK__BANG___3 = function(owner, korks, v) {
    if (cljs.core._EQ_.call(null, v, om.core.get_state.call(null, owner, korks))) {
      return null;
    } else {
      return om.core.set_state_BANG_.call(null, owner, korks, v);
    }
  };
  set_state_QMARK__BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_QMARK__BANG___2.call(this, owner, korks);
      case 3:
        return set_state_QMARK__BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_QMARK__BANG___2;
  set_state_QMARK__BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_QMARK__BANG___3;
  return set_state_QMARK__BANG_;
}();
goog.provide("clustermap.ordered_resource");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.ordered_resource.IOrderedResource = function() {
  var obj18009 = {};
  return obj18009;
}();
clustermap.ordered_resource.add_request = function add_request(this$, ch) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$add_request$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$add_request$arity$2(this$, ch);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.add_request[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.add_request["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.add-request", this$);
        }
      }
    }().call(null, this$, ch);
  }
};
clustermap.ordered_resource.get_response_chan = function get_response_chan(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.get_response_chan[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.get_response_chan["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.get-response-chan", this$);
        }
      }
    }().call(null, this$);
  }
};
clustermap.ordered_resource.close = function close(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$close$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$close$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.close[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.close["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.close", this$);
        }
      }
    }().call(null, this$);
  }
};
clustermap.ordered_resource.DiscardStaleResource = function(name, ticket, response_chan) {
  this.name = name;
  this.ticket = ticket;
  this.response_chan = response_chan;
};
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$type = true;
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$ctorStr = "clustermap.ordered-resource/DiscardStaleResource";
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "clustermap.ordered-resource/DiscardStaleResource");
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$ = true;
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$add_request$arity$2 = function(this$, ch) {
  var self__ = this;
  var this$__$1 = this;
  var rq_ticket = cljs.core.swap_BANG_.call(null, self__.ticket, cljs.core.inc);
  var c__5708__auto___18038 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18038, rq_ticket, this$__$1) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___18038, rq_ticket, this$__$1) {
          return function(state_18024) {
            var state_val_18025 = state_18024[1];
            if (state_val_18025 === 6) {
              var inst_18016 = state_18024[2];
              var state_18024__$1 = state_18024;
              var statearr_18026_18039 = state_18024__$1;
              statearr_18026_18039[2] = inst_18016;
              statearr_18026_18039[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18025 === 5) {
                var inst_18022 = state_18024[2];
                var state_18024__$1 = state_18024;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18024__$1, inst_18022);
              } else {
                if (state_val_18025 === 4) {
                  var inst_18018 = cljs.core.deref.call(null, self__.ticket);
                  var inst_18019 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + ": discarded result " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(inst_18018);
                  var inst_18020 = console.log(inst_18019);
                  var state_18024__$1 = state_18024;
                  var statearr_18027_18040 = state_18024__$1;
                  statearr_18027_18040[2] = inst_18020;
                  statearr_18027_18040[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18025 === 3) {
                    var inst_18011 = state_18024[7];
                    var state_18024__$1 = state_18024;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18024__$1, 6, self__.response_chan, inst_18011);
                  } else {
                    if (state_val_18025 === 2) {
                      var inst_18011 = state_18024[2];
                      var inst_18012 = cljs.core.deref.call(null, self__.ticket);
                      var inst_18013 = cljs.core._EQ_.call(null, rq_ticket, inst_18012);
                      var state_18024__$1 = function() {
                        var statearr_18028 = state_18024;
                        statearr_18028[7] = inst_18011;
                        return statearr_18028;
                      }();
                      if (inst_18013) {
                        var statearr_18029_18041 = state_18024__$1;
                        statearr_18029_18041[1] = 3;
                      } else {
                        var statearr_18030_18042 = state_18024__$1;
                        statearr_18030_18042[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18025 === 1) {
                        var state_18024__$1 = state_18024;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18024__$1, 2, ch);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___18038, rq_ticket, this$__$1);
        return function(switch__5693__auto__, c__5708__auto___18038, rq_ticket, this$__$1) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_18034 = [null, null, null, null, null, null, null, null];
              statearr_18034[0] = state_machine__5694__auto__;
              statearr_18034[1] = 1;
              return statearr_18034;
            };
            var state_machine__5694__auto____1 = function(state_18024) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_18024);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e18035) {
                    if (e18035 instanceof Object) {
                      var ex__5697__auto__ = e18035;
                      var statearr_18036_18043 = state_18024;
                      statearr_18036_18043[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18024);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18035;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18044 = state_18024;
                  state_18024 = G__18044;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_18024) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_18024);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___18038, rq_ticket, this$__$1);
      }();
      var state__5710__auto__ = function() {
        var statearr_18037 = f__5709__auto__.call(null);
        statearr_18037[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18038;
        return statearr_18037;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___18038, rq_ticket, this$__$1));
  return null;
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.response_chan;
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$close$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.async.close_BANG_.call(null, self__.response_chan);
};
clustermap.ordered_resource.__GT_DiscardStaleResource = function __GT_DiscardStaleResource(name, ticket, response_chan) {
  return new clustermap.ordered_resource.DiscardStaleResource(name, ticket, response_chan);
};
clustermap.ordered_resource.make_discard_stale_resource = function make_discard_stale_resource(name) {
  return new clustermap.ordered_resource.DiscardStaleResource(name, cljs.core.atom.call(null, 0), cljs.core.async.chan.call(null));
};
clustermap.ordered_resource.api_call = function() {
  var api_call__delegate = function(ordered_resource, api_fn, args) {
    return clustermap.ordered_resource.add_request.call(null, ordered_resource, cljs.core.apply.call(null, api_fn, args));
  };
  var api_call = function(ordered_resource, api_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return api_call__delegate.call(this, ordered_resource, api_fn, args);
  };
  api_call.cljs$lang$maxFixedArity = 2;
  api_call.cljs$lang$applyTo = function(arglist__18045) {
    var ordered_resource = cljs.core.first(arglist__18045);
    arglist__18045 = cljs.core.next(arglist__18045);
    var api_fn = cljs.core.first(arglist__18045);
    var args = cljs.core.rest(arglist__18045);
    return api_call__delegate(ordered_resource, api_fn, args);
  };
  api_call.cljs$core$IFn$_invoke$arity$variadic = api_call__delegate;
  return api_call;
}();
clustermap.ordered_resource.retrieve_responses = function retrieve_responses(ordered_resource, f) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_18101) {
            var state_val_18102 = state_18101[1];
            if (state_val_18102 === 7) {
              var inst_18092 = state_18101[2];
              var state_18101__$1 = state_18101;
              if (cljs.core.truth_(inst_18092)) {
                var statearr_18103_18122 = state_18101__$1;
                statearr_18103_18122[1] = 8;
              } else {
                var statearr_18104_18123 = state_18101__$1;
                statearr_18104_18123[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18102 === 1) {
                var state_18101__$1 = state_18101;
                var statearr_18105_18124 = state_18101__$1;
                statearr_18105_18124[2] = null;
                statearr_18105_18124[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18102 === 4) {
                  var inst_18087 = state_18101[7];
                  var inst_18087__$1 = state_18101[2];
                  var state_18101__$1 = function() {
                    var statearr_18106 = state_18101;
                    statearr_18106[7] = inst_18087__$1;
                    return statearr_18106;
                  }();
                  if (cljs.core.truth_(inst_18087__$1)) {
                    var statearr_18107_18125 = state_18101__$1;
                    statearr_18107_18125[1] = 5;
                  } else {
                    var statearr_18108_18126 = state_18101__$1;
                    statearr_18108_18126[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18102 === 6) {
                    var state_18101__$1 = state_18101;
                    var statearr_18109_18127 = state_18101__$1;
                    statearr_18109_18127[2] = null;
                    statearr_18109_18127[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18102 === 3) {
                      var inst_18099 = state_18101[2];
                      var state_18101__$1 = state_18101;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18101__$1, inst_18099);
                    } else {
                      if (state_val_18102 === 2) {
                        var inst_18085 = clustermap.ordered_resource.get_response_chan.call(null, ordered_resource);
                        var state_18101__$1 = state_18101;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18101__$1, 4, inst_18085);
                      } else {
                        if (state_val_18102 === 9) {
                          var state_18101__$1 = state_18101;
                          var statearr_18110_18128 = state_18101__$1;
                          statearr_18110_18128[2] = null;
                          statearr_18110_18128[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18102 === 5) {
                            var inst_18087 = state_18101[7];
                            var inst_18089 = f.call(null, inst_18087);
                            var state_18101__$1 = function() {
                              var statearr_18111 = state_18101;
                              statearr_18111[8] = inst_18089;
                              return statearr_18111;
                            }();
                            var statearr_18112_18129 = state_18101__$1;
                            statearr_18112_18129[2] = true;
                            statearr_18112_18129[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18102 === 10) {
                              var inst_18097 = state_18101[2];
                              var state_18101__$1 = state_18101;
                              var statearr_18113_18130 = state_18101__$1;
                              statearr_18113_18130[2] = inst_18097;
                              statearr_18113_18130[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18102 === 8) {
                                var state_18101__$1 = state_18101;
                                var statearr_18114_18131 = state_18101__$1;
                                statearr_18114_18131[2] = null;
                                statearr_18114_18131[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_18118 = [null, null, null, null, null, null, null, null, null];
              statearr_18118[0] = state_machine__5694__auto__;
              statearr_18118[1] = 1;
              return statearr_18118;
            };
            var state_machine__5694__auto____1 = function(state_18101) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_18101);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e18119) {
                    if (e18119 instanceof Object) {
                      var ex__5697__auto__ = e18119;
                      var statearr_18120_18132 = state_18101;
                      statearr_18120_18132[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18101);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18119;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18133 = state_18101;
                  state_18101 = G__18133;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_18101) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_18101);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_18121 = f__5709__auto__.call(null);
        statearr_18121[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_18121;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup;
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    if (cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__4124__auto__ = jayq.core.crate_meta.call(null, sel);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var cm = temp__4124__auto__;
        return "[crateGroup\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cm) + "]";
      } else {
        return sel;
      }
    } else {
      if (sel instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, sel);
      } else {
        return sel;
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    return jQuery(jayq.core.__GT_selector.call(null, sel));
  };
  var $__2 = function(sel, context) {
    return jQuery(jayq.core.__GT_selector.call(null, sel), context);
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $;
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__22579 = null;
  var G__22579__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__22579__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__22579 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22579__2.call(this, self__, k);
      case 3:
        return G__22579__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22579.cljs$core$IFn$_invoke$arity$2 = G__22579__2;
  G__22579.cljs$core$IFn$_invoke$arity$3 = G__22579__3;
  return G__22579;
}();
jQuery.prototype.apply = function(self__, args22578) {
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args22578)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var this$__$1 = this;
  var or__3558__auto__ = this$__$1.slice(k, k + 1);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    if (void 0 === not_found) {
      return null;
    } else {
      return not_found;
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.length;
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.count.call(null, this$__$1) > 1) {
    return this$__$1.slice(1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(this$__$1.get(0))) {
    return this$__$1;
  } else {
    return null;
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js.call(null, props), dur);
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text();
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt);
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js.call(null, opts));
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name.call(null, p), v);
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css;
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js.call(null, x));
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name.call(null, n), v);
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js.call(null, x));
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name.call(null, n), v);
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop;
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a));
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name.call(null, a));
};
jayq.core.data = function() {
  var data = null;
  var data__1 = function($elem) {
    return $elem.data();
  };
  var data__2 = function($elem, k) {
    return $elem.data(cljs.core.clj__GT_js.call(null, k));
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name.call(null, k), cljs.core.clj__GT_js.call(null, v));
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 1:
        return data__1.call(this, $elem);
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$1 = data__1;
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data;
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name.call(null, cl));
};
jayq.core.remove_class = function() {
  var remove_class = null;
  var remove_class__1 = function($elem) {
    return $elem.removeClass();
  };
  var remove_class__2 = function($elem, cl) {
    return $elem.removeClass(cljs.core.name.call(null, cl));
  };
  remove_class = function($elem, cl) {
    switch(arguments.length) {
      case 1:
        return remove_class__1.call(this, $elem);
      case 2:
        return remove_class__2.call(this, $elem, cl);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class.cljs$core$IFn$_invoke$arity$1 = remove_class__1;
  remove_class.cljs$core$IFn$_invoke$arity$2 = remove_class__2;
  return remove_class;
}();
jayq.core.toggle_class = function() {
  var toggle_class = null;
  var toggle_class__2 = function($elem, cl) {
    return $elem.toggleClass(cljs.core.name.call(null, cl));
  };
  var toggle_class__3 = function($elem, cl, switch$) {
    return $elem.toggleClass(cljs.core.name.call(null, cl), cljs.core.boolean$.call(null, switch$));
  };
  toggle_class = function($elem, cl, switch$) {
    switch(arguments.length) {
      case 2:
        return toggle_class__2.call(this, $elem, cl);
      case 3:
        return toggle_class__3.call(this, $elem, cl, switch$);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class.cljs$core$IFn$_invoke$arity$2 = toggle_class__2;
  toggle_class.cljs$core$IFn$_invoke$arity$3 = toggle_class__3;
  return toggle_class;
}();
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name.call(null, cl));
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector));
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content);
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content);
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content);
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content);
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target));
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content);
};
jayq.core.remove = function remove($elem) {
  return $elem.remove();
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__22580) {
    var vec__22582 = p__22580;
    var speed = cljs.core.nth.call(null, vec__22582, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22582, 1, null);
    return $elem.hide(speed, on_finish);
  };
  var hide = function($elem, var_args) {
    var p__22580 = null;
    if (arguments.length > 1) {
      p__22580 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hide__delegate.call(this, $elem, p__22580);
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__22583) {
    var $elem = cljs.core.first(arglist__22583);
    var p__22580 = cljs.core.rest(arglist__22583);
    return hide__delegate($elem, p__22580);
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide;
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__22584) {
    var vec__22586 = p__22584;
    var speed = cljs.core.nth.call(null, vec__22586, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22586, 1, null);
    return $elem.show(speed, on_finish);
  };
  var show = function($elem, var_args) {
    var p__22584 = null;
    if (arguments.length > 1) {
      p__22584 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return show__delegate.call(this, $elem, p__22584);
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__22587) {
    var $elem = cljs.core.first(arglist__22587);
    var p__22584 = cljs.core.rest(arglist__22587);
    return show__delegate($elem, p__22584);
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show;
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__22588) {
    var vec__22590 = p__22588;
    var speed = cljs.core.nth.call(null, vec__22590, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22590, 1, null);
    return $elem.toggle(speed, on_finish);
  };
  var toggle = function($elem, var_args) {
    var p__22588 = null;
    if (arguments.length > 1) {
      p__22588 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return toggle__delegate.call(this, $elem, p__22588);
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__22591) {
    var $elem = cljs.core.first(arglist__22591);
    var p__22588 = cljs.core.rest(arglist__22591);
    return toggle__delegate($elem, p__22588);
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle;
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__22592) {
    var vec__22594 = p__22592;
    var speed = cljs.core.nth.call(null, vec__22594, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22594, 1, null);
    return $elem.fadeOut(speed, on_finish);
  };
  var fade_out = function($elem, var_args) {
    var p__22592 = null;
    if (arguments.length > 1) {
      p__22592 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_out__delegate.call(this, $elem, p__22592);
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__22595) {
    var $elem = cljs.core.first(arglist__22595);
    var p__22592 = cljs.core.rest(arglist__22595);
    return fade_out__delegate($elem, p__22592);
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out;
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__22596) {
    var vec__22598 = p__22596;
    var speed = cljs.core.nth.call(null, vec__22598, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22598, 1, null);
    return $elem.fadeIn(speed, on_finish);
  };
  var fade_in = function($elem, var_args) {
    var p__22596 = null;
    if (arguments.length > 1) {
      p__22596 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_in__delegate.call(this, $elem, p__22596);
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__22599) {
    var $elem = cljs.core.first(arglist__22599);
    var p__22596 = cljs.core.rest(arglist__22599);
    return fade_in__delegate($elem, p__22596);
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in;
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__22600) {
    var vec__22602 = p__22600;
    var speed = cljs.core.nth.call(null, vec__22602, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22602, 1, null);
    return $elem.slideUp(speed, on_finish);
  };
  var slide_up = function($elem, var_args) {
    var p__22600 = null;
    if (arguments.length > 1) {
      p__22600 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_up__delegate.call(this, $elem, p__22600);
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__22603) {
    var $elem = cljs.core.first(arglist__22603);
    var p__22600 = cljs.core.rest(arglist__22603);
    return slide_up__delegate($elem, p__22600);
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up;
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__22604) {
    var vec__22606 = p__22604;
    var speed = cljs.core.nth.call(null, vec__22606, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__22606, 1, null);
    return $elem.slideDown(speed, on_finish);
  };
  var slide_down = function($elem, var_args) {
    var p__22604 = null;
    if (arguments.length > 1) {
      p__22604 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_down__delegate.call(this, $elem, p__22604);
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__22607) {
    var $elem = cljs.core.first(arglist__22607);
    var p__22604 = cljs.core.rest(arglist__22607);
    return slide_down__delegate($elem, p__22604);
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down;
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings();
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector));
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings;
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent();
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents();
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector));
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil();
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until;
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children();
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector));
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children;
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next();
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector));
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next;
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev();
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector));
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev;
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll();
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector));
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all;
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll();
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector));
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all;
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil();
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until;
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil();
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until;
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector));
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__22608) {
    var vec__22610 = p__22608;
    var context = cljs.core.nth.call(null, vec__22610, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context);
  };
  var closest = function($elem, selector, var_args) {
    var p__22608 = null;
    if (arguments.length > 2) {
      p__22608 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return closest__delegate.call(this, $elem, selector, p__22608);
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__22611) {
    var $elem = cljs.core.first(arglist__22611);
    arglist__22611 = cljs.core.next(arglist__22611);
    var selector = cljs.core.first(arglist__22611);
    var p__22608 = cljs.core.rest(arglist__22611);
    return closest__delegate($elem, selector, p__22608);
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest;
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone();
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html();
  };
  var html__2 = function($elem, v) {
    return $elem.html(v);
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html;
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty();
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val();
  };
  var val__2 = function($elem, v) {
    return $elem.val(v);
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize();
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue();
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x);
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y);
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue;
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue();
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name);
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue;
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func);
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accepts", "accepts", 1429714104), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1317840885), "application/edn, text/edn", new cljs.core.Keyword(null, "clojure", "clojure", 438975815), "application/clojure, text/clojure"], null), new cljs.core.Keyword(null, "contents", "contents", -1567174023), new cljs.core.PersistentArrayMap(null, 1, ["clojure", 
/edn|clojure/], null), new cljs.core.Keyword(null, "converters", "converters", 195533259), new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, x);
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if (typeof ct === "string") {
    return ct;
  } else {
    if (ct instanceof cljs.core.Keyword) {
      return cljs.core.subs.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ct), 1);
    } else {
      return null;
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__22614) {
  var map__22616 = p__22614;
  var map__22616__$1 = cljs.core.seq_QMARK_.call(null, map__22616) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22616) : map__22616;
  var request = map__22616__$1;
  var contentType = cljs.core.get.call(null, map__22616__$1, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576));
  var data = cljs.core.get.call(null, map__22616__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var ct = jayq.core.__GT_content_type.call(null, contentType);
  return function(ct, map__22616, map__22616__$1, request, contentType, data) {
    return function(p1__22613_SHARP_) {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = ct;
        if (cljs.core.truth_(and__3546__auto__)) {
          return jayq.core.clj_content_type_QMARK_.call(null, ct);
        } else {
          return and__3546__auto__;
        }
      }())) {
        return cljs.core.assoc.call(null, p1__22613_SHARP_, new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.pr_str.call(null, data));
      } else {
        return p1__22613_SHARP_;
      }
    };
  }(ct, map__22616, map__22616__$1, request, contentType, data).call(null, function(ct, map__22616, map__22616__$1, request, contentType, data) {
    return function(p1__22612_SHARP_) {
      if (cljs.core.truth_(ct)) {
        return cljs.core.assoc.call(null, p1__22612_SHARP_, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576), ct);
      } else {
        return p1__22612_SHARP_;
      }
    };
  }(ct, map__22616, map__22616__$1, request, contentType, data).call(null, request));
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, request));
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, settings));
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings.call(null, settings));
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax;
}();
jayq.core.xhr = function xhr(p__22617, content, callback) {
  var vec__22619 = p__22617;
  var method = cljs.core.nth.call(null, vec__22619, 0, null);
  var uri = cljs.core.nth.call(null, vec__22619, 1, null);
  var params = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), clojure.string.upper_case.call(null, cljs.core.name.call(null, method)), new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.clj__GT_js.call(null, content), new cljs.core.Keyword(null, "success", "success", 1890645906), callback], null));
  return jQuery.ajax(uri, params);
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, $elem));
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func);
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__22620) {
    var vec__22622 = p__22620;
    var func = cljs.core.nth.call(null, vec__22622, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func);
  };
  var unbind = function($elem, ev, var_args) {
    var p__22620 = null;
    if (arguments.length > 2) {
      p__22620 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unbind__delegate.call(this, $elem, ev, p__22620);
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__22623) {
    var $elem = cljs.core.first(arglist__22623);
    arglist__22623 = cljs.core.next(arglist__22623);
    var ev = cljs.core.first(arglist__22623);
    var p__22620 = cljs.core.rest(arglist__22623);
    return unbind__delegate($elem, ev, p__22620);
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind;
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev));
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func);
};
jayq.core.__GT_event = function __GT_event(e) {
  if (cljs.core.coll_QMARK_.call(null, e)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e));
  } else {
    return cljs.core.clj__GT_js.call(null, e);
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__22624) {
    var vec__22626 = p__22624;
    var sel = cljs.core.nth.call(null, vec__22626, 0, null);
    var data = cljs.core.nth.call(null, vec__22626, 1, null);
    var handler = cljs.core.nth.call(null, vec__22626, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var on = function($elem, events, var_args) {
    var p__22624 = null;
    if (arguments.length > 2) {
      p__22624 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return on__delegate.call(this, $elem, events, p__22624);
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__22627) {
    var $elem = cljs.core.first(arglist__22627);
    arglist__22627 = cljs.core.next(arglist__22627);
    var events = cljs.core.first(arglist__22627);
    var p__22624 = cljs.core.rest(arglist__22627);
    return on__delegate($elem, events, p__22624);
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on;
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__22628) {
    var vec__22630 = p__22628;
    var sel = cljs.core.nth.call(null, vec__22630, 0, null);
    var data = cljs.core.nth.call(null, vec__22630, 1, null);
    var handler = cljs.core.nth.call(null, vec__22630, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var one = function($elem, events, var_args) {
    var p__22628 = null;
    if (arguments.length > 2) {
      p__22628 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return one__delegate.call(this, $elem, events, p__22628);
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__22631) {
    var $elem = cljs.core.first(arglist__22631);
    arglist__22631 = cljs.core.next(arglist__22631);
    var events = cljs.core.first(arglist__22631);
    var p__22628 = cljs.core.rest(arglist__22631);
    return one__delegate($elem, events, p__22628);
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one;
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__22632) {
    var vec__22634 = p__22632;
    var sel = cljs.core.nth.call(null, vec__22634, 0, null);
    var handler = cljs.core.nth.call(null, vec__22634, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), handler);
  };
  var off = function($elem, events, var_args) {
    var p__22632 = null;
    if (arguments.length > 2) {
      p__22632 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return off__delegate.call(this, $elem, events, p__22632);
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__22635) {
    var $elem = cljs.core.first(arglist__22635);
    arglist__22635 = cljs.core.next(arglist__22635);
    var events = cljs.core.first(arglist__22635);
    var p__22632 = cljs.core.rest(arglist__22635);
    return off__delegate($elem, events, p__22632);
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off;
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault();
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height();
  };
  var height__2 = function($elem, x) {
    return $elem.height(x);
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height;
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width();
  };
  var width__2 = function($elem, x) {
    return $elem.width(x);
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width;
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight();
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth();
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight();
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth();
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.call(null, $elem.offset(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js.call(null, coords).offset();
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset;
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent();
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft();
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x);
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left;
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop();
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x);
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top;
}();
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn));
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn), cljs.core.clj__GT_js.call(null, progress_fn));
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then;
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return done__delegate.call(this, deferred, fns_args);
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__22636) {
    var deferred = cljs.core.first(arglist__22636);
    var fns_args = cljs.core.rest(arglist__22636);
    return done__delegate(deferred, fns_args);
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done;
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fail__delegate.call(this, deferred, fns_args);
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__22637) {
    var deferred = cljs.core.first(arglist__22637);
    var fns_args = cljs.core.rest(arglist__22637);
    return fail__delegate(deferred, fns_args);
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail;
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js.call(null, fns_args));
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise();
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type);
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target);
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise;
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return always__delegate.call(this, deferred, fns_args);
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__22638) {
    var deferred = cljs.core.first(arglist__22638);
    var fns_args = cljs.core.rest(arglist__22638);
    return always__delegate(deferred, fns_args);
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always;
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args);
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args);
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args);
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args);
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args);
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args);
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter);
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter);
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter);
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe;
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.call(null, deferred.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), jayq.core.$when, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(x, f) {
  var dfd = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, x, function(dfd) {
    return function(v) {
      return jayq.core.done.call(null, f.call(null, v), cljs.core.partial.call(null, jayq.core.resolve, dfd));
    };
  }(dfd));
  return jayq.core.promise.call(null, dfd);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), cljs.core.identity, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(x, f) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, x), f);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
goog.provide("clustermap.formats.money");
goog.require("cljs.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
clustermap.formats.money.money_suffixes = new cljs.core.PersistentArrayMap(null, 5, [0, "", 3, "k", 6, "m", 9, "bn", 12, "tn"], null);
clustermap.formats.money.money_suffix = function money_suffix(exp) {
  var or__3558__auto__ = clustermap.formats.money.money_suffixes.call(null, exp);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "x10^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(exp);
  }
};
clustermap.formats.money.readable = function() {
  var readable__delegate = function(n, p__17906) {
    var map__17909 = p__17906;
    var map__17909__$1 = cljs.core.seq_QMARK_.call(null, map__17909) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17909) : map__17909;
    var default$ = cljs.core.get.call(null, map__17909__$1, new cljs.core.Keyword(null, "default", "default", -1987822328));
    var plus_QMARK_ = cljs.core.get.call(null, map__17909__$1, new cljs.core.Keyword(null, "plus?", "plus?", -3051327));
    var curr = cljs.core.get.call(null, map__17909__$1, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "\u00a3");
    var sf = cljs.core.get.call(null, map__17909__$1, new cljs.core.Keyword(null, "sf", "sf", -1949491738));
    if (cljs.core.truth_(n)) {
      var vec__17910 = clustermap.formats.number.eng_notation.call(null, n, new cljs.core.Keyword(null, "sf", "sf", -1949491738), sf);
      var sig = cljs.core.nth.call(null, vec__17910, 0, null);
      var exp = cljs.core.nth.call(null, vec__17910, 1, null);
      var abs_sig = Math.abs(sig);
      var suffix = clustermap.formats.money.money_suffix.call(null, exp);
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var and__3546__auto__ = plus_QMARK_;
        if (cljs.core.truth_(and__3546__auto__)) {
          return sig > 0;
        } else {
          return and__3546__auto__;
        }
      }()) ? "+" : sig < 0 ? "-" : null, curr, abs_sig, suffix], null)));
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__17906 = null;
    if (arguments.length > 1) {
      p__17906 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__17906);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__17911) {
    var n = cljs.core.first(arglist__17911);
    var p__17906 = cljs.core.rest(arglist__17911);
    return readable__delegate(n, p__17906);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.money.fmoney = clustermap.formats.money.readable;
goog.provide("clustermap.components.timeline_chart");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("om_tools.core");
goog.require("clustermap.api");
goog.require("sablono.core");
goog.require("clustermap.ordered_resource");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.timeline_chart.create_chart = function create_chart(data, node, p__17545) {
  var map__17547 = p__17545;
  var map__17547__$1 = cljs.core.seq_QMARK_.call(null, map__17547) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17547) : map__17547;
  var opts = map__17547__$1;
  var y1_title = cljs.core.get.call(null, map__17547__$1, new cljs.core.Keyword(null, "y1-title", "y1-title", 472065763));
  var y0_title = cljs.core.get.call(null, map__17547__$1, new cljs.core.Keyword(null, "y0-title", "y0-title", -809800001));
  console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["TIMELINE: ", data], null)));
  var x_labels = cljs.core.map.call(null, function(map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17540_SHARP_) {
      return 1900 + p1__17540_SHARP_;
    };
  }(map__17547, map__17547__$1, opts, y1_title, y0_title), cljs.core.map.call(null, function(map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17539_SHARP_) {
      return p1__17539_SHARP_.getYear();
    };
  }(map__17547, map__17547__$1, opts, y1_title, y0_title), cljs.core.map.call(null, function(map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17538_SHARP_) {
      return new Date(p1__17538_SHARP_);
    };
  }(map__17547, map__17547__$1, opts, y1_title, y0_title), cljs.core.map.call(null, new cljs.core.Keyword(null, "timeline", "timeline", 192903161), data))));
  var stats = cljs.core.map.call(null, new cljs.core.Keyword(null, "stats", "stats", -85643011), data);
  var y_median = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17541_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__17541_SHARP_, 0);
    };
  }(x_labels, stats, map__17547, map__17547__$1, opts, y1_title, y0_title), function(x_labels, stats, map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17542_SHARP_) {
      return cljs.core.get_in.call(null, p1__17542_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "median", "median", 569566131)], null));
    };
  }(x_labels, stats, map__17547, map__17547__$1, opts, y1_title, y0_title)), data);
  var y_mean = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17543_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__17543_SHARP_, 0);
    };
  }(x_labels, stats, y_median, map__17547, map__17547__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function(p1__17544_SHARP_) {
      return cljs.core.get_in.call(null, p1__17544_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "mean", "mean", -1359234715)], null));
    };
  }(x_labels, stats, y_median, map__17547, map__17547__$1, opts, y1_title, y0_title)), data);
  var y_total = cljs.core.map.call(null, new cljs.core.Keyword(null, "!turnover", "!turnover", 1658808771), data);
  return jayq.core.$.call(null, node).highcharts(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "chart", "chart", 1173225425), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", -384071477), null, new cljs.core.Keyword(null, "height", "height", 1025178622), 300], null), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", 
  "text", -1790561697), null], null), new cljs.core.Keyword(null, "xAxis", "xAxis", 1266196059), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "categories", "categories", 178386610), x_labels, new cljs.core.Keyword(null, "labels", "labels", -626734591), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), 270], null)], null), new cljs.core.Keyword(null, "yAxis", "yAxis", 1793336722), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", -1790561697), y0_title], null), new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "labels", "labels", -626734591), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "formatter", "formatter", -483008823), function(x_labels, 
  stats, y_median, y_mean, y_total, map__17547, map__17547__$1, opts, y1_title, y0_title) {
    return function() {
      var this$ = this;
      return clustermap.formats.money.readable.call(null, this$.value, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 3, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "");
    };
  }(x_labels, stats, y_median, y_mean, y_total, map__17547, map__17547__$1, opts, y1_title, y0_title)], null)], null)], null), new cljs.core.Keyword(null, "series", "series", 600710694), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(y0_title), new cljs.core.Keyword(null, "type", "type", 1174270348), "line", 
  new cljs.core.Keyword(null, "yAxis", "yAxis", 1793336722), 0, new cljs.core.Keyword(null, "data", "data", -232669377), y_total], null)], null)], null)));
};
clustermap.components.timeline_chart.request_timeline_data = function request_timeline_data(resource, index, index_type, filter_spec, bounds, time_variable, interval, metric_variables) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.timeline, index, index_type, filter_spec, bounds, time_variable, null, null, interval, metric_variables);
};
var ufv___17626 = schema.utils.use_fn_validation;
var output_schema17549_17627 = schema.core.Any;
var input_schema17550_17628 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "owner", "owner", 1247919588, null)), schema.core.one.call(null, schema.core.Any, new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null))], null);
var input_checker17551_17629 = schema.core.checker.call(null, input_schema17550_17628);
var output_checker17552_17630 = schema.core.checker.call(null, output_schema17549_17627);
clustermap.components.timeline_chart.timeline_chart = function(ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
  return function timeline_chart(G__17553, G__17554, G__17555) {
    var validate__10517__auto__ = ufv___17626.get_cell();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var args__10518__auto___17631 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__17553, G__17554, G__17555], null);
      var temp__4126__auto___17632 = input_checker17551_17629.call(null, args__10518__auto___17631);
      if (cljs.core.truth_(temp__4126__auto___17632)) {
        var error__10519__auto___17633 = temp__4126__auto___17632;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", new cljs.core.Symbol(null, "timeline-chart", "timeline-chart", 2135471483, null), cljs.core.pr_str.call(null, error__10519__auto___17633)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema17550_17628, new cljs.core.Keyword(null, "value", "value", 305978217), args__10518__auto___17631, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error__10519__auto___17633], null));
      } else {
      }
    } else {
    }
    var o__10520__auto__ = function() {
      var G__17596 = G__17553;
      var map__17598 = G__17596;
      var map__17598__$1 = cljs.core.seq_QMARK_.call(null, map__17598) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17598) : map__17598;
      var props = map__17598__$1;
      var map__17599 = cljs.core.get.call(null, map__17598__$1, new cljs.core.Keyword(null, "timeline-chart", "timeline-chart", 494939956));
      var map__17599__$1 = cljs.core.seq_QMARK_.call(null, map__17599) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17599) : map__17599;
      var timeline_chart__$1 = map__17599__$1;
      var map__17600 = cljs.core.get.call(null, map__17599__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
      var map__17600__$1 = cljs.core.seq_QMARK_.call(null, map__17600) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17600) : map__17600;
      var controls = map__17600__$1;
      var index = cljs.core.get.call(null, map__17600__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
      var index_type = cljs.core.get.call(null, map__17600__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
      var time_variable = cljs.core.get.call(null, map__17600__$1, new cljs.core.Keyword(null, "time-variable", "time-variable", -1643449307));
      var measure_variables = cljs.core.get.call(null, map__17600__$1, new cljs.core.Keyword(null, "measure-variables", "measure-variables", 893431199));
      var interval = cljs.core.get.call(null, map__17600__$1, new cljs.core.Keyword(null, "interval", "interval", 1708495417));
      var timeline_data = cljs.core.get.call(null, map__17599__$1, new cljs.core.Keyword(null, "timeline-data", "timeline-data", -163143548));
      var map__17601 = cljs.core.get.call(null, map__17598__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
      var map__17601__$1 = cljs.core.seq_QMARK_.call(null, map__17601) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17601) : map__17601;
      var filter_spec = map__17601__$1;
      var filter_by_view = cljs.core.get.call(null, map__17601__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
      var compiled_filter = cljs.core.get.call(null, map__17601__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
      var bounds = cljs.core.get.call(null, map__17598__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
      var owner = G__17554;
      var G__17597 = G__17555;
      var map__17602 = G__17597;
      var map__17602__$1 = cljs.core.seq_QMARK_.call(null, map__17602) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17602) : map__17602;
      var opts = map__17602__$1;
      var id = cljs.core.get.call(null, map__17602__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      var G__17596__$1 = G__17596;
      var owner__$1 = owner;
      var G__17597__$1 = G__17597;
      while (true) {
        var map__17603 = G__17596__$1;
        var map__17603__$1 = cljs.core.seq_QMARK_.call(null, map__17603) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17603) : map__17603;
        var props__$1 = map__17603__$1;
        var map__17604 = cljs.core.get.call(null, map__17603__$1, new cljs.core.Keyword(null, "timeline-chart", "timeline-chart", 494939956));
        var map__17604__$1 = cljs.core.seq_QMARK_.call(null, map__17604) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17604) : map__17604;
        var timeline_chart__$2 = map__17604__$1;
        var map__17605 = cljs.core.get.call(null, map__17604__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__17605__$1 = cljs.core.seq_QMARK_.call(null, map__17605) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17605) : map__17605;
        var controls__$1 = map__17605__$1;
        var index__$1 = cljs.core.get.call(null, map__17605__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
        var index_type__$1 = cljs.core.get.call(null, map__17605__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
        var time_variable__$1 = cljs.core.get.call(null, map__17605__$1, new cljs.core.Keyword(null, "time-variable", "time-variable", -1643449307));
        var measure_variables__$1 = cljs.core.get.call(null, map__17605__$1, new cljs.core.Keyword(null, "measure-variables", "measure-variables", 893431199));
        var interval__$1 = cljs.core.get.call(null, map__17605__$1, new cljs.core.Keyword(null, "interval", "interval", 1708495417));
        var timeline_data__$1 = cljs.core.get.call(null, map__17604__$1, new cljs.core.Keyword(null, "timeline-data", "timeline-data", -163143548));
        var map__17606 = cljs.core.get.call(null, map__17603__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__17606__$1 = cljs.core.seq_QMARK_.call(null, map__17606) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17606) : map__17606;
        var filter_spec__$1 = map__17606__$1;
        var filter_by_view__$1 = cljs.core.get.call(null, map__17606__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var compiled_filter__$1 = cljs.core.get.call(null, map__17606__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var bounds__$1 = cljs.core.get.call(null, map__17603__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var owner__$2 = owner__$1;
        var map__17607 = G__17597__$1;
        var map__17607__$1 = cljs.core.seq_QMARK_.call(null, map__17607) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17607) : map__17607;
        var opts__$1 = map__17607__$1;
        var id__$1 = cljs.core.get.call(null, map__17607__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
        if (typeof clustermap.components.timeline_chart.t17608 !== "undefined") {
        } else {
          clustermap.components.timeline_chart.t17608 = function(interval, map__17598, map__17602, G__17553, index_type, compiled_filter, output_schema17549, owner, map__17606, filter_by_view, props, map__17604, measure_variables, timeline_data, index, time_variable, map__17603, validate__10517__auto__, filter_spec, input_checker17551, controls, output_checker17552, map__17600, bounds, G__17596, input_schema17550, map__17607, id, timeline_chart, opts, G__17554, map__17601, map__17605, ufv__, G__17597, 
          map__17599, G__17555, meta17609) {
            this.interval = interval;
            this.map__17598 = map__17598;
            this.map__17602 = map__17602;
            this.G__17553 = G__17553;
            this.index_type = index_type;
            this.compiled_filter = compiled_filter;
            this.output_schema17549 = output_schema17549;
            this.owner = owner;
            this.map__17606 = map__17606;
            this.filter_by_view = filter_by_view;
            this.props = props;
            this.map__17604 = map__17604;
            this.measure_variables = measure_variables;
            this.timeline_data = timeline_data;
            this.index = index;
            this.time_variable = time_variable;
            this.map__17603 = map__17603;
            this.validate__10517__auto__ = validate__10517__auto__;
            this.filter_spec = filter_spec;
            this.input_checker17551 = input_checker17551;
            this.controls = controls;
            this.output_checker17552 = output_checker17552;
            this.map__17600 = map__17600;
            this.bounds = bounds;
            this.G__17596 = G__17596;
            this.input_schema17550 = input_schema17550;
            this.map__17607 = map__17607;
            this.id = id;
            this.timeline_chart = timeline_chart;
            this.opts = opts;
            this.G__17554 = G__17554;
            this.map__17601 = map__17601;
            this.map__17605 = map__17605;
            this.ufv__ = ufv__;
            this.G__17597 = G__17597;
            this.map__17599 = map__17599;
            this.G__17555 = G__17555;
            this.meta17609 = meta17609;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          clustermap.components.timeline_chart.t17608.cljs$lang$type = true;
          clustermap.components.timeline_chart.t17608.cljs$lang$ctorStr = "clustermap.components.timeline-chart/t17608";
          clustermap.components.timeline_chart.t17608.cljs$lang$ctorPrWriter = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, 
          props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
              return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.timeline-chart/t17608");
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.om$core$IDidUpdate$ = true;
          clustermap.components.timeline_chart.t17608.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
          map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_, p__17611, ___$1) {
              var self__ = this;
              var map__17612 = p__17611;
              var map__17612__$1 = cljs.core.seq_QMARK_.call(null, map__17612) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17612) : map__17612;
              var prev_props = map__17612__$1;
              var map__17613 = cljs.core.get.call(null, map__17612__$1, new cljs.core.Keyword(null, "timeline-chart", "timeline-chart", 494939956));
              var map__17613__$1 = cljs.core.seq_QMARK_.call(null, map__17613) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17613) : map__17613;
              var prev_timeline_chart = map__17613__$1;
              var map__17614 = cljs.core.get.call(null, map__17613__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
              var map__17614__$1 = cljs.core.seq_QMARK_.call(null, map__17614) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17614) : map__17614;
              var prev_controls = map__17614__$1;
              var prev_index = cljs.core.get.call(null, map__17614__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
              var prev_index_type = cljs.core.get.call(null, map__17614__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
              var prev_time_variable = cljs.core.get.call(null, map__17614__$1, new cljs.core.Keyword(null, "time-variable", "time-variable", -1643449307));
              var prev_measure_variables = cljs.core.get.call(null, map__17614__$1, new cljs.core.Keyword(null, "measure-variables", "measure-variables", 893431199));
              var prev_interval = cljs.core.get.call(null, map__17614__$1, new cljs.core.Keyword(null, "interval", "interval", 1708495417));
              var prev_timeline_data = cljs.core.get.call(null, map__17613__$1, new cljs.core.Keyword(null, "timeline-data", "timeline-data", -163143548));
              var map__17615 = cljs.core.get.call(null, map__17612__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
              var map__17615__$1 = cljs.core.seq_QMARK_.call(null, map__17615) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17615) : map__17615;
              var prev_filter_spec = map__17615__$1;
              var prev_filter_by_view = cljs.core.get.call(null, map__17615__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
              var prev_compiled_filter = cljs.core.get.call(null, map__17615__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
              var prev_bounds = cljs.core.get.call(null, map__17612__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
              var ___$2 = this;
              if (cljs.core.not_EQ_.call(null, prev_timeline_data, self__.timeline_data)) {
                return clustermap.components.timeline_chart.create_chart.call(null, self__.timeline_data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
              } else {
                return null;
              }
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.om$core$IWillUpdate$ = true;
          clustermap.components.timeline_chart.t17608.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, 
          G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_, p__17616, p__17617) {
              var self__ = this;
              var map__17618 = p__17616;
              var map__17618__$1 = cljs.core.seq_QMARK_.call(null, map__17618) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17618) : map__17618;
              var next_props = map__17618__$1;
              var map__17619 = cljs.core.get.call(null, map__17618__$1, new cljs.core.Keyword(null, "timeline-chart", "timeline-chart", 494939956));
              var map__17619__$1 = cljs.core.seq_QMARK_.call(null, map__17619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17619) : map__17619;
              var next_timeline_chart = map__17619__$1;
              var map__17620 = cljs.core.get.call(null, map__17619__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
              var map__17620__$1 = cljs.core.seq_QMARK_.call(null, map__17620) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17620) : map__17620;
              var next_controls = map__17620__$1;
              var next_index = cljs.core.get.call(null, map__17620__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
              var next_index_type = cljs.core.get.call(null, map__17620__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
              var next_time_variable = cljs.core.get.call(null, map__17620__$1, new cljs.core.Keyword(null, "time-variable", "time-variable", -1643449307));
              var next_measure_variables = cljs.core.get.call(null, map__17620__$1, new cljs.core.Keyword(null, "measure-variables", "measure-variables", 893431199));
              var next_interval = cljs.core.get.call(null, map__17620__$1, new cljs.core.Keyword(null, "interval", "interval", 1708495417));
              var next_timeline_data = cljs.core.get.call(null, map__17619__$1, new cljs.core.Keyword(null, "timeline-data", "timeline-data", -163143548));
              var map__17621 = cljs.core.get.call(null, map__17618__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
              var map__17621__$1 = cljs.core.seq_QMARK_.call(null, map__17621) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17621) : map__17621;
              var next_filter_spec = map__17621__$1;
              var next_filter_by_view = cljs.core.get.call(null, map__17621__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
              var next_compiled_filter = cljs.core.get.call(null, map__17621__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
              var next_bounds = cljs.core.get.call(null, map__17618__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
              var map__17622 = p__17617;
              var map__17622__$1 = cljs.core.seq_QMARK_.call(null, map__17622) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17622) : map__17622;
              var next_timeline_data_resource = cljs.core.get.call(null, map__17622__$1, new cljs.core.Keyword(null, "timeline-data-resource", "timeline-data-resource", -1132292315));
              var ___$1 = this;
              console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FILTER_SPEC: ", next_filter_spec], null)));
              if (cljs.core.truth_(function() {
                var or__3558__auto__ = cljs.core.not.call(null, next_timeline_data);
                if (or__3558__auto__) {
                  return or__3558__auto__;
                } else {
                  var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_controls, self__.controls);
                  if (or__3558__auto____$1) {
                    return or__3558__auto____$1;
                  } else {
                    var or__3558__auto____$2 = cljs.core.not_EQ_.call(null, next_filter_spec, self__.filter_spec);
                    if (or__3558__auto____$2) {
                      return or__3558__auto____$2;
                    } else {
                      var and__3546__auto__ = next_filter_by_view;
                      if (cljs.core.truth_(and__3546__auto__)) {
                        return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
                      } else {
                        return and__3546__auto__;
                      }
                    }
                  }
                }
              }())) {
                return clustermap.components.timeline_chart.request_timeline_data.call(null, next_timeline_data_resource, next_index, next_index_type, next_compiled_filter, cljs.core.truth_(next_filter_by_view) ? next_bounds : null, next_time_variable, next_interval, next_measure_variables);
              } else {
                return null;
              }
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.om$core$IDidMount$ = true;
          clustermap.components.timeline_chart.t17608.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
          map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              var tdr_17634 = clustermap.ordered_resource.make_discard_stale_resource.call(null, "timeline-data-resource");
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "timeline-data-resource", "timeline-data-resource", -1132292315), tdr_17634);
              clustermap.ordered_resource.retrieve_responses.call(null, tdr_17634, function(tdr_17634, ___$1, map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
              map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
                return function(p__17623) {
                  var map__17624 = p__17623;
                  var map__17624__$1 = cljs.core.seq_QMARK_.call(null, map__17624) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17624) : map__17624;
                  var response = map__17624__$1;
                  var data = cljs.core.get.call(null, map__17624__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
                  console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["TIMELINE RESPONSE: ", response], null)));
                  return om.core.update_BANG_.call(null, self__.timeline_chart, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeline-data", "timeline-data", -163143548)], null), data);
                };
              }(tdr_17634, ___$1, map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, 
              map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630));
              var node = om.core.get_node.call(null, self__.owner);
              return jayq.core.$.call(null, document).on("clustermap-change-view", function(node, ___$1, map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
              map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
                return function(e) {
                  var chart = jayq.core.$.call(null, om.core.get_node.call(null, self__.owner, "chart"));
                  if (cljs.core.truth_(chart.is(":visible"))) {
                    var G__17625 = chart;
                    var G__17625__$1 = G__17625 == null ? null : G__17625.highcharts();
                    var G__17625__$2 = G__17625__$1 == null ? null : G__17625__$1.reflow();
                    return G__17625__$2;
                  } else {
                    return null;
                  }
                };
              }(node, ___$1, map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, 
              map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630));
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.om$core$IRender$ = true;
          clustermap.components.timeline_chart.t17608.prototype.om$core$IRender$render$arity$1 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
          map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_) {
              var self__ = this;
              var ___$1 = this;
              return React.DOM.div({"className":"timeline-chart", "id":self__.id, "ref":"chart"});
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
          map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_17610) {
              var self__ = this;
              var _17610__$1 = this;
              return self__.meta17609;
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.t17608.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, 
          map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function(_17610, meta17609__$1) {
              var self__ = this;
              var _17610__$1 = this;
              return new clustermap.components.timeline_chart.t17608(self__.interval, self__.map__17598, self__.map__17602, self__.G__17553, self__.index_type, self__.compiled_filter, self__.output_schema17549, self__.owner, self__.map__17606, self__.filter_by_view, self__.props, self__.map__17604, self__.measure_variables, self__.timeline_data, self__.index, self__.time_variable, self__.map__17603, self__.validate__10517__auto__, self__.filter_spec, self__.input_checker17551, self__.controls, self__.output_checker17552, 
              self__.map__17600, self__.bounds, self__.G__17596, self__.input_schema17550, self__.map__17607, self__.id, self__.timeline_chart, self__.opts, self__.G__17554, self__.map__17601, self__.map__17605, self__.ufv__, self__.G__17597, self__.map__17599, self__.G__17555, meta17609__$1);
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
          clustermap.components.timeline_chart.__GT_t17608 = function(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, 
          map__17599, map__17599__$1, timeline_chart__$1, map__17600, map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630) {
            return function __GT_t17608(interval__$2, map__17598__$2, map__17602__$2, G__17553__$1, index_type__$2, compiled_filter__$2, output_schema17549__$1, owner__$3, map__17606__$2, filter_by_view__$2, props__$2, map__17604__$2, measure_variables__$2, timeline_data__$2, index__$2, time_variable__$2, map__17603__$2, validate__10517__auto____$1, filter_spec__$2, input_checker17551__$1, controls__$2, output_checker17552__$1, map__17600__$2, bounds__$2, G__17596__$2, input_schema17550__$1, map__17607__$2, 
            id__$2, timeline_chart__$3, opts__$2, G__17554__$1, map__17601__$2, map__17605__$2, ufv____$1, G__17597__$2, map__17599__$2, G__17555__$1, meta17609) {
              return new clustermap.components.timeline_chart.t17608(interval__$2, map__17598__$2, map__17602__$2, G__17553__$1, index_type__$2, compiled_filter__$2, output_schema17549__$1, owner__$3, map__17606__$2, filter_by_view__$2, props__$2, map__17604__$2, measure_variables__$2, timeline_data__$2, index__$2, time_variable__$2, map__17603__$2, validate__10517__auto____$1, filter_spec__$2, input_checker17551__$1, controls__$2, output_checker17552__$1, map__17600__$2, bounds__$2, G__17596__$2, 
              input_schema17550__$1, map__17607__$2, id__$2, timeline_chart__$3, opts__$2, G__17554__$1, map__17601__$2, map__17605__$2, ufv____$1, G__17597__$2, map__17599__$2, G__17555__$1, meta17609);
            };
          }(map__17603, map__17603__$1, props__$1, map__17604, map__17604__$1, timeline_chart__$2, map__17605, map__17605__$1, controls__$1, index__$1, index_type__$1, time_variable__$1, measure_variables__$1, interval__$1, timeline_data__$1, map__17606, map__17606__$1, filter_spec__$1, filter_by_view__$1, compiled_filter__$1, bounds__$1, owner__$2, map__17607, map__17607__$1, opts__$1, id__$1, G__17596, map__17598, map__17598__$1, props, map__17599, map__17599__$1, timeline_chart__$1, map__17600, 
          map__17600__$1, controls, index, index_type, time_variable, measure_variables, interval, timeline_data, map__17601, map__17601__$1, filter_spec, filter_by_view, compiled_filter, bounds, owner, G__17597, map__17602, map__17602__$1, opts, id, validate__10517__auto__, ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
        }
        return new clustermap.components.timeline_chart.t17608(interval__$1, map__17598__$1, map__17602__$1, G__17553, index_type__$1, compiled_filter__$1, output_schema17549_17627, owner__$2, map__17606__$1, filter_by_view__$1, props__$1, map__17604__$1, measure_variables__$1, timeline_data__$1, index__$1, time_variable__$1, map__17603__$1, validate__10517__auto__, filter_spec__$1, input_checker17551_17629, controls__$1, output_checker17552_17630, map__17600__$1, bounds__$1, G__17596__$1, input_schema17550_17628, 
        map__17607__$1, id__$1, timeline_chart__$2, opts__$1, G__17554, map__17601__$1, map__17605__$1, ufv___17626, G__17597__$1, map__17599__$1, G__17555, null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__10517__auto__)) {
      var temp__4126__auto___17635 = output_checker17552_17630.call(null, o__10520__auto__);
      if (cljs.core.truth_(temp__4126__auto___17635)) {
        var error__10519__auto___17636 = temp__4126__auto___17635;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", new cljs.core.Symbol(null, "timeline-chart", "timeline-chart", 2135471483, null), cljs.core.pr_str.call(null, error__10519__auto___17636)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema17549_17627, new cljs.core.Keyword(null, "value", "value", 305978217), o__10520__auto__, new cljs.core.Keyword(null, "error", 
        "error", -978969032), error__10519__auto___17636], null));
      } else {
      }
    } else {
    }
    return o__10520__auto__;
  };
}(ufv___17626, output_schema17549_17627, input_schema17550_17628, input_checker17551_17629, output_checker17552_17630);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, clustermap.components.timeline_chart.timeline_chart), schema.core.make_fn_schema.call(null, output_schema17549_17627, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema17550_17628], null)));
clustermap.components.timeline_chart.__GT_timeline_chart = function() {
  var __GT_timeline_chart = null;
  var __GT_timeline_chart__1 = function(cursor__13914__auto__) {
    return om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, cursor__13914__auto__);
  };
  var __GT_timeline_chart__2 = function(cursor__13914__auto__, m17548) {
    return om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, cursor__13914__auto__, m17548);
  };
  __GT_timeline_chart = function(cursor__13914__auto__, m17548) {
    switch(arguments.length) {
      case 1:
        return __GT_timeline_chart__1.call(this, cursor__13914__auto__);
      case 2:
        return __GT_timeline_chart__2.call(this, cursor__13914__auto__, m17548);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_timeline_chart.cljs$core$IFn$_invoke$arity$1 = __GT_timeline_chart__1;
  __GT_timeline_chart.cljs$core$IFn$_invoke$arity$2 = __GT_timeline_chart__2;
  return __GT_timeline_chart;
}();
goog.provide("clustermap.components.table");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.table.order_col = function order_col(controls, p__17382, col_key, col_name) {
  var map__17392 = p__17382;
  var map__17392__$1 = cljs.core.seq_QMARK_.call(null, map__17392) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17392) : map__17392;
  var table_data = map__17392__$1;
  var current_sort_spec = cljs.core.get.call(null, map__17392__$1, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994));
  var current_sort_spec__$1 = cljs.core.sequential_QMARK_.call(null, current_sort_spec) ? cljs.core.first.call(null, current_sort_spec) : current_sort_spec;
  var current_sort_key = function() {
    var G__17393 = current_sort_spec__$1;
    var G__17393__$1 = G__17393 == null ? null : cljs.core.keys.call(null, G__17393);
    var G__17393__$2 = G__17393__$1 == null ? null : cljs.core.first.call(null, G__17393__$1);
    return G__17393__$2;
  }();
  var current_sort_dir = function() {
    var G__17394 = current_sort_spec__$1;
    var G__17394__$1 = G__17394 == null ? null : current_sort_key.call(null, G__17394);
    var G__17394__$2 = G__17394__$1 == null ? null : (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(G__17394__$1);
    return G__17394__$2;
  }();
  return React.DOM.a({"href":"#", "onClick":function(current_sort_spec__$1, current_sort_key, current_sort_dir, map__17392, map__17392__$1, table_data, current_sort_spec) {
    return function(e) {
      e.preventDefault();
      var pred__17395 = cljs.core._EQ_;
      var expr__17396 = current_sort_dir;
      if (cljs.core.truth_(pred__17395.call(null, "asc", expr__17396))) {
        return om.core.update_BANG_.call(null, controls, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994), new cljs.core.PersistentArrayMap.fromArray([col_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.Keyword(null, "desc", "desc", 2093485764)], null)], true, false));
      } else {
        if (cljs.core.truth_(pred__17395.call(null, "desc", expr__17396))) {
          return om.core.update_BANG_.call(null, controls, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994), new cljs.core.PersistentArrayMap.fromArray([col_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.Keyword(null, "asc", "asc", 356854569)], null)], true, false));
        } else {
          return om.core.update_BANG_.call(null, controls, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994), new cljs.core.PersistentArrayMap.fromArray([col_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.Keyword(null, "desc", "desc", 2093485764)], null)], true, false));
        }
      }
    };
  }(current_sort_spec__$1, current_sort_key, current_sort_dir, map__17392, map__17392__$1, table_data, current_sort_spec)}, sablono.interpreter.interpret.call(null, col_name), cljs.core._EQ_.call(null, current_sort_key, col_key) ? sablono.interpreter.interpret.call(null, function() {
    var pred__17398 = cljs.core._EQ_;
    var expr__17399 = current_sort_dir;
    if (cljs.core.truth_(pred__17398.call(null, "asc", expr__17399))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-asc", "i.icon-asc", 1318187620)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-desc", "i.icon-desc", -1647067651)], null);
    }
  }()) : null);
};
clustermap.components.table.paginate = function paginate(p__17401, owner, opts) {
  var map__17418 = p__17401;
  var map__17418__$1 = cljs.core.seq_QMARK_.call(null, map__17418) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17418) : map__17418;
  var controls = cljs.core.get.call(null, map__17418__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__17419 = cljs.core.get.call(null, map__17418__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__17419__$1 = cljs.core.seq_QMARK_.call(null, map__17419) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17419) : map__17419;
  var table_data = map__17419__$1;
  var count = cljs.core.get.call(null, map__17419__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  var from = cljs.core.get.call(null, map__17419__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
  var size = cljs.core.get.call(null, map__17419__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  if (typeof clustermap.components.table.t17420 !== "undefined") {
  } else {
    clustermap.components.table.t17420 = function(map__17418, owner, paginate, table_data, controls, size, map__17419, p__17401, from, count, opts, meta17421) {
      this.map__17418 = map__17418;
      this.owner = owner;
      this.paginate = paginate;
      this.table_data = table_data;
      this.controls = controls;
      this.size = size;
      this.map__17419 = map__17419;
      this.p__17401 = p__17401;
      this.from = from;
      this.count = count;
      this.opts = opts;
      this.meta17421 = meta17421;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t17420.cljs$lang$type = true;
    clustermap.components.table.t17420.cljs$lang$ctorStr = "clustermap.components.table/t17420";
    clustermap.components.table.t17420.cljs$lang$ctorPrWriter = function(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t17420");
      };
    }(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size);
    clustermap.components.table.t17420.prototype.om$core$IRender$ = true;
    clustermap.components.table.t17420.prototype.om$core$IRender$render$arity$1 = function(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs17423 = cljs.core.truth_(function() {
          var and__3546__auto__ = self__.from;
          if (cljs.core.truth_(and__3546__auto__)) {
            return self__.from > 0;
          } else {
            return and__3546__auto__;
          }
        }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 1950349585), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(this__9504__auto____$1, 
        map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), function() {
              var x__3865__auto__ = 0;
              var y__3866__auto__ = self__.from - self__.size;
              return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
            }());
          };
        }(this__9504__auto____$1, map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 1090541868)], null)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 1950349585), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 1090541868)], null)], null);
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs17423) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["paginate"], null)], null), attrs17423)) : {"className":"paginate"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
        attrs17423) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var attrs17424 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var x__3872__auto__ = self__.from + self__.size;
            var y__3873__auto__ = self__.count;
            return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
          }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.count);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs17424) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs17424)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs17424) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17424)], null)));
        }(), self__.from + self__.size < self__.count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs17423, this__9504__auto____$1, map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), self__.from + self__.size);
          };
        }(attrs17423, this__9504__auto____$1, map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17423), function() {
          var attrs17425 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var x__3872__auto__ = self__.from + self__.size;
            var y__3873__auto__ = self__.count;
            return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
          }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.count);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs17425) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs17425)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs17425) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17425)], null)));
        }(), self__.from + self__.size < self__.count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs17423, this__9504__auto____$1, map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), self__.from + self__.size);
          };
        }(attrs17423, this__9504__auto____$1, map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null)));
      };
    }(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size);
    clustermap.components.table.t17420.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
      return function(_17422) {
        var self__ = this;
        var _17422__$1 = this;
        return self__.meta17421;
      };
    }(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size);
    clustermap.components.table.t17420.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
      return function(_17422, meta17421__$1) {
        var self__ = this;
        var _17422__$1 = this;
        return new clustermap.components.table.t17420(self__.map__17418, self__.owner, self__.paginate, self__.table_data, self__.controls, self__.size, self__.map__17419, self__.p__17401, self__.from, self__.count, self__.opts, meta17421__$1);
      };
    }(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size);
    clustermap.components.table.__GT_t17420 = function(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size) {
      return function __GT_t17420(map__17418__$2, owner__$1, paginate__$1, table_data__$1, controls__$1, size__$1, map__17419__$2, p__17401__$1, from__$1, count__$1, opts__$1, meta17421) {
        return new clustermap.components.table.t17420(map__17418__$2, owner__$1, paginate__$1, table_data__$1, controls__$1, size__$1, map__17419__$2, p__17401__$1, from__$1, count__$1, opts__$1, meta17421);
      };
    }(map__17418, map__17418__$1, controls, map__17419, map__17419__$1, table_data, count, from, size);
  }
  return new clustermap.components.table.t17420(map__17418__$1, owner, paginate, table_data, controls, size, map__17419__$1, p__17401, from, count, opts, null);
};
clustermap.components.table.render_table_row = function render_table_row(p__17434) {
  var map__17447 = p__17434;
  var map__17447__$1 = cljs.core.seq_QMARK_.call(null, map__17447) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17447) : map__17447;
  var record = cljs.core.get.call(null, map__17447__$1, new cljs.core.Keyword(null, "record", "record", -779106859));
  var columns = cljs.core.get.call(null, map__17447__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  if (typeof clustermap.components.table.t17448 !== "undefined") {
  } else {
    clustermap.components.table.t17448 = function(columns, record, map__17447, p__17434, render_table_row, meta17449) {
      this.columns = columns;
      this.record = record;
      this.map__17447 = map__17447;
      this.p__17434 = p__17434;
      this.render_table_row = render_table_row;
      this.meta17449 = meta17449;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t17448.cljs$lang$type = true;
    clustermap.components.table.t17448.cljs$lang$ctorStr = "clustermap.components.table/t17448";
    clustermap.components.table.t17448.cljs$lang$ctorPrWriter = function(map__17447, map__17447__$1, record, columns) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t17448");
      };
    }(map__17447, map__17447__$1, record, columns);
    clustermap.components.table.t17448.prototype.om$core$IRender$ = true;
    clustermap.components.table.t17448.prototype.om$core$IRender$render$arity$1 = function(map__17447, map__17447__$1, record, columns) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return sablono.interpreter.interpret.call(null, function() {
          var row = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), function() {
            var iter__4283__auto__ = function(this__9504__auto____$1, map__17447, map__17447__$1, record, columns) {
              return function iter__17451(s__17452) {
                return new cljs.core.LazySeq(null, function(this__9504__auto____$1, map__17447, map__17447__$1, record, columns) {
                  return function() {
                    var s__17452__$1 = s__17452;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__17452__$1);
                      if (temp__4126__auto__) {
                        var s__17452__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__17452__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17452__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__17454 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__17453 = 0;
                            while (true) {
                              if (i__17453 < size__4282__auto__) {
                                var col = cljs.core._nth.call(null, c__4281__auto__, i__17453);
                                cljs.core.chunk_append.call(null, b__17454, function() {
                                  var vec__17457 = col;
                                  var col_key = cljs.core.nth.call(null, vec__17457, 0, null);
                                  var col_name = cljs.core.nth.call(null, vec__17457, 1, null);
                                  var formatter = cljs.core.nth.call(null, vec__17457, 2, null);
                                  var formatter__$1 = function() {
                                    var or__3558__auto__ = formatter;
                                    if (cljs.core.truth_(or__3558__auto__)) {
                                      return or__3558__auto__;
                                    } else {
                                      return cljs.core.identity;
                                    }
                                  }();
                                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), formatter__$1.call(null, cljs.core.get.call(null, self__.record, col_key))], null);
                                }());
                                var G__17459 = i__17453 + 1;
                                i__17453 = G__17459;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17454), iter__17451.call(null, cljs.core.chunk_rest.call(null, s__17452__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17454), null);
                          }
                        } else {
                          var col = cljs.core.first.call(null, s__17452__$2);
                          return cljs.core.cons.call(null, function() {
                            var vec__17458 = col;
                            var col_key = cljs.core.nth.call(null, vec__17458, 0, null);
                            var col_name = cljs.core.nth.call(null, vec__17458, 1, null);
                            var formatter = cljs.core.nth.call(null, vec__17458, 2, null);
                            var formatter__$1 = function() {
                              var or__3558__auto__ = formatter;
                              if (cljs.core.truth_(or__3558__auto__)) {
                                return or__3558__auto__;
                              } else {
                                return cljs.core.identity;
                              }
                            }();
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), formatter__$1.call(null, cljs.core.get.call(null, self__.record, col_key))], null);
                          }(), iter__17451.call(null, cljs.core.rest.call(null, s__17452__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(this__9504__auto____$1, map__17447, map__17447__$1, record, columns), null, null);
              };
            }(this__9504__auto____$1, map__17447, map__17447__$1, record, columns);
            return iter__4283__auto__.call(null, self__.columns);
          }());
          return row;
        }());
      };
    }(map__17447, map__17447__$1, record, columns);
    clustermap.components.table.t17448.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17447, map__17447__$1, record, columns) {
      return function(_17450) {
        var self__ = this;
        var _17450__$1 = this;
        return self__.meta17449;
      };
    }(map__17447, map__17447__$1, record, columns);
    clustermap.components.table.t17448.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17447, map__17447__$1, record, columns) {
      return function(_17450, meta17449__$1) {
        var self__ = this;
        var _17450__$1 = this;
        return new clustermap.components.table.t17448(self__.columns, self__.record, self__.map__17447, self__.p__17434, self__.render_table_row, meta17449__$1);
      };
    }(map__17447, map__17447__$1, record, columns);
    clustermap.components.table.__GT_t17448 = function(map__17447, map__17447__$1, record, columns) {
      return function __GT_t17448(columns__$1, record__$1, map__17447__$2, p__17434__$1, render_table_row__$1, meta17449) {
        return new clustermap.components.table.t17448(columns__$1, record__$1, map__17447__$2, p__17434__$1, render_table_row__$1, meta17449);
      };
    }(map__17447, map__17447__$1, record, columns);
  }
  return new clustermap.components.table.t17448(columns, record, map__17447__$1, p__17434, render_table_row, null);
};
clustermap.components.table.render_table = function render_table(p__17460, owner, opts) {
  var map__17484 = p__17460;
  var map__17484__$1 = cljs.core.seq_QMARK_.call(null, map__17484) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17484) : map__17484;
  var props = map__17484__$1;
  var table_data = cljs.core.get.call(null, map__17484__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__17485 = cljs.core.get.call(null, map__17484__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__17485__$1 = cljs.core.seq_QMARK_.call(null, map__17485) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17485) : map__17485;
  var controls = map__17485__$1;
  var columns = cljs.core.get.call(null, map__17485__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  var filter_by_view = cljs.core.get.call(null, map__17485__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["COLUMNS", columns], null)));
  var attrs17486 = om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null));
  return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs17486) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs17486)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
  cljs.core.map_QMARK_.call(null, attrs17486) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, function() {
    var attrs17487 = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), function() {
      var iter__4283__auto__ = function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view) {
        return function iter__17491(s__17492) {
          return new cljs.core.LazySeq(null, function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view) {
            return function() {
              var s__17492__$1 = s__17492;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__17492__$1);
                if (temp__4126__auto__) {
                  var s__17492__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__17492__$2)) {
                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17492__$2);
                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                    var b__17494 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                    if (function() {
                      var i__17493 = 0;
                      while (true) {
                        if (i__17493 < size__4282__auto__) {
                          var col = cljs.core._nth.call(null, c__4281__auto__, i__17493);
                          cljs.core.chunk_append.call(null, b__17494, function() {
                            var vec__17497 = col;
                            var col_key = cljs.core.nth.call(null, vec__17497, 0, null);
                            var col_name = cljs.core.nth.call(null, vec__17497, 1, null);
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), clustermap.components.table.order_col.call(null, controls, table_data, col_key, col_name)], null);
                          }());
                          var G__17507 = i__17493 + 1;
                          i__17493 = G__17507;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17494), iter__17491.call(null, cljs.core.chunk_rest.call(null, s__17492__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17494), null);
                    }
                  } else {
                    var col = cljs.core.first.call(null, s__17492__$2);
                    return cljs.core.cons.call(null, function() {
                      var vec__17498 = col;
                      var col_key = cljs.core.nth.call(null, vec__17498, 0, null);
                      var col_name = cljs.core.nth.call(null, vec__17498, 1, null);
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), clustermap.components.table.order_col.call(null, controls, table_data, col_key, col_name)], null);
                    }(), iter__17491.call(null, cljs.core.rest.call(null, s__17492__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view), null, null);
        };
      }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view);
      return iter__4283__auto__.call(null, columns);
    }());
    return cljs.core.apply.call(null, React.DOM.thead, cljs.core.map_QMARK_.call(null, attrs17487) ? sablono.interpreter.attributes.call(null, attrs17487) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17487) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17487)], null)));
  }(), function() {
    var attrs17488 = om.core.build_all.call(null, clustermap.components.table.render_table_row, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(table_data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, 
    controls, columns, filter_by_view) {
      return function(r) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "columns", "columns", 1998437288), columns, new cljs.core.Keyword(null, "record", "record", -779106859), r, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "?natural_id", "?natural_id", -1454211689)).cljs$core$IFn$_invoke$arity$1(r)], null);
      };
    }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view)], null));
    return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs17488) ? sablono.interpreter.attributes.call(null, attrs17488) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17488) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17488)], null)));
  }())), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17486), React.DOM.div({"className":"table-responsive"}, 
  React.DOM.table({"className":"table"}, function() {
    var attrs17489 = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), function() {
      var iter__4283__auto__ = function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view) {
        return function iter__17499(s__17500) {
          return new cljs.core.LazySeq(null, function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view) {
            return function() {
              var s__17500__$1 = s__17500;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__17500__$1);
                if (temp__4126__auto__) {
                  var s__17500__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__17500__$2)) {
                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17500__$2);
                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                    var b__17502 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                    if (function() {
                      var i__17501 = 0;
                      while (true) {
                        if (i__17501 < size__4282__auto__) {
                          var col = cljs.core._nth.call(null, c__4281__auto__, i__17501);
                          cljs.core.chunk_append.call(null, b__17502, function() {
                            var vec__17505 = col;
                            var col_key = cljs.core.nth.call(null, vec__17505, 0, null);
                            var col_name = cljs.core.nth.call(null, vec__17505, 1, null);
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), clustermap.components.table.order_col.call(null, controls, table_data, col_key, col_name)], null);
                          }());
                          var G__17508 = i__17501 + 1;
                          i__17501 = G__17508;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17502), iter__17499.call(null, cljs.core.chunk_rest.call(null, s__17500__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17502), null);
                    }
                  } else {
                    var col = cljs.core.first.call(null, s__17500__$2);
                    return cljs.core.cons.call(null, function() {
                      var vec__17506 = col;
                      var col_key = cljs.core.nth.call(null, vec__17506, 0, null);
                      var col_name = cljs.core.nth.call(null, vec__17506, 1, null);
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), clustermap.components.table.order_col.call(null, controls, table_data, col_key, col_name)], null);
                    }(), iter__17499.call(null, cljs.core.rest.call(null, s__17500__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view), null, null);
        };
      }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view);
      return iter__4283__auto__.call(null, columns);
    }());
    return cljs.core.apply.call(null, React.DOM.thead, cljs.core.map_QMARK_.call(null, attrs17489) ? sablono.interpreter.attributes.call(null, attrs17489) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17489) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17489)], null)));
  }(), function() {
    var attrs17490 = om.core.build_all.call(null, clustermap.components.table.render_table_row, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(table_data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, 
    controls, columns, filter_by_view) {
      return function(r) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "columns", "columns", 1998437288), columns, new cljs.core.Keyword(null, "record", "record", -779106859), r, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "?natural_id", "?natural_id", -1454211689)).cljs$core$IFn$_invoke$arity$1(r)], null);
      };
    }(attrs17486, map__17484, map__17484__$1, props, table_data, map__17485, map__17485__$1, controls, columns, filter_by_view)], null));
    return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs17490) ? sablono.interpreter.attributes.call(null, attrs17490) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17490) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17490)], null)));
  }())), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null)))], null)));
};
clustermap.components.table.request_table_data = function request_table_data(resource, index, index_type, filter_spec, bounds, sort_spec, from, size) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.simple_table, index, index_type, filter_spec, bounds, sort_spec, from, size);
};
clustermap.components.table.table_component = function table_component(p__17509, owner) {
  var map__17524 = p__17509;
  var map__17524__$1 = cljs.core.seq_QMARK_.call(null, map__17524) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17524) : map__17524;
  var props = map__17524__$1;
  var map__17525 = cljs.core.get.call(null, map__17524__$1, new cljs.core.Keyword(null, "table-state", "table-state", -1662785974));
  var map__17525__$1 = cljs.core.seq_QMARK_.call(null, map__17525) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17525) : map__17525;
  var table_state = map__17525__$1;
  var table_data = cljs.core.get.call(null, map__17525__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__17526 = cljs.core.get.call(null, map__17525__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__17526__$1 = cljs.core.seq_QMARK_.call(null, map__17526) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17526) : map__17526;
  var controls = map__17526__$1;
  var index = cljs.core.get.call(null, map__17526__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
  var sort_spec = cljs.core.get.call(null, map__17526__$1, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994));
  var from = cljs.core.get.call(null, map__17526__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
  var size = cljs.core.get.call(null, map__17526__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  var columns = cljs.core.get.call(null, map__17526__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  var map__17527 = cljs.core.get.call(null, map__17524__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__17527__$1 = cljs.core.seq_QMARK_.call(null, map__17527) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17527) : map__17527;
  var filter_by_view = cljs.core.get.call(null, map__17527__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var filter_spec = cljs.core.get.call(null, map__17527__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var bounds = cljs.core.get.call(null, map__17524__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.table.t17528 !== "undefined") {
  } else {
    clustermap.components.table.t17528 = function(sort_spec, table_component, owner, filter_by_view, props, table_data, index, filter_spec, columns, map__17525, table_state, p__17509, map__17526, controls, bounds, size, map__17527, map__17524, from, meta17529) {
      this.sort_spec = sort_spec;
      this.table_component = table_component;
      this.owner = owner;
      this.filter_by_view = filter_by_view;
      this.props = props;
      this.table_data = table_data;
      this.index = index;
      this.filter_spec = filter_spec;
      this.columns = columns;
      this.map__17525 = map__17525;
      this.table_state = table_state;
      this.p__17509 = p__17509;
      this.map__17526 = map__17526;
      this.controls = controls;
      this.bounds = bounds;
      this.size = size;
      this.map__17527 = map__17527;
      this.map__17524 = map__17524;
      this.from = from;
      this.meta17529 = meta17529;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t17528.cljs$lang$type = true;
    clustermap.components.table.t17528.cljs$lang$ctorStr = "clustermap.components.table/t17528";
    clustermap.components.table.t17528.cljs$lang$ctorPrWriter = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t17528");
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t17528.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.table.t17528.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(_, p__17531, p__17532) {
        var self__ = this;
        var map__17533 = p__17531;
        var map__17533__$1 = cljs.core.seq_QMARK_.call(null, map__17533) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17533) : map__17533;
        var next_props = map__17533__$1;
        var map__17534 = cljs.core.get.call(null, map__17533__$1, new cljs.core.Keyword(null, "table-state", "table-state", -1662785974));
        var map__17534__$1 = cljs.core.seq_QMARK_.call(null, map__17534) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17534) : map__17534;
        var next_table_state = map__17534__$1;
        var next_table_data = cljs.core.get.call(null, map__17534__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
        var map__17535 = cljs.core.get.call(null, map__17534__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__17535__$1 = cljs.core.seq_QMARK_.call(null, map__17535) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17535) : map__17535;
        var next_controls = map__17535__$1;
        var next_index = cljs.core.get.call(null, map__17535__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
        var next_index_type = cljs.core.get.call(null, map__17535__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
        var next_sort_spec = cljs.core.get.call(null, map__17535__$1, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994));
        var next_from = cljs.core.get.call(null, map__17535__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
        var next_size = cljs.core.get.call(null, map__17535__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
        var map__17536 = cljs.core.get.call(null, map__17533__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__17536__$1 = cljs.core.seq_QMARK_.call(null, map__17536) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17536) : map__17536;
        var next_filter_by_view = cljs.core.get.call(null, map__17536__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_filter_spec = cljs.core.get.call(null, map__17536__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var next_bounds = cljs.core.get.call(null, map__17533__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var map__17537 = p__17532;
        var map__17537__$1 = cljs.core.seq_QMARK_.call(null, map__17537) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17537) : map__17537;
        var next_state = map__17537__$1;
        var table_data_resource = cljs.core.get.call(null, map__17537__$1, new cljs.core.Keyword(null, "table-data-resource", "table-data-resource", -1272908133));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not.call(null, next_table_data);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_controls, self__.controls);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var or__3558__auto____$2 = cljs.core.not_EQ_.call(null, next_sort_spec, self__.sort_spec);
              if (or__3558__auto____$2) {
                return or__3558__auto____$2;
              } else {
                var or__3558__auto____$3 = cljs.core.not_EQ_.call(null, next_filter_spec, self__.filter_spec);
                if (or__3558__auto____$3) {
                  return or__3558__auto____$3;
                } else {
                  var or__3558__auto____$4 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
                  if (or__3558__auto____$4) {
                    return or__3558__auto____$4;
                  } else {
                    var and__3546__auto__ = next_filter_by_view;
                    if (cljs.core.truth_(and__3546__auto__)) {
                      return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
                    } else {
                      return and__3546__auto__;
                    }
                  }
                }
              }
            }
          }
        }())) {
          return clustermap.components.table.request_table_data.call(null, table_data_resource, next_index, next_index_type, next_filter_spec, cljs.core.truth_(next_filter_by_view) ? next_bounds : null, next_sort_spec, next_from, next_size);
        } else {
          return null;
        }
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t17528.prototype.om$core$IRender$ = true;
    clustermap.components.table.t17528.prototype.om$core$IRender$render$arity$1 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return clustermap.components.table.render_table.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), self__.table_data, new cljs.core.Keyword(null, "controls", "controls", 1340701452), self__.controls], null), self__.owner, cljs.core.PersistentArrayMap.EMPTY);
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t17528.prototype.om$core$IDidMount$ = true;
    clustermap.components.table.t17528.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var tdr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "table-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "table-data-resource", "table-data-resource", -1272908133), tdr);
        return clustermap.ordered_resource.retrieve_responses.call(null, tdr, function(tdr, ___$1, map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
          return function(data) {
            return om.core.update_BANG_.call(null, self__.table_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table-data", "table-data", -1783738205)], null), data);
          };
        }(tdr, ___$1, map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds));
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t17528.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(_17530) {
        var self__ = this;
        var _17530__$1 = this;
        return self__.meta17529;
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t17528.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function(_17530, meta17529__$1) {
        var self__ = this;
        var _17530__$1 = this;
        return new clustermap.components.table.t17528(self__.sort_spec, self__.table_component, self__.owner, self__.filter_by_view, self__.props, self__.table_data, self__.index, self__.filter_spec, self__.columns, self__.map__17525, self__.table_state, self__.p__17509, self__.map__17526, self__.controls, self__.bounds, self__.size, self__.map__17527, self__.map__17524, self__.from, meta17529__$1);
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.__GT_t17528 = function(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds) {
      return function __GT_t17528(sort_spec__$1, table_component__$1, owner__$1, filter_by_view__$1, props__$1, table_data__$1, index__$1, filter_spec__$1, columns__$1, map__17525__$2, table_state__$1, p__17509__$1, map__17526__$2, controls__$1, bounds__$1, size__$1, map__17527__$2, map__17524__$2, from__$1, meta17529) {
        return new clustermap.components.table.t17528(sort_spec__$1, table_component__$1, owner__$1, filter_by_view__$1, props__$1, table_data__$1, index__$1, filter_spec__$1, columns__$1, map__17525__$2, table_state__$1, p__17509__$1, map__17526__$2, controls__$1, bounds__$1, size__$1, map__17527__$2, map__17524__$2, from__$1, meta17529);
      };
    }(map__17524, map__17524__$1, props, map__17525, map__17525__$1, table_state, table_data, map__17526, map__17526__$1, controls, index, sort_spec, from, size, columns, map__17527, map__17527__$1, filter_by_view, filter_spec, bounds);
  }
  return new clustermap.components.table.t17528(sort_spec, table_component, owner, filter_by_view, props, table_data, index, filter_spec, columns, map__17525__$1, table_state, p__17509, map__17526__$1, controls, bounds, size, map__17527__$1, map__17524__$1, from, null);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return!goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return!goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? document.documentMode >= 8 : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":yearNum});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = opt_weekDay || goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var ONE_DAY = 24 * 60 * 60 * 1E3;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * ONE_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / ONE_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = parts[2] * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? parts[4] * 1E3 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 6E4);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = (opt_months);
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = (opt_years) || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return(this.date.getMonth());
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return(this.getDay() + 6) % 7;
};
goog.date.Date.prototype.getWeekday = function() {
  return(this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return(this.date.getUTCMonth());
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return(this.date.getUTCDay() + 6) % 7;
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return(this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1;m >= 0;m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 864E5);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return!!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return!isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return(this.date.getUTCDay());
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setHours(this.date.getHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setMinutes(this.date.getMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setSeconds(this.date.getSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    var MSG_TIME_AM = goog.getMsg("am");
    var MSG_TIME_PM = goog.getMsg("pm");
    label += isPM ? MSG_TIME_PM : MSG_TIME_AM;
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1E3 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("cljs_time.core");
goog.require("cljs.core");
goog.require("cljs_time.internal.core");
goog.require("goog.i18n.TimeZone");
goog.require("goog.date.UtcDateTime");
goog.require("goog.date.DateTime");
goog.require("goog.date.Date");
goog.require("cljs_time.internal.core");
cljs_time.core._STAR_sys_time_STAR_ = null;
cljs_time.core._EQ_ = cljs_time.internal.core._EQ_;
cljs_time.core.DateTimeProtocol = function() {
  var obj24091 = {};
  return obj24091;
}();
cljs_time.core.year = function year(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$year$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$year$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.year[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.year["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.year", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.month = function month(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$month$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$month$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.month[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.month["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.month", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day = function day(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.day[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.day["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day_of_week = function day_of_week(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.day_of_week[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.day_of_week["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day-of-week", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.hour = function hour(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$hour$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$hour$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.hour[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.hour["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.hour", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.minute = function minute(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minute$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minute$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.minute[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.minute["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minute", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.sec = function sec(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$sec$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$sec$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.sec[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.sec["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.sec", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.second = function second(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$second$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$second$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.second[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.second["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.second", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.milli = function milli(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$milli$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$milli$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.milli[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.milli["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.milli", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.after_QMARK_ = function after_QMARK_(this$, that) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2(this$, that);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.after_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.after_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.after?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.before_QMARK_ = function before_QMARK_(this$, that) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2(this$, that);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.before_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.before_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.before?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.plus_ = function plus_(this$, period) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2(this$, period);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.plus_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.plus_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.plus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.minus_ = function minus_(this$, period) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2(this$, period);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs_time.core.minus_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.core.minus_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.periods = function() {
  var fixed_time_fn = function(f, set_fn, op, date, value) {
    var date__$1 = date.clone();
    set_fn.call(null, date__$1, op.call(null, f.call(null, date__$1), value));
    return date__$1;
  };
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.milli, function(fixed_time_fn) {
    return function(p1__24092_SHARP_, p2__24093_SHARP_) {
      return p1__24092_SHARP_.setMilliseconds(p2__24093_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.second, function(fixed_time_fn) {
    return function(p1__24094_SHARP_, p2__24095_SHARP_) {
      return p1__24094_SHARP_.setSeconds(p2__24095_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.minute, function(fixed_time_fn) {
    return function(p1__24096_SHARP_, p2__24097_SHARP_) {
      return p1__24096_SHARP_.setMinutes(p2__24097_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.hour, function(fixed_time_fn) {
    return function(p1__24098_SHARP_, p2__24099_SHARP_) {
      return p1__24098_SHARP_.setHours(p2__24099_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.day, function(fixed_time_fn) {
    return function(p1__24100_SHARP_, p2__24101_SHARP_) {
      return p1__24100_SHARP_.setDate(p2__24101_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      date__$1.setDate(op.call(null, cljs_time.core.day.call(null, date__$1), 7 * value));
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "months", "months", -45571637), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      var m = op.call(null, cljs_time.core.month.call(null, date__$1), value);
      var y = cljs_time.core.year.call(null, date__$1);
      var y__$1 = m > 12 ? y + 1 : m < 1 ? y - 1 : y;
      var m__$1 = m > 12 ? cljs.core.mod.call(null, m, 12) : m < 1 ? m + 12 : m;
      date__$1.setMonth(m__$1 - 1);
      date__$1.setYear(y__$1);
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "years", "years", -1298579689), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, cljs_time.core.year.call(null, date__$1));
        if (and__3546__auto__) {
          var and__3546__auto____$1 = cljs_time.core._EQ_.call(null, 2, cljs_time.core.month.call(null, date__$1));
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return cljs_time.core._EQ_.call(null, 29, cljs_time.core.day.call(null, date__$1));
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        date__$1.setDate(28);
      } else {
      }
      date__$1.setYear(op.call(null, cljs_time.core.year.call(null, date__$1), value));
      return date__$1;
    };
  }(fixed_time_fn)], null);
}();
cljs_time.core.period_fn = function period_fn(p) {
  return function(operator, date) {
    return cljs.core.reduce.call(null, function(p1__24103_SHARP_, p2__24102_SHARP_) {
      return cljs_time.core.periods.call(null, cljs.core.key.call(null, p2__24102_SHARP_)).call(null, operator, p1__24103_SHARP_, cljs.core.val.call(null, p2__24102_SHARP_));
    }, date, p);
  };
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
cljs_time.core.utc = goog.i18n.TimeZone.createTimeZone(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "UTC", new cljs.core.Keyword(null, "std_offset", "std_offset", 1663653877), 0, new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["UTC"], null), new cljs.core.Keyword(null, "transitions", "transitions", -2046216121), cljs.core.PersistentVector.EMPTY], 
null)));
cljs_time.core.now = function now() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    return cljs_time.core._STAR_sys_time_STAR_;
  } else {
    return new goog.date.UtcDateTime;
  }
};
cljs_time.core.time_now = function time_now() {
  return new goog.date.DateTime;
};
cljs_time.core.at_midnight = function at_midnight(datetime) {
  var datetime__$1 = datetime.clone();
  var G__24105 = datetime__$1;
  G__24105.setHours(0);
  G__24105.setMinutes(0);
  G__24105.setSeconds(0);
  G__24105.setMilliseconds(0);
  return G__24105;
};
cljs_time.core.today_at_midnight = function today_at_midnight() {
  return cljs_time.core.at_midnight.call(null, cljs_time.core.now.call(null));
};
cljs_time.core.epoch = function epoch() {
  var G__24107 = new goog.date.UtcDateTime;
  G__24107.setTime(0);
  return G__24107;
};
cljs_time.core.date_midnight = function() {
  var date_midnight = null;
  var date_midnight__1 = function(year) {
    return date_midnight.call(null, year, 1, 1);
  };
  var date_midnight__2 = function(year, month) {
    return date_midnight.call(null, year, month, 1);
  };
  var date_midnight__3 = function(year, month, day) {
    return new goog.date.UtcDateTime(year, month - 1, day);
  };
  date_midnight = function(year, month, day) {
    switch(arguments.length) {
      case 1:
        return date_midnight__1.call(this, year);
      case 2:
        return date_midnight__2.call(this, year, month);
      case 3:
        return date_midnight__3.call(this, year, month, day);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_midnight.cljs$core$IFn$_invoke$arity$1 = date_midnight__1;
  date_midnight.cljs$core$IFn$_invoke$arity$2 = date_midnight__2;
  date_midnight.cljs$core$IFn$_invoke$arity$3 = date_midnight__3;
  return date_midnight;
}();
cljs_time.core.date_time = function() {
  var date_time = null;
  var date_time__1 = function(year) {
    return date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var date_time__2 = function(year, month) {
    return date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var date_time__3 = function(year, month, day) {
    return date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var date_time__4 = function(year, month, day, hour) {
    return date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var date_time__5 = function(year, month, day, hour, minute) {
    return date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var date_time__6 = function(year, month, day, hour, minute, second) {
    return date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.UtcDateTime(year, month - 1, day, hour, minute, second, millis);
  };
  date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return date_time__1.call(this, year);
      case 2:
        return date_time__2.call(this, year, month);
      case 3:
        return date_time__3.call(this, year, month, day);
      case 4:
        return date_time__4.call(this, year, month, day, hour);
      case 5:
        return date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_time.cljs$core$IFn$_invoke$arity$1 = date_time__1;
  date_time.cljs$core$IFn$_invoke$arity$2 = date_time__2;
  date_time.cljs$core$IFn$_invoke$arity$3 = date_time__3;
  date_time.cljs$core$IFn$_invoke$arity$4 = date_time__4;
  date_time.cljs$core$IFn$_invoke$arity$5 = date_time__5;
  date_time.cljs$core$IFn$_invoke$arity$6 = date_time__6;
  date_time.cljs$core$IFn$_invoke$arity$7 = date_time__7;
  return date_time;
}();
cljs_time.core.local_date_time = function() {
  var local_date_time = null;
  var local_date_time__1 = function(year) {
    return local_date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var local_date_time__2 = function(year, month) {
    return local_date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var local_date_time__3 = function(year, month, day) {
    return local_date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var local_date_time__4 = function(year, month, day, hour) {
    return local_date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var local_date_time__5 = function(year, month, day, hour, minute) {
    return local_date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var local_date_time__6 = function(year, month, day, hour, minute, second) {
    return local_date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var local_date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.DateTime(year, month - 1, day, hour, minute, second, millis);
  };
  local_date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return local_date_time__1.call(this, year);
      case 2:
        return local_date_time__2.call(this, year, month);
      case 3:
        return local_date_time__3.call(this, year, month, day);
      case 4:
        return local_date_time__4.call(this, year, month, day, hour);
      case 5:
        return local_date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return local_date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return local_date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  local_date_time.cljs$core$IFn$_invoke$arity$1 = local_date_time__1;
  local_date_time.cljs$core$IFn$_invoke$arity$2 = local_date_time__2;
  local_date_time.cljs$core$IFn$_invoke$arity$3 = local_date_time__3;
  local_date_time.cljs$core$IFn$_invoke$arity$4 = local_date_time__4;
  local_date_time.cljs$core$IFn$_invoke$arity$5 = local_date_time__5;
  local_date_time.cljs$core$IFn$_invoke$arity$6 = local_date_time__6;
  local_date_time.cljs$core$IFn$_invoke$arity$7 = local_date_time__7;
  return local_date_time;
}();
cljs_time.core.local_date = function local_date(year, month, day) {
  return new goog.date.Date(year, month - 1, day);
};
cljs_time.core.today = function today() {
  return new goog.date.Date;
};
cljs_time.core.time_zone_for_offset = function() {
  var time_zone_for_offset = null;
  var time_zone_for_offset__1 = function(hours) {
    return time_zone_for_offset.call(null, hours, null);
  };
  var time_zone_for_offset__2 = function(hours, minutes) {
    var sign = hours < 0 ? new cljs.core.Keyword(null, "-", "-", -2112348439) : new cljs.core.Keyword(null, "+", "+", 1913524883);
    var fmt = "UTC%s%02d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(minutes) ? ":%02d" : null);
    var hours__$1 = hours < 0 ? -1 * hours : hours;
    var tz_name = cljs.core.truth_(minutes) ? cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1, minutes) : cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1);
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), tz_name, new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [sign, hours__$1, function() {
      var or__3558__auto__ = minutes;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }(), 0], null), new cljs.core.Keyword(null, "rules", "rules", 1198912366), "-", new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tz_name], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "time-zone", "cljs-time.core/time-zone", 751963705)], null));
  };
  time_zone_for_offset = function(hours, minutes) {
    switch(arguments.length) {
      case 1:
        return time_zone_for_offset__1.call(this, hours);
      case 2:
        return time_zone_for_offset__2.call(this, hours, minutes);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_zone_for_offset.cljs$core$IFn$_invoke$arity$1 = time_zone_for_offset__1;
  time_zone_for_offset.cljs$core$IFn$_invoke$arity$2 = time_zone_for_offset__2;
  return time_zone_for_offset;
}();
cljs_time.core.default_time_zone = function default_time_zone() {
  var hours = -1 * (new goog.date.DateTime).getTimezoneOffset() / 60;
  cljs.core.prn.call(null, new cljs.core.Symbol(null, "default-time-zone", "default-time-zone", -1422885780, null), hours, hours | 0, cljs.core.mod.call(null, hours, 1));
  return cljs_time.core.time_zone_for_offset.call(null, hours | 0, cljs.core.mod.call(null, hours, 1));
};
cljs_time.core.to_time_zone = function to_time_zone(dt, tz) {
  return dt.withZone(tz);
};
cljs_time.core.from_time_zone = function from_time_zone(dt, tz) {
  return dt.withZoneRetainFields(tz);
};
cljs_time.core.years = function() {
  var years = null;
  var years__0 = function() {
    return years.call(null, null);
  };
  var years__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), n);
  };
  years = function(n) {
    switch(arguments.length) {
      case 0:
        return years__0.call(this);
      case 1:
        return years__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  years.cljs$core$IFn$_invoke$arity$0 = years__0;
  years.cljs$core$IFn$_invoke$arity$1 = years__1;
  return years;
}();
cljs_time.core.months = function() {
  var months = null;
  var months__0 = function() {
    return months.call(null, null);
  };
  var months__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), n);
  };
  months = function(n) {
    switch(arguments.length) {
      case 0:
        return months__0.call(this);
      case 1:
        return months__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  months.cljs$core$IFn$_invoke$arity$0 = months__0;
  months.cljs$core$IFn$_invoke$arity$1 = months__1;
  return months;
}();
cljs_time.core.weeks = function() {
  var weeks = null;
  var weeks__0 = function() {
    return weeks.call(null, null);
  };
  var weeks__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), n);
  };
  weeks = function(n) {
    switch(arguments.length) {
      case 0:
        return weeks__0.call(this);
      case 1:
        return weeks__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  weeks.cljs$core$IFn$_invoke$arity$0 = weeks__0;
  weeks.cljs$core$IFn$_invoke$arity$1 = weeks__1;
  return weeks;
}();
cljs_time.core.days = function() {
  var days = null;
  var days__0 = function() {
    return days.call(null, null);
  };
  var days__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), n);
  };
  days = function(n) {
    switch(arguments.length) {
      case 0:
        return days__0.call(this);
      case 1:
        return days__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  days.cljs$core$IFn$_invoke$arity$0 = days__0;
  days.cljs$core$IFn$_invoke$arity$1 = days__1;
  return days;
}();
cljs_time.core.hours = function() {
  var hours = null;
  var hours__0 = function() {
    return hours.call(null, null);
  };
  var hours__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), n);
  };
  hours = function(n) {
    switch(arguments.length) {
      case 0:
        return hours__0.call(this);
      case 1:
        return hours__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hours.cljs$core$IFn$_invoke$arity$0 = hours__0;
  hours.cljs$core$IFn$_invoke$arity$1 = hours__1;
  return hours;
}();
cljs_time.core.minutes = function() {
  var minutes = null;
  var minutes__0 = function() {
    return minutes.call(null, null);
  };
  var minutes__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), n);
  };
  minutes = function(n) {
    switch(arguments.length) {
      case 0:
        return minutes__0.call(this);
      case 1:
        return minutes__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minutes.cljs$core$IFn$_invoke$arity$0 = minutes__0;
  minutes.cljs$core$IFn$_invoke$arity$1 = minutes__1;
  return minutes;
}();
cljs_time.core.seconds = function() {
  var seconds = null;
  var seconds__0 = function() {
    return seconds.call(null, null);
  };
  var seconds__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), n);
  };
  seconds = function(n) {
    switch(arguments.length) {
      case 0:
        return seconds__0.call(this);
      case 1:
        return seconds__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seconds.cljs$core$IFn$_invoke$arity$0 = seconds__0;
  seconds.cljs$core$IFn$_invoke$arity$1 = seconds__1;
  return seconds;
}();
cljs_time.core.millis = function() {
  var millis = null;
  var millis__0 = function() {
    return millis.call(null, null);
  };
  var millis__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), n);
  };
  millis = function(n) {
    switch(arguments.length) {
      case 0:
        return millis__0.call(this);
      case 1:
        return millis__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  millis.cljs$core$IFn$_invoke$arity$0 = millis__0;
  millis.cljs$core$IFn$_invoke$arity$1 = millis__1;
  return millis;
}();
cljs_time.core.plus = function() {
  var plus = null;
  var plus__2 = function(dt, p) {
    return cljs_time.core.plus_.call(null, dt, p);
  };
  var plus__3 = function() {
    var G__24108__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.plus_, cljs_time.core.plus_.call(null, dt, p), ps);
    };
    var G__24108 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24108__delegate.call(this, dt, p, ps);
    };
    G__24108.cljs$lang$maxFixedArity = 2;
    G__24108.cljs$lang$applyTo = function(arglist__24109) {
      var dt = cljs.core.first(arglist__24109);
      arglist__24109 = cljs.core.next(arglist__24109);
      var p = cljs.core.first(arglist__24109);
      var ps = cljs.core.rest(arglist__24109);
      return G__24108__delegate(dt, p, ps);
    };
    G__24108.cljs$core$IFn$_invoke$arity$variadic = G__24108__delegate;
    return G__24108;
  }();
  plus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return plus__2.call(this, dt, p);
      default:
        return plus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  plus.cljs$lang$maxFixedArity = 2;
  plus.cljs$lang$applyTo = plus__3.cljs$lang$applyTo;
  plus.cljs$core$IFn$_invoke$arity$2 = plus__2;
  plus.cljs$core$IFn$_invoke$arity$variadic = plus__3.cljs$core$IFn$_invoke$arity$variadic;
  return plus;
}();
cljs_time.core.minus = function() {
  var minus = null;
  var minus__2 = function(dt, p) {
    return cljs_time.core.minus_.call(null, dt, p);
  };
  var minus__3 = function() {
    var G__24110__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.minus_, cljs_time.core.minus_.call(null, dt, p), ps);
    };
    var G__24110 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24110__delegate.call(this, dt, p, ps);
    };
    G__24110.cljs$lang$maxFixedArity = 2;
    G__24110.cljs$lang$applyTo = function(arglist__24111) {
      var dt = cljs.core.first(arglist__24111);
      arglist__24111 = cljs.core.next(arglist__24111);
      var p = cljs.core.first(arglist__24111);
      var ps = cljs.core.rest(arglist__24111);
      return G__24110__delegate(dt, p, ps);
    };
    G__24110.cljs$core$IFn$_invoke$arity$variadic = G__24110__delegate;
    return G__24110;
  }();
  minus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return minus__2.call(this, dt, p);
      default:
        return minus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minus.cljs$lang$maxFixedArity = 2;
  minus.cljs$lang$applyTo = minus__3.cljs$lang$applyTo;
  minus.cljs$core$IFn$_invoke$arity$2 = minus__2;
  minus.cljs$core$IFn$_invoke$arity$variadic = minus__3.cljs$core$IFn$_invoke$arity$variadic;
  return minus;
}();
cljs_time.core.ago = function ago(period) {
  return cljs_time.core.minus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.yesterday = function yesterday() {
  return cljs_time.core.ago.call(null, cljs_time.core.days.call(null, 1));
};
cljs_time.core.from_now = function from_now(period) {
  return cljs_time.core.plus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.earliest = function() {
  var earliest = null;
  var earliest__1 = function(dts) {
    return cljs.core.reduce.call(null, earliest, dts);
  };
  var earliest__2 = function(dt1, dt2) {
    if (cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, dt1, dt2))) {
      return dt1;
    } else {
      return dt2;
    }
  };
  earliest = function(dt1, dt2) {
    switch(arguments.length) {
      case 1:
        return earliest__1.call(this, dt1);
      case 2:
        return earliest__2.call(this, dt1, dt2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  earliest.cljs$core$IFn$_invoke$arity$1 = earliest__1;
  earliest.cljs$core$IFn$_invoke$arity$2 = earliest__2;
  return earliest;
}();
cljs_time.core.latest = function() {
  var latest = null;
  var latest__1 = function(dts) {
    return cljs.core.reduce.call(null, latest, dts);
  };
  var latest__2 = function(dt1, dt2) {
    if (cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, dt1, dt2))) {
      return dt1;
    } else {
      return dt2;
    }
  };
  latest = function(dt1, dt2) {
    switch(arguments.length) {
      case 1:
        return latest__1.call(this, dt1);
      case 2:
        return latest__2.call(this, dt1, dt2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  latest.cljs$core$IFn$_invoke$arity$1 = latest__1;
  latest.cljs$core$IFn$_invoke$arity$2 = latest__2;
  return latest;
}();
cljs_time.core.interval = function interval(start, end) {
  if (start.getTime() < end.getTime()) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null))))));
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), start, new cljs.core.Keyword(null, "end", "end", -268185958), end], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null));
};
cljs_time.core.start = function start(in$) {
  return(new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.end = function end(in$) {
  return(new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.extend = function() {
  var extend__delegate = function(in$, by) {
    return cljs.core.assoc.call(null, in$, new cljs.core.Keyword(null, "end", "end", -268185958), cljs.core.apply.call(null, cljs_time.core.plus, cljs_time.core.end.call(null, in$), by));
  };
  var extend = function(in$, var_args) {
    var by = null;
    if (arguments.length > 1) {
      by = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return extend__delegate.call(this, in$, by);
  };
  extend.cljs$lang$maxFixedArity = 1;
  extend.cljs$lang$applyTo = function(arglist__24112) {
    var in$ = cljs.core.first(arglist__24112);
    var by = cljs.core.rest(arglist__24112);
    return extend__delegate(in$, by);
  };
  extend.cljs$core$IFn$_invoke$arity$variadic = extend__delegate;
  return extend;
}();
cljs_time.core.in_millis = function in_millis(p__24113) {
  var map__24115 = p__24113;
  var map__24115__$1 = cljs.core.seq_QMARK_.call(null, map__24115) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24115) : map__24115;
  var end = cljs.core.get.call(null, map__24115__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__24115__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return end.getTime() - start.getTime();
};
cljs_time.core.in_seconds = function in_seconds(in$) {
  return cljs_time.core.in_millis.call(null, in$) / 1E3 | 0;
};
cljs_time.core.in_minutes = function in_minutes(in$) {
  return cljs_time.core.in_seconds.call(null, in$) / 60 | 0;
};
cljs_time.core.in_hours = function in_hours(in$) {
  return cljs_time.core.in_minutes.call(null, in$) / 60 | 0;
};
cljs_time.core.in_days = function in_days(in$) {
  return cljs_time.core.in_hours.call(null, in$) / 24 | 0;
};
cljs_time.core.in_weeks = function in_weeks(in$) {
  return cljs_time.core.in_days.call(null, in$) / 7 | 0;
};
cljs_time.core.month_range = function month_range(p__24118) {
  var map__24120 = p__24118;
  var map__24120__$1 = cljs.core.seq_QMARK_.call(null, map__24120) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24120) : map__24120;
  var end = cljs.core.get.call(null, map__24120__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__24120__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.take_while.call(null, function(map__24120, map__24120__$1, end, start) {
    return function(p1__24116_SHARP_) {
      return cljs_time.core.before_QMARK_.call(null, p1__24116_SHARP_, end);
    };
  }(map__24120, map__24120__$1, end, start), cljs.core.map.call(null, function(map__24120, map__24120__$1, end, start) {
    return function(p1__24117_SHARP_) {
      return cljs_time.core.plus.call(null, start, cljs_time.core.months.call(null, p1__24117_SHARP_ + 1));
    };
  }(map__24120, map__24120__$1, end, start), cljs.core.range.call(null)));
};
cljs_time.core.total_days_in_whole_months = function total_days_in_whole_months(interval) {
  return cljs.core.map.call(null, function(p1__24121_SHARP_) {
    return p1__24121_SHARP_.getNumberOfDaysInMonth();
  }, cljs_time.core.month_range.call(null, interval));
};
cljs_time.core.in_months = function in_months(p__24122) {
  var map__24124 = p__24122;
  var map__24124__$1 = cljs.core.seq_QMARK_.call(null, map__24124) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24124) : map__24124;
  var interval = map__24124__$1;
  var end = cljs.core.get.call(null, map__24124__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__24124__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.count.call(null, cljs_time.core.total_days_in_whole_months.call(null, interval));
};
cljs_time.core.in_years = function in_years(p__24125) {
  var map__24127 = p__24125;
  var map__24127__$1 = cljs.core.seq_QMARK_.call(null, map__24127) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24127) : map__24127;
  var end = cljs.core.get.call(null, map__24127__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__24127__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var sm = cljs_time.core.month.call(null, start);
  var sd = cljs_time.core.day.call(null, start);
  var em = cljs_time.core.month.call(null, end);
  var ed = cljs_time.core.day.call(null, end);
  var d1 = cljs.core.truth_(function() {
    var and__3546__auto__ = cljs_time.core._EQ_.call(null, sm, 2);
    if (cljs.core.truth_(and__3546__auto__)) {
      var and__3546__auto____$1 = cljs_time.core._EQ_.call(null, sd, 29);
      if (cljs.core.truth_(and__3546__auto____$1)) {
        var and__3546__auto____$2 = cljs_time.core._EQ_.call(null, em, 2);
        if (cljs.core.truth_(and__3546__auto____$2)) {
          return cljs_time.core._EQ_.call(null, ed, 28);
        } else {
          return and__3546__auto____$2;
        }
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }()) ? 0 : cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 0 : cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 1 : 0;
  return cljs_time.core.year.call(null, end) - cljs_time.core.year.call(null, start) - d1;
};
cljs_time.core.within_QMARK_ = function() {
  var within_QMARK_ = null;
  var within_QMARK___2 = function(p__24128, date) {
    var map__24130 = p__24128;
    var map__24130__$1 = cljs.core.seq_QMARK_.call(null, map__24130) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24130) : map__24130;
    var end = cljs.core.get.call(null, map__24130__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var start = cljs.core.get.call(null, map__24130__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    return within_QMARK_.call(null, start, end, date);
  };
  var within_QMARK___3 = function(start, end, date) {
    var or__3558__auto__ = cljs_time.core._EQ_.call(null, start, date);
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      var and__3546__auto__ = cljs_time.core.before_QMARK_.call(null, start, date);
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end, date);
      } else {
        return and__3546__auto__;
      }
    }
  };
  within_QMARK_ = function(start, end, date) {
    switch(arguments.length) {
      case 2:
        return within_QMARK___2.call(this, start, end);
      case 3:
        return within_QMARK___3.call(this, start, end, date);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  within_QMARK_.cljs$core$IFn$_invoke$arity$2 = within_QMARK___2;
  within_QMARK_.cljs$core$IFn$_invoke$arity$3 = within_QMARK___3;
  return within_QMARK_;
}();
cljs_time.core.overlaps_QMARK_ = function() {
  var overlaps_QMARK_ = null;
  var overlaps_QMARK___2 = function(p__24131, p__24132) {
    var map__24135 = p__24131;
    var map__24135__$1 = cljs.core.seq_QMARK_.call(null, map__24135) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24135) : map__24135;
    var start_a = cljs.core.get.call(null, map__24135__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_a = cljs.core.get.call(null, map__24135__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var map__24136 = p__24132;
    var map__24136__$1 = cljs.core.seq_QMARK_.call(null, map__24136) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24136) : map__24136;
    var start_b = cljs.core.get.call(null, map__24136__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_b = cljs.core.get.call(null, map__24136__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var and__3546__auto__ = cljs.core.not.call(null, function() {
      var or__3558__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs_time.core._EQ_.call(null, end_a, start_b);
      }
    }());
    if (and__3546__auto__) {
      return overlaps_QMARK_.call(null, start_a, end_a, start_b, end_b);
    } else {
      return and__3546__auto__;
    }
  };
  var overlaps_QMARK___4 = function(start_a, end_a, start_b, end_b) {
    var or__3558__auto__ = function() {
      var and__3546__auto__ = cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      } else {
        return and__3546__auto__;
      }
    }();
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      var or__3558__auto____$1 = function() {
        var and__3546__auto__ = cljs_time.core.after_QMARK_.call(null, end_b, start_a);
        if (cljs.core.truth_(and__3546__auto__)) {
          return cljs_time.core.before_QMARK_.call(null, start_b, end_a);
        } else {
          return and__3546__auto__;
        }
      }();
      if (cljs.core.truth_(or__3558__auto____$1)) {
        return or__3558__auto____$1;
      } else {
        var or__3558__auto____$2 = cljs_time.core._EQ_.call(null, start_a, end_b);
        if (cljs.core.truth_(or__3558__auto____$2)) {
          return or__3558__auto____$2;
        } else {
          return cljs_time.core._EQ_.call(null, start_b, end_a);
        }
      }
    }
  };
  overlaps_QMARK_ = function(start_a, end_a, start_b, end_b) {
    switch(arguments.length) {
      case 2:
        return overlaps_QMARK___2.call(this, start_a, end_a);
      case 4:
        return overlaps_QMARK___4.call(this, start_a, end_a, start_b, end_b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2 = overlaps_QMARK___2;
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4 = overlaps_QMARK___4;
  return overlaps_QMARK_;
}();
cljs_time.core.abuts_QMARK_ = function abuts_QMARK_(p__24137, p__24138) {
  var map__24141 = p__24137;
  var map__24141__$1 = cljs.core.seq_QMARK_.call(null, map__24141) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24141) : map__24141;
  var start_a = cljs.core.get.call(null, map__24141__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__24141__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__24142 = p__24138;
  var map__24142__$1 = cljs.core.seq_QMARK_.call(null, map__24142) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24142) : map__24142;
  var start_b = cljs.core.get.call(null, map__24142__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__24142__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var or__3558__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return cljs_time.core._EQ_.call(null, end_a, start_b);
  }
};
cljs_time.core.date_QMARK_ = function date_QMARK_(x) {
  var G__24144 = x;
  if (G__24144) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__24144.cljs_time$core$DateTimeProtocol$;
      }
    }())) {
      return true;
    } else {
      if (!G__24144.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__24144);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__24144);
  }
};
cljs_time.core.interval_QMARK_ = function interval_QMARK_(x) {
  return cljs_time.core._EQ_.call(null, new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x)));
};
cljs_time.core.period_QMARK_ = function period_QMARK_(x) {
  return cljs_time.core._EQ_.call(null, new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x)));
};
cljs_time.core.period_type_QMARK_ = function period_type_QMARK_(type, x) {
  var and__3546__auto__ = cljs_time.core.period_QMARK_.call(null, x);
  if (cljs.core.truth_(and__3546__auto__)) {
    return cljs.core.contains_QMARK_.call(null, x, type);
  } else {
    return and__3546__auto__;
  }
};
cljs_time.core.years_QMARK_ = function years_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), val);
};
cljs_time.core.months_QMARK_ = function months_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), val);
};
cljs_time.core.weeks_QMARK_ = function weeks_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), val);
};
cljs_time.core.days_QMARK_ = function days_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), val);
};
cljs_time.core.hours_QMARK_ = function hours_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), val);
};
cljs_time.core.minutes_QMARK_ = function minutes_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), val);
};
cljs_time.core.seconds_QMARK_ = function seconds_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), val);
};
cljs_time.core.mins_ago = function mins_ago(d) {
  return cljs_time.core.in_minutes.call(null, cljs_time.core.interval.call(null, d, cljs_time.core.now.call(null)));
};
cljs_time.core.last_day_of_the_month = function() {
  var last_day_of_the_month = null;
  var last_day_of_the_month__1 = function(dt) {
    return last_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var last_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.minus.call(null, cljs_time.core.date_time.call(null, year, month + 1, 1), cljs_time.core.days.call(null, 1));
  };
  last_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return last_day_of_the_month__1.call(this, year);
      case 2:
        return last_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = last_day_of_the_month__1;
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = last_day_of_the_month__2;
  return last_day_of_the_month;
}();
cljs_time.core.number_of_days_in_the_month = function() {
  var number_of_days_in_the_month = null;
  var number_of_days_in_the_month__1 = function(dt) {
    return number_of_days_in_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var number_of_days_in_the_month__2 = function(year, month) {
    return cljs_time.core.last_day_of_the_month.call(null, year, month).getDate();
  };
  number_of_days_in_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return number_of_days_in_the_month__1.call(this, year);
      case 2:
        return number_of_days_in_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1 = number_of_days_in_the_month__1;
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2 = number_of_days_in_the_month__2;
  return number_of_days_in_the_month;
}();
cljs_time.core.first_day_of_the_month = function() {
  var first_day_of_the_month = null;
  var first_day_of_the_month__1 = function(dt) {
    return first_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var first_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.date_time.call(null, year, month, 1);
  };
  first_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return first_day_of_the_month__1.call(this, year);
      case 2:
        return first_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = first_day_of_the_month__1;
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = first_day_of_the_month__2;
  return first_day_of_the_month;
}();
cljs_time.core.__GT_period = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("-\x3eperiod", cljs.core.meta, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
cljs.core._add_method.call(null, cljs_time.core.__GT_period, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null), function(p__24145) {
  var map__24146 = p__24145;
  var map__24146__$1 = cljs.core.seq_QMARK_.call(null, map__24146) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24146) : map__24146;
  var interval = map__24146__$1;
  var end = cljs.core.get.call(null, map__24146__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__24146__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var years = cljs_time.core.in_years.call(null, interval);
  var start_year = cljs_time.core.year.call(null, start);
  var leap_years = cljs.core.count.call(null, cljs.core.remove.call(null, cljs.core.false_QMARK_, cljs.core.map.call(null, cljs_time.internal.core.leap_year_QMARK_, cljs.core.range.call(null, start_year, start_year + years))));
  var start_month = cljs_time.core.month.call(null, start);
  var days_in_months = cljs_time.core.total_days_in_whole_months.call(null, interval);
  var months = cljs.core.count.call(null, days_in_months);
  var days_to_remove = 365 * years + leap_years + cljs.core.reduce.call(null, cljs.core._PLUS_, days_in_months);
  var days = cljs_time.core.in_days.call(null, interval) - days_to_remove;
  var hours_to_remove = 24 * (days + days_to_remove);
  var hours = cljs_time.core.in_hours.call(null, interval) - hours_to_remove;
  var minutes_to_remove = 60 * (hours + hours_to_remove);
  var minutes = cljs_time.core.in_minutes.call(null, interval) - minutes_to_remove;
  var seconds_to_remove = 60 * (minutes + minutes_to_remove);
  var seconds = cljs_time.core.in_seconds.call(null, interval) - seconds_to_remove;
  return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), cljs_time.core.in_millis.call(null, interval) - 1E3 * (seconds + seconds_to_remove));
});
cljs_time.core.today_at = function() {
  var today_at = null;
  var today_at__2 = function(hours, minutes) {
    return today_at.call(null, hours, minutes, 0);
  };
  var today_at__3 = function(hours, minutes, seconds) {
    return today_at.call(null, hours, minutes, seconds, 0);
  };
  var today_at__4 = function(hours, minutes, seconds, millis) {
    var midnight = new goog.date.Date;
    var G__24148 = new goog.date.UtcDateTime(0);
    G__24148.setYear(midnight.getYear());
    G__24148.setMonth(midnight.getMonth());
    G__24148.setDate(midnight.getDate());
    G__24148.setHours(hours);
    G__24148.setMinutes(minutes);
    G__24148.setSeconds(seconds);
    G__24148.setMilliseconds(millis);
    return G__24148;
  };
  today_at = function(hours, minutes, seconds, millis) {
    switch(arguments.length) {
      case 2:
        return today_at__2.call(this, hours, minutes);
      case 3:
        return today_at__3.call(this, hours, minutes, seconds);
      case 4:
        return today_at__4.call(this, hours, minutes, seconds, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  today_at.cljs$core$IFn$_invoke$arity$2 = today_at__2;
  today_at.cljs$core$IFn$_invoke$arity$3 = today_at__3;
  today_at.cljs$core$IFn$_invoke$arity$4 = today_at__4;
  return today_at;
}();
cljs_time.core.do_at_STAR_ = function do_at_STAR_(base_date_time, body_fn) {
  var _STAR_sys_time_STAR_24150 = cljs_time.core._STAR_sys_time_STAR_;
  try {
    cljs_time.core._STAR_sys_time_STAR_ = base_date_time;
    return body_fn.call(null);
  } finally {
    cljs_time.core._STAR_sys_time_STAR_ = _STAR_sys_time_STAR_24150;
  }
};
goog.provide("cljs_time.format");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("cljs_time.internal.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.date");
goog.require("cljs_time.core");
goog.require("clojure.set");
goog.require("cljs_time.core");
goog.require("cljs_time.internal.core");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.date");
cljs_time.format.months = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], null);
cljs_time.format.days = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], null);
cljs_time.format.abbreviate = function abbreviate(n, s) {
  return cljs.core.subs.call(null, s, 0, n);
};
cljs_time.format.date_formatters = function() {
  var d = function(p1__24164_SHARP_) {
    return p1__24164_SHARP_.getDate();
  };
  var M = function(d) {
    return function(p1__24165_SHARP_) {
      return p1__24165_SHARP_.getMonth() + 1;
    };
  }(d);
  var y = function(d, M) {
    return function(p1__24166_SHARP_) {
      return p1__24166_SHARP_.getYear();
    };
  }(d, M);
  var h = function(d, M, y) {
    return function(p1__24167_SHARP_) {
      var hr = cljs.core.mod.call(null, p1__24167_SHARP_.getHours(), 12);
      if (hr === 0) {
        return 12;
      } else {
        return hr;
      }
    };
  }(d, M, y);
  var a = function(d, M, y, h) {
    return function(p1__24168_SHARP_) {
      if (p1__24168_SHARP_.getHours() < 12) {
        return "am";
      } else {
        return "pm";
      }
    };
  }(d, M, y, h);
  var A = function(d, M, y, h, a) {
    return function(p1__24169_SHARP_) {
      if (p1__24169_SHARP_.getHours() < 12) {
        return "AM";
      } else {
        return "PM";
      }
    };
  }(d, M, y, h, a);
  var H = function(d, M, y, h, a, A) {
    return function(p1__24170_SHARP_) {
      return p1__24170_SHARP_.getHours();
    };
  }(d, M, y, h, a, A);
  var m = function(d, M, y, h, a, A, H) {
    return function(p1__24171_SHARP_) {
      return p1__24171_SHARP_.getMinutes();
    };
  }(d, M, y, h, a, A, H);
  var s = function(d, M, y, h, a, A, H, m) {
    return function(p1__24172_SHARP_) {
      return p1__24172_SHARP_.getSeconds();
    };
  }(d, M, y, h, a, A, H, m);
  var S = function(d, M, y, h, a, A, H, m, s) {
    return function(p1__24173_SHARP_) {
      return p1__24173_SHARP_.getMilliseconds();
    };
  }(d, M, y, h, a, A, H, m, s);
  var Z = function(d, M, y, h, a, A, H, m, s, S) {
    return function(p1__24174_SHARP_) {
      return p1__24174_SHARP_.getTimezoneOffsetString();
    };
  }(d, M, y, h, a, A, H, m, s, S);
  var doy = function(d, M, y, h, a, A, H, m, s, S, Z) {
    return function(p1__24175_SHARP_) {
      return p1__24175_SHARP_.getDayOfYear();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z);
  var dow = function(d, M, y, h, a, A, H, m, s, S, Z, doy) {
    return function(p1__24176_SHARP_) {
      return p1__24176_SHARP_.getDay();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "ww", "MMM", "e", "ss", "DDD", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "dd", "a", "hh", "dth", "yyyy", "A", "EEEE", "h", "xxxx", "m", "yy", "MMMM"], [d, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24187_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, H.call(null, p1__24187_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, s, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24191_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, Math.ceil.call(null, doy.call(null, p1__24191_SHARP_) / 7));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24183_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.months.call(null, M.call(null, p1__24183_SHARP_) - 1));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), dow, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24189_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, s.call(null, p1__24189_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24190_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, S.call(null, p1__24190_SHARP_), 3);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24179_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__24179_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), M, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24188_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, m.call(null, p1__24188_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), S, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24182_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, M.call(null, p1__24182_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24180_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.days.call(null, dow.call(null, p1__24180_SHARP_)));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, H, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24177_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, d.call(null, p1__24177_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), a, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24186_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, h.call(null, p1__24186_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24178_SHARP_) {
      var d__$1 = d.call(null, p1__24178_SHARP_);
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(d__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
        var G__24192 = d__$1;
        switch(G__24192) {
          case 1:
            return "st";
            break;
          case 2:
            return "nd";
            break;
          case 3:
            return "rd";
            break;
          default:
            return "th";
        }
      }());
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, A, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24181_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__24181_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), h, y, m, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24185_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__24185_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__24184_SHARP_) {
      return cljs_time.format.months.call(null, M.call(null, p1__24184_SHARP_) - 1);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow)]);
}();
cljs_time.format.timezone_adjustment = function timezone_adjustment(d, timezone_string) {
  var vec__24197 = clojure.string.split.call(null, timezone_string, /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/);
  var _ = cljs.core.nth.call(null, vec__24197, 0, null);
  var sign = cljs.core.nth.call(null, vec__24197, 1, null);
  var hh = cljs.core.nth.call(null, vec__24197, 2, null);
  var mm = cljs.core.nth.call(null, vec__24197, 3, null);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = sign;
    if (cljs.core.truth_(and__3546__auto__)) {
      var and__3546__auto____$1 = hh;
      if (cljs.core.truth_(and__3546__auto____$1)) {
        return mm;
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }())) {
    var sign_24199__$1 = cljs.core._EQ_.call(null, sign, "-") ? cljs_time.core.plus : cljs.core._EQ_.call(null, sign, "+") ? cljs_time.core.minus : null;
    var vec__24198_24200 = cljs.core.map.call(null, function(sign_24199__$1, vec__24197, _, sign, hh, mm) {
      return function(p1__24194_SHARP_) {
        return parseInt(p1__24194_SHARP_, 10);
      };
    }(sign_24199__$1, vec__24197, _, sign, hh, mm), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hh, mm], null));
    var hh_24201__$1 = cljs.core.nth.call(null, vec__24198_24200, 0, null);
    var mm_24202__$1 = cljs.core.nth.call(null, vec__24198_24200, 1, null);
    var adjusted_24203 = sign_24199__$1.call(null, sign_24199__$1.call(null, d, cljs_time.core.hours.call(null, hh_24201__$1)), cljs_time.core.minutes.call(null, mm_24202__$1));
    d.setTime(adjusted_24203.getTime());
  } else {
  }
  return d;
};
cljs_time.format.date_parsers = function() {
  var parse_int = function(p1__24204_SHARP_) {
    return parseInt(p1__24204_SHARP_, 10);
  };
  var assoc_fn = function(parse_int) {
    return function(kw) {
      return function(parse_int) {
        return function(p1__24205_SHARP_, p2__24206_SHARP_) {
          return cljs.core.assoc.call(null, p1__24205_SHARP_, kw, parse_int.call(null, p2__24206_SHARP_));
        };
      }(parse_int);
    };
  }(parse_int);
  var y = assoc_fn.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var d = assoc_fn.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var M = function(parse_int, assoc_fn, y, d) {
    return function(p1__24207_SHARP_, p2__24208_SHARP_) {
      return cljs.core.assoc.call(null, p1__24207_SHARP_, new cljs.core.Keyword(null, "months", "months", -45571637), parse_int.call(null, p2__24208_SHARP_) - 1);
    };
  }(parse_int, assoc_fn, y, d);
  var h = function(parse_int, assoc_fn, y, d, M) {
    return function(p1__24209_SHARP_, p2__24210_SHARP_) {
      return cljs.core.assoc.call(null, p1__24209_SHARP_, new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.mod.call(null, parse_int.call(null, p2__24210_SHARP_), 12));
    };
  }(parse_int, assoc_fn, y, d, M);
  var a = function(parse_int, assoc_fn, y, d, M, h) {
    return function(p__24217, x) {
      var map__24218 = p__24217;
      var map__24218__$1 = cljs.core.seq_QMARK_.call(null, map__24218) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24218) : map__24218;
      var date = map__24218__$1;
      var hours = cljs.core.get.call(null, map__24218__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["p", null, "pm", null], null), null)).call(null, clojure.string.lower_case.call(null, x)))) {
        return cljs.core.assoc.call(null, date, new cljs.core.Keyword(null, "hours", "hours", 58380855), function() {
          var hours__$1 = 12 + hours;
          if (cljs.core._EQ_.call(null, hours__$1, 24)) {
            return 0;
          } else {
            return hours__$1;
          }
        }());
      } else {
        return date;
      }
    };
  }(parse_int, assoc_fn, y, d, M, h);
  var H = assoc_fn.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var m = assoc_fn.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var s = assoc_fn.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var S = assoc_fn.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var MMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
    return function(p1__24212_SHARP_, p2__24211_SHARP_) {
      var full = cljs.core.first.call(null, cljs.core.filter.call(null, function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
        return function(m__$1) {
          return cljs.core.re_seq.call(null, cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__24211_SHARP_)), m__$1);
        };
      }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S), cljs_time.format.months));
      return M.call(null, p1__24212_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, full) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S);
  var MMMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM) {
    return function(p1__24213_SHARP_, p2__24214_SHARP_) {
      return M.call(null, p1__24213_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, p2__24214_SHARP_) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM);
  var skip = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM) {
    return function() {
      var G__24219__delegate = function(x, args) {
        return x;
      };
      var G__24219 = function(x, var_args) {
        var args = null;
        if (arguments.length > 1) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__24219__delegate.call(this, x, args);
      };
      G__24219.cljs$lang$maxFixedArity = 1;
      G__24219.cljs$lang$applyTo = function(arglist__24220) {
        var x = cljs.core.first(arglist__24220);
        var args = cljs.core.rest(arglist__24220);
        return G__24219__delegate(x, args);
      };
      G__24219.cljs$core$IFn$_invoke$arity$variadic = G__24219__delegate;
      return G__24219;
    }();
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM);
  var tz = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip) {
    return function(p1__24215_SHARP_, p2__24216_SHARP_) {
      return cljs.core.assoc.call(null, p1__24215_SHARP_, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), p2__24216_SHARP_);
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "MMM", "ss", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "E", "dd", "a", "hh", "dth", "y", "yyyy", "A", "EEEE", "h", "m", "yy", "MMMM"], [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["((?:(?:\\+|-)\\d{2}:\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.months))) + ")", MMM], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", M], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:\\d{2})|(?:\\b\\d{1,2}\\b))", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, 
  cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:?\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, 
  "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", h], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})(?:st|nd|rd|th)", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.months)) + ")", MMMM], null)]);
}();
cljs_time.format.date_setters = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), function(p1__24221_SHARP_, p2__24222_SHARP_) {
  return p1__24221_SHARP_.setYear(p2__24222_SHARP_);
}, new cljs.core.Keyword(null, "months", "months", -45571637), function(p1__24223_SHARP_, p2__24224_SHARP_) {
  return p1__24223_SHARP_.setMonth(p2__24224_SHARP_);
}, new cljs.core.Keyword(null, "days", "days", -1394072564), function(p1__24225_SHARP_, p2__24226_SHARP_) {
  return p1__24225_SHARP_.setDate(p2__24226_SHARP_);
}, new cljs.core.Keyword(null, "hours", "hours", 58380855), function(p1__24227_SHARP_, p2__24228_SHARP_) {
  return p1__24227_SHARP_.setHours(p2__24228_SHARP_);
}, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), function(p1__24229_SHARP_, p2__24230_SHARP_) {
  return p1__24229_SHARP_.setMinutes(p2__24230_SHARP_);
}, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), function(p1__24231_SHARP_, p2__24232_SHARP_) {
  return p1__24231_SHARP_.setSeconds(p2__24232_SHARP_);
}, new cljs.core.Keyword(null, "millis", "millis", -1338288387), function(p1__24233_SHARP_, p2__24234_SHARP_) {
  return p1__24233_SHARP_.setMilliseconds(p2__24234_SHARP_);
}, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), cljs_time.format.timezone_adjustment], null);
cljs_time.format.parser_sort_order_pred = function parser_sort_order_pred(parser) {
  return cljs_time.internal.core.index_of.call(null, new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, ["yyyy", "yy", "y", "d", "dd", "dth", "M", "MM", "MMM", "MMMM", "dow", "h", "H", "m", "s", "S", "hh", "HH", "mm", "ss", "a", "SSS", "Z", "ZZ"], null), parser);
};
cljs_time.format.date_format_pattern = cljs.core.re_pattern.call(null, "(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, ")|(", cljs.core.reverse.call(null, cljs.core.sort_by.call(null, cljs.core.count, cljs.core.keys.call(null, cljs_time.format.date_formatters))))) + ")");
cljs_time.format.date_parse_pattern = function date_parse_pattern(formatter) {
  return cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, formatter, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__24235_SHARP_) {
    return cljs.core.first.call(null, cljs_time.format.date_parsers.call(null, p1__24235_SHARP_));
  }));
};
cljs_time.format.parser_fn = function parser_fn(fmts) {
  return function(s) {
    return cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs_time.format.parser_sort_order_pred, cljs.core.second), cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.nfirst.call(null, cljs.core.re_seq.call(null, cljs_time.format.date_parse_pattern.call(null, fmts), s)), cljs.core.map.call(null, cljs.core.first, cljs.core.re_seq.call(null, cljs_time.format.date_format_pattern, fmts)))));
  };
};
cljs_time.format.formatter_fn = function formatter_fn(fmts, formatters) {
  return function() {
    var G__24241__delegate = function(date, p__24239) {
      var vec__24240 = p__24239;
      var formatter_overrides = cljs.core.nth.call(null, vec__24240, 0, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, fmts, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(vec__24240, formatter_overrides) {
        return function(p1__24236_SHARP_) {
          return function() {
            var or__3558__auto__ = formatter_overrides;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return formatters;
            }
          }().call(null, p1__24236_SHARP_).call(null, date);
        };
      }(vec__24240, formatter_overrides)], null);
    };
    var G__24241 = function(date, var_args) {
      var p__24239 = null;
      if (arguments.length > 1) {
        p__24239 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__24241__delegate.call(this, date, p__24239);
    };
    G__24241.cljs$lang$maxFixedArity = 1;
    G__24241.cljs$lang$applyTo = function(arglist__24242) {
      var date = cljs.core.first(arglist__24242);
      var p__24239 = cljs.core.rest(arglist__24242);
      return G__24241__delegate(date, p__24239);
    };
    G__24241.cljs$core$IFn$_invoke$arity$variadic = G__24241__delegate;
    return G__24241;
  }();
};
cljs_time.format.formatter = function() {
  var formatter = null;
  var formatter__1 = function(fmts) {
    return formatter.call(null, fmts, cljs_time.core.utc);
  };
  var formatter__2 = function(fmts, dtz) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), cljs_time.format.parser_fn.call(null, fmts), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs_time.format.formatter_fn.call(null, fmts, cljs_time.format.date_formatters)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", "formatter", 
    "cljs-time.format/formatter", 1104417384)], null));
  };
  formatter = function(fmts, dtz) {
    switch(arguments.length) {
      case 1:
        return formatter__1.call(this, fmts);
      case 2:
        return formatter__2.call(this, fmts, dtz);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  formatter.cljs$core$IFn$_invoke$arity$1 = formatter__1;
  formatter.cljs$core$IFn$_invoke$arity$2 = formatter__2;
  return formatter;
}();
cljs_time.format.formatter_local = function formatter_local(fmts) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), cljs_time.format.parser_fn.call(null, fmts), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs_time.format.formatter_fn.call(null, fmts, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, "")))], null), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", "formatter", "cljs-time.format/formatter", 1104417384)], null));
};
cljs_time.format.not_implemented = function not_implemented(sym) {
  return function() {
    throw cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "not-implemented", "not-implemented", 1918806714), new cljs.core.Keyword(null, "message", "message", -406056002), cljs_time.internal.core.format.call(null, "%s not implemented yet", cljs.core.name.call(null, sym))], null));
  };
};
cljs_time.format.formatters = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), new cljs.core.Keyword(null, "hour-minute", "hour-minute", -1164421312), new cljs.core.Keyword(null, "t-time", "t-time", -42016318), new cljs.core.Keyword(null, "basic-ordinal-date", "basic-ordinal-date", 243220162), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "hour", "hour", -555989214), new cljs.core.Keyword(null, 
"time-no-ms", "time-no-ms", 870271683), new cljs.core.Keyword(null, "weekyear-week-day", "weekyear-week-day", -740233533), new cljs.core.Keyword(null, "week-date-time", "week-date-time", 540228836), new cljs.core.Keyword(null, "date-hour-minute-second-fraction", "date-hour-minute-second-fraction", 1937143076), new cljs.core.Keyword(null, "basic-date-time", "basic-date-time", 1525413604), new cljs.core.Keyword(null, "date-time", "date-time", 177938180), new cljs.core.Keyword(null, "basic-time-no-ms", 
"basic-time-no-ms", -1720654076), new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), new cljs.core.Keyword(null, "basic-week-date", "basic-week-date", 1775847845), new cljs.core.Keyword(null, "basic-t-time-no-ms", "basic-t-time-no-ms", -424650106), new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), new cljs.core.Keyword(null, "date-time-no-ms", "date-time-no-ms", 1655953671), new cljs.core.Keyword(null, "year-month-day", "year-month-day", -415594169), new cljs.core.Keyword(null, 
"date-opt-time", "date-opt-time", -1507102105), new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697), new cljs.core.Keyword(null, "date-hour-minute-second-ms", "date-hour-minute-second-ms", -425334775), new cljs.core.Keyword(null, "basic-ordinal-date-time", "basic-ordinal-date-time", 1054564521), new cljs.core.Keyword(null, "ordinal-date", "ordinal-date", -77899447), new cljs.core.Keyword(null, "hour-minute-second-fraction", "hour-minute-second-fraction", -1253038551), new cljs.core.Keyword(null, 
"date-hour-minute", "date-hour-minute", 1629918346), new cljs.core.Keyword(null, "time", "time", 1385887882), new cljs.core.Keyword(null, "basic-week-date-time", "basic-week-date-time", -502077622), new cljs.core.Keyword(null, "weekyear", "weekyear", -74064500), new cljs.core.Keyword(null, "basic-time", "basic-time", -923134899), new cljs.core.Keyword(null, "hour-minute-second", "hour-minute-second", -1906654770), new cljs.core.Keyword(null, "ordinal-date-time", "ordinal-date-time", -1386753458), 
new cljs.core.Keyword(null, "ordinal-date-time-no-ms", "ordinal-date-time-no-ms", -1539005490), new cljs.core.Keyword(null, "hour-minute-second-ms", "hour-minute-second-ms", 1209749775), new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), new cljs.core.Keyword(null, "year", "year", 335913393), new cljs.core.Keyword(null, "t-time-no-ms", "t-time-no-ms", 990689905), new cljs.core.Keyword(null, "basic-week-date-time-no-ms", 
"basic-week-date-time-no-ms", -2043113679), new cljs.core.Keyword(null, "basic-date", "basic-date", 1566551506), new cljs.core.Keyword(null, "weekyear-week", "weekyear-week", 795291571), new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), new cljs.core.Keyword(null, "basic-ordinal-date-time-no-ms", "basic-ordinal-date-time-no-ms", -395135436), new cljs.core.Keyword(null, "year-month", "year-month", 735283381), new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 
1178432599), new cljs.core.Keyword(null, "week-date", "week-date", -1176745129), new cljs.core.Keyword(null, "date-hour", "date-hour", -344234471), new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364), new cljs.core.Keyword(null, "week-date-time-no-ms", "week-date-time-no-ms", -1226853060), new cljs.core.Keyword(null, "basic-date-time-no-ms", "basic-date-time-no-ms", -899402179), 
new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), new cljs.core.Keyword(null, "basic-t-time", "basic-t-time", 191791391)], [cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateElementParser", "dateElementParser", 984800945, null)), cljs_time.format.formatter.call(null, "HH:mm"), cljs_time.format.formatter.call(null, "'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyyDDD"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.formatter.call(null, 
"HH"), cljs_time.format.formatter.call(null, "HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, 
"dateParser", "dateParser", -1248418930, null)), cljs_time.format.formatter.call(null, "xxxx'W'wwe"), cljs_time.format.formatter.call(null, "'T'HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localTimeParser", "localTimeParser", -1738135328, null)), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateOptionalTimeParser", 
"dateOptionalTimeParser", 1783230854, null)), cljs_time.format.formatter.call(null, "EEE, dd MMM yyyy HH:mm:ss Z"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyDDD'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-DDD"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, 
"xxxx'W'wwe'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "xxxx"), cljs_time.format.formatter.call(null, "HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "HH:mm:ss"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, new cljs.core.Symbol(null, "timeParser", "timeParser", 1585048034, null)), cljs_time.format.not_implemented.call(null, 
new cljs.core.Symbol(null, "dateTimeParser", "dateTimeParser", -1493718282, null)), cljs_time.format.formatter.call(null, "yyyy"), cljs_time.format.formatter.call(null, "'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx'W'wwe'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyyMMdd"), cljs_time.format.formatter.call(null, "xxxx-'W'ww"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateParser", "localDateParser", 477820077, null)), cljs_time.format.formatter.call(null, 
"yyyyDDD'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateOptionalTimeParser", "localDateOptionalTimeParser", 435955537, null)), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "timeElementParser", "timeElementParser", 302132553, null)), cljs_time.format.formatter.call(null, 
"yyyy-MM-dd'T'HH:mm:ss"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss"), cljs_time.format.formatter.call(null, "'T'HHmmss.SSSZ")]);
cljs_time.format.parsers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), null, new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), null, new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), null, new cljs.core.Keyword(null, "date-opt-time", "date-opt-time", -1507102105), null, new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), 
null, new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), null, new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), null, new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 1178432599), null, new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), null], null), null);
cljs_time.format.printers = clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs_time.format.formatters)), cljs_time.format.parsers);
cljs_time.format.part_splitter_regex = /(?:(?!(?:\+|-)\d{2}):(?!\d{2}$))|[^\w:]+|.[TW]|'[^']+'/;
cljs_time.format.date_map = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("date-map", cljs.core.type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.Date, function(d) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.DateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.UtcDateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0, new cljs.core.Keyword(null, 
  "time-zone", "time-zone", -1838760002), null], null);
});
cljs_time.format.parse_STAR_ = function parse_STAR_(constructor, p__24245, s) {
  var map__24251 = p__24245;
  var map__24251__$1 = cljs.core.seq_QMARK_.call(null, map__24251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24251) : map__24251;
  var fmt = map__24251__$1;
  var parser = cljs.core.get.call(null, map__24251__$1, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
  if (cljs.core.seq.call(null, s)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "s", "s", -948495851, null)))));
  }
  var min_parts = cljs.core.count.call(null, clojure.string.split.call(null, s, cljs_time.format.part_splitter_regex));
  var parse_seq = cljs.core.seq.call(null, cljs.core.map.call(null, function(min_parts, map__24251, map__24251__$1, fmt, parser) {
    return function(p__24252) {
      var vec__24253 = p__24252;
      var a = cljs.core.nth.call(null, vec__24253, 0, null);
      var b = cljs.core.nth.call(null, vec__24253, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.second.call(null, cljs_time.format.date_parsers.call(null, b))], null);
    };
  }(min_parts, map__24251, map__24251__$1, fmt, parser), parser.call(null, s)));
  if (cljs.core.count.call(null, parse_seq) >= min_parts) {
    var d = new constructor(0, 0, 0, 0, 0, 0, 0);
    var empty = cljs_time.format.date_map.call(null, d);
    var setters = cljs.core.select_keys.call(null, cljs_time.format.date_setters, cljs.core.keys.call(null, empty));
    cljs.core.merge_with.call(null, function(d, empty, setters, parse_seq, min_parts, map__24251, map__24251__$1, fmt, parser) {
      return function(p1__24243_SHARP_, p2__24244_SHARP_) {
        return p1__24243_SHARP_.call(null, d, p2__24244_SHARP_);
      };
    }(d, empty, setters, parse_seq, min_parts, map__24251, map__24251__$1, fmt, parser), setters, cljs_time.internal.core.valid_date_QMARK_.call(null, cljs.core.reduce.call(null, function(d, empty, setters, parse_seq, min_parts, map__24251, map__24251__$1, fmt, parser) {
      return function(date, p__24254) {
        var vec__24255 = p__24254;
        var part = cljs.core.nth.call(null, vec__24255, 0, null);
        var do_parse = cljs.core.nth.call(null, vec__24255, 1, null);
        return do_parse.call(null, date, part);
      };
    }(d, empty, setters, parse_seq, min_parts, map__24251, map__24251__$1, fmt, parser), empty, parse_seq)));
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "The parser could not match the input string.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "parser-no-match", "parser-no-match", 1748518307)], null));
  }
};
cljs_time.format.parse = function() {
  var parse = null;
  var parse__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4283__auto__ = function iter__24264(s__24265) {
        return new cljs.core.LazySeq(null, function() {
          var s__24265__$1 = s__24265;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__24265__$1);
            if (temp__4126__auto__) {
              var s__24265__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__24265__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__24265__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__24267 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__24266 = 0;
                  while (true) {
                    if (i__24266 < size__4282__auto__) {
                      var f = cljs.core._nth.call(null, c__4281__auto__, i__24266);
                      var d = function() {
                        try {
                          return parse.call(null, f, s);
                        } catch (e24270) {
                          if (e24270 instanceof Error) {
                            var _ = e24270;
                            return null;
                          } else {
                            throw e24270;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__24267, d);
                        var G__24272 = i__24266 + 1;
                        i__24266 = G__24272;
                        continue;
                      } else {
                        var G__24273 = i__24266 + 1;
                        i__24266 = G__24273;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24267), iter__24264.call(null, cljs.core.chunk_rest.call(null, s__24265__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24267), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__24265__$2);
                var d = function() {
                  try {
                    return parse.call(null, f, s);
                  } catch (e24271) {
                    if (e24271 instanceof Error) {
                      var _ = e24271;
                      return null;
                    } else {
                      throw e24271;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__24264.call(null, cljs.core.rest.call(null, s__24265__$2)));
                } else {
                  var G__24274 = cljs.core.rest.call(null, s__24265__$2);
                  s__24265__$1 = G__24274;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.UtcDateTime, fmt, s);
  };
  parse = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse__1.call(this, fmt);
      case 2:
        return parse__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse.cljs$core$IFn$_invoke$arity$1 = parse__1;
  parse.cljs$core$IFn$_invoke$arity$2 = parse__2;
  return parse;
}();
cljs_time.format.parse_local = function() {
  var parse_local = null;
  var parse_local__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4283__auto__ = function iter__24283(s__24284) {
        return new cljs.core.LazySeq(null, function() {
          var s__24284__$1 = s__24284;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__24284__$1);
            if (temp__4126__auto__) {
              var s__24284__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__24284__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__24284__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__24286 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__24285 = 0;
                  while (true) {
                    if (i__24285 < size__4282__auto__) {
                      var f = cljs.core._nth.call(null, c__4281__auto__, i__24285);
                      var d = function() {
                        try {
                          return parse_local.call(null, f, s);
                        } catch (e24289) {
                          if (e24289 instanceof Error) {
                            var _ = e24289;
                            return null;
                          } else {
                            throw e24289;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__24286, d);
                        var G__24291 = i__24285 + 1;
                        i__24285 = G__24291;
                        continue;
                      } else {
                        var G__24292 = i__24285 + 1;
                        i__24285 = G__24292;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24286), iter__24283.call(null, cljs.core.chunk_rest.call(null, s__24284__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24286), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__24284__$2);
                var d = function() {
                  try {
                    return parse_local.call(null, f, s);
                  } catch (e24290) {
                    if (e24290 instanceof Error) {
                      var _ = e24290;
                      return null;
                    } else {
                      throw e24290;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__24283.call(null, cljs.core.rest.call(null, s__24284__$2)));
                } else {
                  var G__24293 = cljs.core.rest.call(null, s__24284__$2);
                  s__24284__$1 = G__24293;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse_local__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.DateTime, fmt, s);
  };
  parse_local = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse_local__1.call(this, fmt);
      case 2:
        return parse_local__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_local.cljs$core$IFn$_invoke$arity$1 = parse_local__1;
  parse_local.cljs$core$IFn$_invoke$arity$2 = parse_local__2;
  return parse_local;
}();
cljs_time.format.parse_local_date = function() {
  var parse_local_date = null;
  var parse_local_date__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4283__auto__ = function iter__24302(s__24303) {
        return new cljs.core.LazySeq(null, function() {
          var s__24303__$1 = s__24303;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__24303__$1);
            if (temp__4126__auto__) {
              var s__24303__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__24303__$2)) {
                var c__4281__auto__ = cljs.core.chunk_first.call(null, s__24303__$2);
                var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                var b__24305 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                if (function() {
                  var i__24304 = 0;
                  while (true) {
                    if (i__24304 < size__4282__auto__) {
                      var f = cljs.core._nth.call(null, c__4281__auto__, i__24304);
                      var d = function() {
                        try {
                          return parse_local_date.call(null, f, s);
                        } catch (e24308) {
                          if (e24308 instanceof Error) {
                            var _ = e24308;
                            return null;
                          } else {
                            throw e24308;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__24305, d);
                        var G__24310 = i__24304 + 1;
                        i__24304 = G__24310;
                        continue;
                      } else {
                        var G__24311 = i__24304 + 1;
                        i__24304 = G__24311;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24305), iter__24302.call(null, cljs.core.chunk_rest.call(null, s__24303__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24305), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__24303__$2);
                var d = function() {
                  try {
                    return parse_local_date.call(null, f, s);
                  } catch (e24309) {
                    if (e24309 instanceof Error) {
                      var _ = e24309;
                      return null;
                    } else {
                      throw e24309;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__24302.call(null, cljs.core.rest.call(null, s__24303__$2)));
                } else {
                  var G__24312 = cljs.core.rest.call(null, s__24303__$2);
                  s__24303__$1 = G__24312;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4283__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse_local_date__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.Date, fmt, s);
  };
  parse_local_date = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse_local_date__1.call(this, fmt);
      case 2:
        return parse_local_date__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_local_date.cljs$core$IFn$_invoke$arity$1 = parse_local_date__1;
  parse_local_date.cljs$core$IFn$_invoke$arity$2 = parse_local_date__2;
  return parse_local_date;
}();
cljs_time.format.unparse = function unparse(p__24313, dt) {
  var map__24315 = p__24313;
  var map__24315__$1 = cljs.core.seq_QMARK_.call(null, map__24315) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24315) : map__24315;
  var formatter = cljs.core.get.call(null, map__24315__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt));
};
cljs_time.format.unparse_local = function unparse_local(p__24316, dt) {
  var map__24318 = p__24316;
  var map__24318__$1 = cljs.core.seq_QMARK_.call(null, map__24318) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24318) : map__24318;
  var fmt = map__24318__$1;
  var formatter = cljs.core.get.call(null, map__24318__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.unparse_local_date = function unparse_local_date(p__24319, dt) {
  var map__24321 = p__24319;
  var map__24321__$1 = cljs.core.seq_QMARK_.call(null, map__24321) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24321) : map__24321;
  var fmt = map__24321__$1;
  var formatter = cljs.core.get.call(null, map__24321__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))));
  }
  if (dt instanceof goog.date.Date) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.Date", "goog.date.Date", -1613361125, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.show_formatters = function() {
  var show_formatters = null;
  var show_formatters__0 = function() {
    return show_formatters.call(null, cljs_time.core.now.call(null));
  };
  var show_formatters__1 = function(dt) {
    var seq__24326 = cljs.core.seq.call(null, cljs.core.sort.call(null, cljs_time.format.printers));
    var chunk__24327 = null;
    var count__24328 = 0;
    var i__24329 = 0;
    while (true) {
      if (i__24329 < count__24328) {
        var p = cljs.core._nth.call(null, chunk__24327, i__24329);
        var fmt_24330 = cljs_time.format.formatters.call(null, p);
        cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_24330, dt)));
        var G__24331 = seq__24326;
        var G__24332 = chunk__24327;
        var G__24333 = count__24328;
        var G__24334 = i__24329 + 1;
        seq__24326 = G__24331;
        chunk__24327 = G__24332;
        count__24328 = G__24333;
        i__24329 = G__24334;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__24326);
        if (temp__4126__auto__) {
          var seq__24326__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24326__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__24326__$1);
            var G__24335 = cljs.core.chunk_rest.call(null, seq__24326__$1);
            var G__24336 = c__4314__auto__;
            var G__24337 = cljs.core.count.call(null, c__4314__auto__);
            var G__24338 = 0;
            seq__24326 = G__24335;
            chunk__24327 = G__24336;
            count__24328 = G__24337;
            i__24329 = G__24338;
            continue;
          } else {
            var p = cljs.core.first.call(null, seq__24326__$1);
            var fmt_24339 = cljs_time.format.formatters.call(null, p);
            cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_24339, dt)));
            var G__24340 = cljs.core.next.call(null, seq__24326__$1);
            var G__24341 = null;
            var G__24342 = 0;
            var G__24343 = 0;
            seq__24326 = G__24340;
            chunk__24327 = G__24341;
            count__24328 = G__24342;
            i__24329 = G__24343;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  show_formatters = function(dt) {
    switch(arguments.length) {
      case 0:
        return show_formatters__0.call(this);
      case 1:
        return show_formatters__1.call(this, dt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  show_formatters.cljs$core$IFn$_invoke$arity$0 = show_formatters__0;
  show_formatters.cljs$core$IFn$_invoke$arity$1 = show_formatters__1;
  return show_formatters;
}();
cljs_time.format.Mappable = function() {
  var obj24345 = {};
  return obj24345;
}();
cljs_time.format.instant__GT_map = function instant__GT_map(instant) {
  if (function() {
    var and__3546__auto__ = instant;
    if (and__3546__auto__) {
      return instant.cljs_time$format$Mappable$instant__GT_map$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return instant.cljs_time$format$Mappable$instant__GT_map$arity$1(instant);
  } else {
    var x__4185__auto__ = instant == null ? null : instant;
    return function() {
      var or__3558__auto__ = cljs_time.format.instant__GT_map[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.format.instant__GT_map["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mappable.instant-\x3emap", instant);
        }
      }
    }().call(null, instant);
  }
};
cljs_time.format.to_map = function to_map(years, months, days, hours, minutes, seconds, millis) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), millis], null);
};
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$ = true;
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(dt) {
  var dt__$1 = this;
  return cljs_time.format.to_map.call(null, dt__$1.getYear(), dt__$1.getMonth() + 1, dt__$1.getDate(), dt__$1.getHours(), dt__$1.getMinutes(), dt__$1.getSeconds(), dt__$1.getMilliseconds());
};
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__24346 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__24346) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__24348 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__24348) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
goog.provide("cljs_time.coerce");
goog.require("cljs.core");
goog.require("cljs_time.core");
goog.require("goog.date");
goog.require("goog.date");
goog.require("cljs_time.format");
goog.require("cljs_time.format");
goog.require("cljs_time.core");
cljs_time.coerce.ICoerce = function() {
  var obj24064 = {};
  return obj24064;
}();
cljs_time.coerce.to_date_time = function to_date_time(obj) {
  if (function() {
    var and__3546__auto__ = obj;
    if (and__3546__auto__) {
      return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1(obj);
  } else {
    var x__4185__auto__ = obj == null ? null : obj;
    return function() {
      var or__3558__auto__ = cljs_time.coerce.to_date_time[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs_time.coerce.to_date_time["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICoerce.to-date-time", obj);
        }
      }
    }().call(null, obj);
  }
};
cljs_time.coerce.from_long = function from_long(millis) {
  var G__24066 = new goog.date.UtcDateTime;
  G__24066.setTime(millis);
  return G__24066;
};
cljs_time.coerce.from_string = function from_string(s) {
  return cljs.core.first.call(null, function() {
    var iter__4283__auto__ = function iter__24075(s__24076) {
      return new cljs.core.LazySeq(null, function() {
        var s__24076__$1 = s__24076;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__24076__$1);
          if (temp__4126__auto__) {
            var s__24076__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24076__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__24076__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__24078 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__24077 = 0;
                while (true) {
                  if (i__24077 < size__4282__auto__) {
                    var f = cljs.core._nth.call(null, c__4281__auto__, i__24077);
                    var d = function() {
                      try {
                        return cljs_time.format.parse.call(null, f, s);
                      } catch (e24081) {
                        if (e24081 instanceof Error) {
                          var _ = e24081;
                          return null;
                        } else {
                          throw e24081;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__24078, d);
                      var G__24083 = i__24077 + 1;
                      i__24077 = G__24083;
                      continue;
                    } else {
                      var G__24084 = i__24077 + 1;
                      i__24077 = G__24084;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24078), iter__24075.call(null, cljs.core.chunk_rest.call(null, s__24076__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24078), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__24076__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse.call(null, f, s);
                } catch (e24082) {
                  if (e24082 instanceof Error) {
                    var _ = e24082;
                    return null;
                  } else {
                    throw e24082;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, iter__24075.call(null, cljs.core.rest.call(null, s__24076__$2)));
              } else {
                var G__24085 = cljs.core.rest.call(null, s__24076__$2);
                s__24076__$1 = G__24085;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.coerce.from_date = function from_date(date) {
  return cljs_time.coerce.from_long.call(null, date.getTime());
};
cljs_time.coerce.to_long = function to_long(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return dt.getTime();
  } else {
    return null;
  }
};
cljs_time.coerce.to_epoch = function to_epoch(obj) {
  var millis = cljs_time.coerce.to_long.call(null, obj);
  var and__3546__auto__ = millis;
  if (cljs.core.truth_(and__3546__auto__)) {
    return millis / 1E3;
  } else {
    return and__3546__auto__;
  }
};
cljs_time.coerce.to_date = function to_date(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return new Date(dt.getTime());
  } else {
    return null;
  }
};
cljs_time.coerce.to_string = function to_string(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return cljs_time.format.unparse.call(null, (new cljs.core.Keyword(null, "date-time", "date-time", 177938180)).cljs$core$IFn$_invoke$arity$1(cljs_time.format.formatters), dt);
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date = function to_local_date(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    var G__24087 = new goog.date.Date;
    G__24087.setYear(dt.getYear());
    G__24087.setMonth(dt.getMonth());
    G__24087.setDate(dt.getDate());
    return G__24087;
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date_time = function to_local_date_time(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    var G__24089 = new goog.date.DateTime;
    G__24089.setYear(dt.getYear());
    G__24089.setMonth(dt.getMonth());
    G__24089.setDate(dt.getDate());
    G__24089.setHours(dt.getHours());
    G__24089.setMinutes(dt.getMinutes());
    G__24089.setSeconds(dt.getSeconds());
    G__24089.setMilliseconds(dt.getMilliseconds());
    return G__24089;
  } else {
    return null;
  }
};
cljs_time.coerce.ICoerce["string"] = true;
cljs_time.coerce.to_date_time["string"] = function(string) {
  return cljs_time.coerce.from_string.call(null, string);
};
cljs_time.coerce.ICoerce["number"] = true;
cljs_time.coerce.to_date_time["number"] = function(long$) {
  return cljs_time.coerce.from_long.call(null, long$);
};
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date_time) {
  var date_time__$1 = this;
  return date_time__$1;
};
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date_time) {
  var local_date_time__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date_time__$1), cljs_time.core.month.call(null, local_date_time__$1), cljs_time.core.day.call(null, local_date_time__$1), cljs_time.core.hour.call(null, local_date_time__$1), cljs_time.core.minute.call(null, local_date_time__$1), cljs_time.core.second.call(null, local_date_time__$1), cljs_time.core.milli.call(null, local_date_time__$1));
};
goog.date.Date.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date) {
  var local_date__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date__$1), cljs_time.core.month.call(null, local_date__$1), cljs_time.core.day.call(null, local_date__$1));
};
Date.prototype.cljs_time$coerce$ICoerce$ = true;
Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date) {
  var date__$1 = this;
  return cljs_time.coerce.from_date.call(null, date__$1);
};
cljs_time.coerce.ICoerce["null"] = true;
cljs_time.coerce.to_date_time["null"] = function(_) {
  return null;
};
goog.provide("clustermap.formats.time");
goog.require("cljs.core");
goog.require("cljs_time.coerce");
goog.require("cljs_time.coerce");
goog.require("cljs_time.format");
goog.require("cljs_time.format");
clustermap.formats.time.get_year = function get_year(t) {
  var G__17934 = t;
  var G__17934__$1 = G__17934 == null ? null : new Date(G__17934);
  var G__17934__$2 = G__17934__$1 == null ? null : G__17934__$1.getYear();
  var G__17934__$3 = G__17934__$2 == null ? null : G__17934__$2 + 1900;
  return G__17934__$3;
};
clustermap.formats.time.date_formatter = cljs_time.format.formatters.call(null, new cljs.core.Keyword(null, "date", "date", -1463434462));
clustermap.formats.time.format_date = function format_date(t) {
  var G__17936 = t;
  var G__17936__$1 = G__17936 == null ? null : cljs_time.coerce.from_string.call(null, G__17936);
  var G__17936__$2 = G__17936__$1 == null ? null : cljs_time.format.unparse.call(null, clustermap.formats.time.date_formatter, G__17936__$1);
  return G__17936__$2;
};
goog.provide("clustermap.components.full_report.company_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_list.render_many_links = function render_many_links(link_fn, owner_path, type, objs) {
  var first_obj = cljs.core.first.call(null, objs);
  var next_objs = cljs.core.next.call(null, objs);
  if (next_objs) {
    var attrs16681 = link_fn.call(null, type, first_obj);
    return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs16681) ? sablono.interpreter.attributes.call(null, attrs16681) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16681) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs16681), React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null)));
  } else {
    return link_fn.call(null, type, first_obj);
  }
};
clustermap.components.full_report.company_list.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        return null;
      }
    }
  }
};
clustermap.components.full_report.company_list.portfolio_company = function portfolio_company(company, owner, p__16690) {
  var map__16703 = p__16690;
  var map__16703__$1 = cljs.core.seq_QMARK_.call(null, map__16703) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16703) : map__16703;
  var opts = map__16703__$1;
  var path_fn = cljs.core.get.call(null, map__16703__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var link_fn = cljs.core.get.call(null, map__16703__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), company);
  if (typeof clustermap.components.full_report.company_list.t16704 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t16704 = function(company_path, link_fn, path_fn, opts, map__16703, p__16690, owner, company, portfolio_company, meta16705) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__16703 = map__16703;
      this.p__16690 = p__16690;
      this.owner = owner;
      this.company = company;
      this.portfolio_company = portfolio_company;
      this.meta16705 = meta16705;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t16704.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t16704.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t16704";
    clustermap.components.full_report.company_list.t16704.cljs$lang$ctorPrWriter = function(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-list/t16704");
      };
    }(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t16704.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t16704.prototype.om$core$IRender$render$arity$1 = function(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs16707 = self__.link_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), self__.company);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16707) ? sablono.interpreter.attributes.call(null, attrs16707) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16707) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16707)], null)));
        }(), function() {
          var attrs16708 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), (new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16708) ? sablono.interpreter.attributes.call(null, attrs16708) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16708) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16708)], null)));
        }(), function() {
          var attrs16709 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), function() {
            var G__16714 = self__.company;
            var G__16714__$1 = G__16714 == null ? null : (new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)).cljs$core$IFn$_invoke$arity$1(G__16714);
            var G__16714__$2 = G__16714__$1 == null ? null : cljs.core.filter.call(null, function(G__16714, G__16714__$1, this__9504__auto____$1, company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
              return function(bl) {
                return cljs.core._EQ_.call(null, "uk_constituencies", (new cljs.core.Keyword(null, "collection_id", "collection_id", -1037933240)).cljs$core$IFn$_invoke$arity$1(bl));
              };
            }(G__16714, G__16714__$1, this__9504__auto____$1, company_path, map__16703, map__16703__$1, opts, path_fn, link_fn), G__16714__$1);
            return G__16714__$2;
          }());
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16709) ? sablono.interpreter.attributes.call(null, attrs16709) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16709) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16709)], null)));
        }(), function() {
          var attrs16710 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16710) ? sablono.interpreter.attributes.call(null, attrs16710) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16710) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16710), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }(), function() {
          var attrs16711 = clustermap.components.full_report.company_list.pos_neg.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16711) ? sablono.interpreter.attributes.call(null, attrs16711) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16711) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16711)], null)));
        }(), function() {
          var attrs16712 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16712) ? sablono.interpreter.attributes.call(null, attrs16712) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16712) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16712)], null)));
        }(), function() {
          var attrs16713 = clustermap.formats.number.fnum.call(null, (new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16713) ? sablono.interpreter.attributes.call(null, attrs16713) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16713) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16713), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }());
      };
    }(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t16704.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
      return function(_16706) {
        var self__ = this;
        var _16706__$1 = this;
        return self__.meta16705;
      };
    }(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t16704.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
      return function(_16706, meta16705__$1) {
        var self__ = this;
        var _16706__$1 = this;
        return new clustermap.components.full_report.company_list.t16704(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__16703, self__.p__16690, self__.owner, self__.company, self__.portfolio_company, meta16705__$1);
      };
    }(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.__GT_t16704 = function(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn) {
      return function __GT_t16704(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__16703__$2, p__16690__$1, owner__$1, company__$1, portfolio_company__$1, meta16705) {
        return new clustermap.components.full_report.company_list.t16704(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__16703__$2, p__16690__$1, owner__$1, company__$1, portfolio_company__$1, meta16705);
      };
    }(company_path, map__16703, map__16703__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_list.t16704(company_path, link_fn, path_fn, opts, map__16703__$1, p__16690, owner, company, portfolio_company, null);
};
clustermap.components.full_report.company_list.company_list = function company_list(companies, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.full_report.company_list.t16735 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t16735 = function(comm, opts, owner, companies, company_list, meta16736) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.companies = companies;
      this.company_list = company_list;
      this.meta16736 = meta16736;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t16735.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t16735.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t16735";
    clustermap.components.full_report.company_list.t16735.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-list/t16735");
      };
    }(comm);
    clustermap.components.full_report.company_list.t16735.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t16735.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs16738 = clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs16738) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs16738)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs16738) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs16739 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1843675177));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16739) ? sablono.interpreter.attributes.call(null, attrs16739) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16739) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16739)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs16744 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16744) ? sablono.interpreter.attributes.call(null, attrs16744) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16744) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16744)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)))), function() {
          var attrs16745 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16745) ? sablono.interpreter.attributes.call(null, attrs16745) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16745) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16745)], null)));
        }())), function() {
          var attrs16746 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "company_no", "company_no", 1886326649), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs16746) ? sablono.interpreter.attributes.call(null, attrs16746) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16746) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16746)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16738), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, 
        React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs16747 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1843675177));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16747) ? sablono.interpreter.attributes.call(null, attrs16747) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16747) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16747)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs16752 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16752) ? sablono.interpreter.attributes.call(null, attrs16752) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16752) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16752)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)))), function() {
          var attrs16753 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16753) ? sablono.interpreter.attributes.call(null, attrs16753) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16753) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16753)], null)));
        }())), function() {
          var attrs16754 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "company_no", "company_no", 1886326649), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs16754) ? sablono.interpreter.attributes.call(null, attrs16754) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16754) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16754)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_list.t16735.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_16737) {
        var self__ = this;
        var _16737__$1 = this;
        return self__.meta16736;
      };
    }(comm);
    clustermap.components.full_report.company_list.t16735.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_16737, meta16736__$1) {
        var self__ = this;
        var _16737__$1 = this;
        return new clustermap.components.full_report.company_list.t16735(self__.comm, self__.opts, self__.owner, self__.companies, self__.company_list, meta16736__$1);
      };
    }(comm);
    clustermap.components.full_report.company_list.__GT_t16735 = function(comm) {
      return function __GT_t16735(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta16736) {
        return new clustermap.components.full_report.company_list.t16735(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta16736);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_list.t16735(comm, opts, owner, companies, company_list, null);
};
goog.provide("clustermap.components.full_report.company_site_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_site_list.investment = function investment(investment__$1, owner, p__16755) {
  var map__16764 = p__16755;
  var map__16764__$1 = cljs.core.seq_QMARK_.call(null, map__16764) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16764) : map__16764;
  var opts = map__16764__$1;
  var path_fn = cljs.core.get.call(null, map__16764__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var link_fn = cljs.core.get.call(null, map__16764__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), investment__$1);
  if (typeof clustermap.components.full_report.company_site_list.t16765 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t16765 = function(company_path, link_fn, path_fn, opts, map__16764, p__16755, owner, investment, meta16766) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__16764 = map__16764;
      this.p__16755 = p__16755;
      this.owner = owner;
      this.investment = investment;
      this.meta16766 = meta16766;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t16765.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t16765.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t16765";
    clustermap.components.full_report.company_site_list.t16765.cljs$lang$ctorPrWriter = function(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-site-list/t16765");
      };
    }(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t16765.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t16765.prototype.om$core$IRender$render$arity$1 = function(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs16768 = (new cljs.core.Keyword(null, "portfolio_company_name", "portfolio_company_name", -2036426038)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16768) ? sablono.interpreter.attributes.call(null, attrs16768) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16768) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16768)], null)));
        }(), function() {
          var attrs16769 = (new cljs.core.Keyword(null, "portfolio_company_site_postcode", "portfolio_company_site_postcode", -609404017)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16769) ? sablono.interpreter.attributes.call(null, attrs16769) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16769) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16769)], null)));
        }(), function() {
          var attrs16770 = self__.link_fn.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830), (new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "investor_company_name", 
          "investor_company_name", -1841760435)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16770) ? sablono.interpreter.attributes.call(null, attrs16770) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16770) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16770)], null)));
        }(), function() {
          var attrs16771 = self__.link_fn.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), (new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383), (new cljs.core.Keyword(null, "boundaryline_compact_name", 
          "boundaryline_compact_name", -523364293)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs16771) ? sablono.interpreter.attributes.call(null, attrs16771) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16771) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16771)], null)));
        }());
      };
    }(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t16765.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn) {
      return function(_16767) {
        var self__ = this;
        var _16767__$1 = this;
        return self__.meta16766;
      };
    }(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t16765.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn) {
      return function(_16767, meta16766__$1) {
        var self__ = this;
        var _16767__$1 = this;
        return new clustermap.components.full_report.company_site_list.t16765(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__16764, self__.p__16755, self__.owner, self__.investment, meta16766__$1);
      };
    }(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.__GT_t16765 = function(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn) {
      return function __GT_t16765(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__16764__$2, p__16755__$1, owner__$1, investment__$2, meta16766) {
        return new clustermap.components.full_report.company_site_list.t16765(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__16764__$2, p__16755__$1, owner__$1, investment__$2, meta16766);
      };
    }(company_path, map__16764, map__16764__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_site_list.t16765(company_path, link_fn, path_fn, opts, map__16764__$1, p__16755, owner, investment__$1, null);
};
clustermap.components.full_report.company_site_list.company_site_list = function company_site_list(investments, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.full_report.company_site_list.t16786 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t16786 = function(comm, opts, owner, investments, company_site_list, meta16787) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.investments = investments;
      this.company_site_list = company_site_list;
      this.meta16787 = meta16787;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t16786.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t16786.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t16786";
    clustermap.components.full_report.company_site_list.t16786.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-site-list/t16786");
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t16786.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t16786.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs16789 = clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs16789) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs16789)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs16789) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs16790 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 1068537883));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16790) ? sablono.interpreter.attributes.call(null, attrs16790) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16790) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16790)], null)));
        }(), function() {
          var attrs16791 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 1627386767));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16791) ? sablono.interpreter.attributes.call(null, attrs16791) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16791) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16791)], null)));
        }(), function() {
          var attrs16792 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 2080546953));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16792) ? sablono.interpreter.attributes.call(null, attrs16792) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16792) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16792)], null)));
        }(), function() {
          var attrs16793 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 35068819));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16793) ? sablono.interpreter.attributes.call(null, attrs16793) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16793) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16793)], null)));
        }())), function() {
          var attrs16794 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "investment_uid", "investment_uid", -1904890096), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs16794) ? sablono.interpreter.attributes.call(null, attrs16794) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16794) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16794)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16789), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, 
        React.DOM.tr(null, function() {
          var attrs16795 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 1068537883));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16795) ? sablono.interpreter.attributes.call(null, attrs16795) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16795) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16795)], null)));
        }(), function() {
          var attrs16796 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 1627386767));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16796) ? sablono.interpreter.attributes.call(null, attrs16796) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16796) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16796)], null)));
        }(), function() {
          var attrs16797 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 2080546953));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16797) ? sablono.interpreter.attributes.call(null, attrs16797) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16797) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16797)], null)));
        }(), function() {
          var attrs16798 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 35068819));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs16798) ? sablono.interpreter.attributes.call(null, attrs16798) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16798) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16798)], null)));
        }())), function() {
          var attrs16799 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "investment_uid", "investment_uid", -1904890096), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs16799) ? sablono.interpreter.attributes.call(null, attrs16799) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16799) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16799)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t16786.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_16788) {
        var self__ = this;
        var _16788__$1 = this;
        return self__.meta16787;
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t16786.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_16788, meta16787__$1) {
        var self__ = this;
        var _16788__$1 = this;
        return new clustermap.components.full_report.company_site_list.t16786(self__.comm, self__.opts, self__.owner, self__.investments, self__.company_site_list, meta16787__$1);
      };
    }(comm);
    clustermap.components.full_report.company_site_list.__GT_t16786 = function(comm) {
      return function __GT_t16786(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta16787) {
        return new clustermap.components.full_report.company_site_list.t16786(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta16787);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_site_list.t16786(comm, opts, owner, investments, company_site_list, null);
};
goog.provide("clustermap.components.full_report.charts");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.components.timeline_chart");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.timeline_chart");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.full_report.charts.charts = function charts(data, owner) {
  if (typeof clustermap.components.full_report.charts.t16676 !== "undefined") {
  } else {
    clustermap.components.full_report.charts.t16676 = function(owner, data, charts, meta16677) {
      this.owner = owner;
      this.data = data;
      this.charts = charts;
      this.meta16677 = meta16677;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.charts.t16676.cljs$lang$type = true;
    clustermap.components.full_report.charts.t16676.cljs$lang$ctorStr = "clustermap.components.full-report.charts/t16676";
    clustermap.components.full_report.charts.t16676.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.charts/t16676");
    };
    clustermap.components.full_report.charts.t16676.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.charts.t16676.prototype.om$core$IRender$render$arity$1 = function(this__9504__auto__) {
      var self__ = this;
      var this__9504__auto____$1 = this;
      var attrs16679 = function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 2127671062)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var timelines = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.grid", "div.grid", 736588158), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 202391088), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell.charts", "div.tbl-cell.charts", 1566068393), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 202391088), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-row", "div.tbl-row", 2102558769), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell", "div.tbl-cell", -1480839526), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Keyword(null, "div.box.box-first", "div.box.box-first", -2004544465), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "header", "header", 119441134), "Revenue"], null)], null)), om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, (new cljs.core.Keyword(null, 
          "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(timelines), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "turnover-timeline-chart", new cljs.core.Keyword(null, "y0-title", "y0-title", -809800001), "Revenue", new cljs.core.Keyword(null, "y1-title", "y1-title", 472065763), "# Filings"], null), new cljs.core.Keyword(null, 
          "react-key", "react-key", 1337881348), "turnover-timeline-chart"], null))], null)], null)], null)], null)], null)], null)], null);
        } else {
          return null;
        }
      }();
      return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs16679) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-charts"], null)], null), attrs16679)) : {"className":"full-report-charts"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
      cljs.core.map_QMARK_.call(null, attrs16679) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16679)], null)));
    };
    clustermap.components.full_report.charts.t16676.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16678) {
      var self__ = this;
      var _16678__$1 = this;
      return self__.meta16677;
    };
    clustermap.components.full_report.charts.t16676.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16678, meta16677__$1) {
      var self__ = this;
      var _16678__$1 = this;
      return new clustermap.components.full_report.charts.t16676(self__.owner, self__.data, self__.charts, meta16677__$1);
    };
    clustermap.components.full_report.charts.__GT_t16676 = function __GT_t16676(owner__$1, data__$1, charts__$1, meta16677) {
      return new clustermap.components.full_report.charts.t16676(owner__$1, data__$1, charts__$1, meta16677);
    };
  }
  return new clustermap.components.full_report.charts.t16676(owner, data, charts, null);
};
goog.provide("clustermap.components.full_report.overview");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.full_report.overview.describe_selection = function describe_selection(p__16800) {
  var map__16805 = p__16800;
  var map__16805__$1 = cljs.core.seq_QMARK_.call(null, map__16805) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16805) : map__16805;
  var value = cljs.core.get.call(null, map__16805__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var type = cljs.core.get.call(null, map__16805__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var pred__16806 = cljs.core._EQ_;
  var expr__16807 = type;
  if (cljs.core.truth_(pred__16806.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__16807))) {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
    1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
  } else {
    if (cljs.core.truth_(pred__16806.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__16807))) {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
    } else {
      if (cljs.core.truth_(pred__16806.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__16807))) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the selected Constituency"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over the Portfolio Companies with sites in the selected Constituency"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals over all Portfolio Companies"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all Portfolio Companies"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
      }
    }
  }
};
clustermap.components.full_report.overview.overview_data = function overview_data(p__16809) {
  var map__16835 = p__16809;
  var map__16835__$1 = cljs.core.seq_QMARK_.call(null, map__16835) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16835) : map__16835;
  var selection_investment_stats = cljs.core.get.call(null, map__16835__$1, new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", -1048685843));
  var selection = cljs.core.get.call(null, map__16835__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var all_investment_stats = cljs.core.get.call(null, map__16835__$1, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 1476039495));
  var sel_descrs = clustermap.components.full_report.overview.describe_selection.call(null, selection);
  var site_stats = function() {
    var or__3558__auto__ = selection_investment_stats;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return all_investment_stats;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "selection", "selection", 975998651)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", 
  -1778310555), new cljs.core.Keyword(null, "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 
  387778431)], [clustermap.formats.number.fnum.call(null, function() {
    var G__16836 = site_stats;
    var G__16836__$1 = G__16836 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__16836);
    var G__16836__$2 = G__16836__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16836__$1);
    return G__16836__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16837 = site_stats;
    var G__16837__$1 = G__16837 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 1998972271)).cljs$core$IFn$_invoke$arity$1(G__16837);
    return G__16837__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__16838 = site_stats;
    var G__16838__$1 = G__16838 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__16838);
    var G__16838__$2 = G__16838__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16838__$1);
    return G__16838__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16839 = site_stats;
    var G__16839__$1 = G__16839 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", -2068624331)).cljs$core$IFn$_invoke$arity$1(G__16839);
    return G__16839__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16840 = site_stats;
    var G__16840__$1 = G__16840 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16840);
    var G__16840__$2 = G__16840__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16840__$1);
    return G__16840__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16841 = site_stats;
    var G__16841__$1 = G__16841 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16841);
    var G__16841__$2 = G__16841__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16841__$1);
    return G__16841__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__16842 = site_stats;
    var G__16842__$1 = G__16842 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 2089870686)).cljs$core$IFn$_invoke$arity$1(G__16842);
    return G__16842__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__16843 = site_stats;
    var G__16843__$1 = G__16843 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16843);
    var G__16843__$2 = G__16843__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16843__$1);
    return G__16843__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16844 = site_stats;
    var G__16844__$1 = G__16844 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16844);
    var G__16844__$2 = G__16844__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16844__$1);
    return G__16844__$2;
  }()])), new cljs.core.Keyword(null, "averages", "averages", -1747836978), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "averages", "averages", -1747836978)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 387778431)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__16845 = site_stats;
    var G__16845__$1 = G__16845 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__16845);
    var G__16845__$2 = G__16845__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16845__$1);
    return G__16845__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__16846 = site_stats;
    var G__16846__$1 = G__16846 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__16846);
    var G__16846__$2 = G__16846__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16846__$1);
    return G__16846__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), "\u00a0", clustermap.formats.number.fnum.call(null, function() {
    var G__16847 = site_stats;
    var G__16847__$1 = G__16847 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16847);
    var G__16847__$2 = G__16847__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16847__$1);
    return G__16847__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16848 = site_stats;
    var G__16848__$1 = G__16848 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16848);
    var G__16848__$2 = G__16848__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16848__$1);
    return G__16848__$2;
  }(), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__16849 = site_stats;
    var G__16849__$1 = G__16849 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16849);
    var G__16849__$2 = G__16849__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16849__$1);
    return G__16849__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16850 = site_stats;
    var G__16850__$1 = G__16850 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16850);
    var G__16850__$2 = G__16850__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16850__$1);
    return G__16850__$2;
  }()])), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 387778431)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__16851 = all_investment_stats;
    var G__16851__$1 = G__16851 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__16851);
    var G__16851__$2 = G__16851__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16851__$1);
    return G__16851__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16852 = all_investment_stats;
    var G__16852__$1 = G__16852 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 1998972271)).cljs$core$IFn$_invoke$arity$1(G__16852);
    return G__16852__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__16853 = all_investment_stats;
    var G__16853__$1 = G__16853 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__16853);
    var G__16853__$2 = G__16853__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16853__$1);
    return G__16853__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16854 = all_investment_stats;
    var G__16854__$1 = G__16854 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", -2068624331)).cljs$core$IFn$_invoke$arity$1(G__16854);
    return G__16854__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__16855 = all_investment_stats;
    var G__16855__$1 = G__16855 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16855);
    var G__16855__$2 = G__16855__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16855__$1);
    return G__16855__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16856 = all_investment_stats;
    var G__16856__$1 = G__16856 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16856);
    var G__16856__$2 = G__16856__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__16856__$1);
    return G__16856__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__16857 = all_investment_stats;
    var G__16857__$1 = G__16857 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 2089870686)).cljs$core$IFn$_invoke$arity$1(G__16857);
    return G__16857__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__16858 = all_investment_stats;
    var G__16858__$1 = G__16858 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__16858);
    var G__16858__$2 = G__16858__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16858__$1);
    return G__16858__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__16859 = all_investment_stats;
    var G__16859__$1 = G__16859 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__16859);
    var G__16859__$2 = G__16859__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__16859__$1);
    return G__16859__$2;
  }()]))], null);
};
clustermap.components.full_report.overview.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        return null;
      }
    }
  }
};
clustermap.components.full_report.overview.overview = function overview(data) {
  var map__16883 = clustermap.components.full_report.overview.overview_data.call(null, data);
  var map__16883__$1 = cljs.core.seq_QMARK_.call(null, map__16883) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16883) : map__16883;
  var benchmark = cljs.core.get.call(null, map__16883__$1, new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056));
  var averages = cljs.core.get.call(null, map__16883__$1, new cljs.core.Keyword(null, "averages", "averages", -1747836978));
  var selection = cljs.core.get.call(null, map__16883__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  if (typeof clustermap.components.full_report.overview.t16884 !== "undefined") {
  } else {
    clustermap.components.full_report.overview.t16884 = function(selection, averages, benchmark, map__16883, data, overview, meta16885) {
      this.selection = selection;
      this.averages = averages;
      this.benchmark = benchmark;
      this.map__16883 = map__16883;
      this.data = data;
      this.overview = overview;
      this.meta16885 = meta16885;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.overview.t16884.cljs$lang$type = true;
    clustermap.components.full_report.overview.t16884.cljs$lang$ctorStr = "clustermap.components.full-report.overview/t16884";
    clustermap.components.full_report.overview.t16884.cljs$lang$ctorPrWriter = function(map__16883, map__16883__$1, benchmark, averages, selection) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.overview/t16884");
      };
    }(map__16883, map__16883__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t16884.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.overview.t16884.prototype.om$core$IRender$render$arity$1 = function(map__16883, map__16883__$1, benchmark, averages, selection) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"className":"full-report-overview"}, React.DOM.h4(null, "Overview of latest filings", React.DOM.small(null, "\u00a0(may span years : see table below for details)")), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table-stats"}, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "\u00a0"), React.DOM.th(null, "Investor-backed companies"), React.DOM.th(null, "Investors"), React.DOM.th(null, "Constituencies"), React.DOM.th(null, "Revenue"), 
        React.DOM.th({"colSpan":"2"}, "Rev. change"), React.DOM.th(null, "Employees"))), React.DOM.tbody(null, React.DOM.tr(null, React.DOM.th(null, React.DOM.i({"className":"icon-info", "data-toggle":"tooltip", "data-container":"body", "title":self__.selection.call(null, new cljs.core.Keyword(null, "description", "description", -1428560544))}), sablono.interpreter.interpret.call(null, self__.selection.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177)))), React.DOM.td(null, function() {
          var attrs16891 = (new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16891) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16891)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16891) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16891)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16892 = (new cljs.core.Keyword(null, "investor-companies", "investor-companies", 74375815)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16892) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16892)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16892) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16892)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16893 = (new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16893) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16893)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16893) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16893)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16894 = (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16894) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16894)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16894) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16894)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16895 = clustermap.components.full_report.overview.pos_neg.call(null, (new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897)).cljs$core$IFn$_invoke$arity$1(self__.selection));
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16895) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16895)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16895) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16895)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16896 = (new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16896) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16896)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16896) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16896)], null)));
        }()), React.DOM.td(null, function() {
          var attrs16897 = (new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs16897) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs16897)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs16897) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16897)], null)));
        }()))))));
      };
    }(map__16883, map__16883__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t16884.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__16883, map__16883__$1, benchmark, averages, selection) {
      return function(_16886) {
        var self__ = this;
        var _16886__$1 = this;
        return self__.meta16885;
      };
    }(map__16883, map__16883__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t16884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__16883, map__16883__$1, benchmark, averages, selection) {
      return function(_16886, meta16885__$1) {
        var self__ = this;
        var _16886__$1 = this;
        return new clustermap.components.full_report.overview.t16884(self__.selection, self__.averages, self__.benchmark, self__.map__16883, self__.data, self__.overview, meta16885__$1);
      };
    }(map__16883, map__16883__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.__GT_t16884 = function(map__16883, map__16883__$1, benchmark, averages, selection) {
      return function __GT_t16884(selection__$1, averages__$1, benchmark__$1, map__16883__$2, data__$1, overview__$1, meta16885) {
        return new clustermap.components.full_report.overview.t16884(selection__$1, averages__$1, benchmark__$1, map__16883__$2, data__$1, overview__$1, meta16885);
      };
    }(map__16883, map__16883__$1, benchmark, averages, selection);
  }
  return new clustermap.components.full_report.overview.t16884(selection, averages, benchmark, map__16883__$1, data, overview, null);
};
goog.provide("clustermap.components.full_report");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.company_list");
goog.require("clustermap.components.full_report.charts");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.charts");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.overview");
goog.require("clustermap.components.full_report.overview");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("clustermap.components.full_report.company_list");
clustermap.components.full_report.single_company_selection_QMARK_ = function single_company_selection_QMARK_(selector) {
  return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, selector)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), function() {
    var G__16901 = selector;
    var G__16901__$1 = G__16901 == null ? null : cljs.core.keys.call(null, G__16901);
    var G__16901__$2 = G__16901__$1 == null ? null : cljs.core.first.call(null, G__16901__$1);
    return G__16901__$2;
  }());
};
clustermap.components.full_report.full_report_component = function full_report_component(p__16902, owner) {
  var map__16909 = p__16902;
  var map__16909__$1 = cljs.core.seq_QMARK_.call(null, map__16909) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16909) : map__16909;
  var data = map__16909__$1;
  var all_portfolio_companies_summary = cljs.core.get.call(null, map__16909__$1, new cljs.core.Keyword(null, "all-portfolio-companies-summary", "all-portfolio-companies-summary", 1736783950));
  var selection = cljs.core.get.call(null, map__16909__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var selector = cljs.core.get.call(null, map__16909__$1, new cljs.core.Keyword(null, "selector", "selector", 762528866));
  var map__16910 = om.core.get_shared.call(null, owner);
  var map__16910__$1 = cljs.core.seq_QMARK_.call(null, map__16910) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16910) : map__16910;
  var link_fn = cljs.core.get.call(null, map__16910__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var path_fn = cljs.core.get.call(null, map__16910__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__16910__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var link_fn__$1 = cljs.core.partial.call(null, link_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  if (typeof clustermap.components.full_report.t16911 !== "undefined") {
  } else {
    clustermap.components.full_report.t16911 = function(selection, owner, path_fn, data, map__16909, selector, link_fn, full_report_component, comm, all_portfolio_companies_summary, p__16902, map__16910, meta16912) {
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.data = data;
      this.map__16909 = map__16909;
      this.selector = selector;
      this.link_fn = link_fn;
      this.full_report_component = full_report_component;
      this.comm = comm;
      this.all_portfolio_companies_summary = all_portfolio_companies_summary;
      this.p__16902 = p__16902;
      this.map__16910 = map__16910;
      this.meta16912 = meta16912;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.t16911.cljs$lang$type = true;
    clustermap.components.full_report.t16911.cljs$lang$ctorStr = "clustermap.components.full-report/t16911";
    clustermap.components.full_report.t16911.cljs$lang$ctorPrWriter = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report/t16911");
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t16911.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.full_report.t16911.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).data("bs.tooltip", false);
        return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).tooltip();
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t16911.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.t16911.prototype.om$core$IRender$render$arity$1 = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var attrs16914 = om.core.build.call(null, clustermap.components.full_report.overview.overview, self__.data, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "overview"], null));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs16914) ? sablono.interpreter.attributes.call(null, attrs16914) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs16914) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments-by-company"], null)) : null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs16914), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments-by-company"], null)) : null)], null)));
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t16911.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_16913) {
        var self__ = this;
        var _16913__$1 = this;
        return self__.meta16912;
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t16911.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_16913, meta16912__$1) {
        var self__ = this;
        var _16913__$1 = this;
        return new clustermap.components.full_report.t16911(self__.selection, self__.owner, self__.path_fn, self__.data, self__.map__16909, self__.selector, self__.link_fn, self__.full_report_component, self__.comm, self__.all_portfolio_companies_summary, self__.p__16902, self__.map__16910, meta16912__$1);
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.__GT_t16911 = function(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function __GT_t16911(selection__$1, owner__$1, path_fn__$2, data__$1, map__16909__$2, selector__$1, link_fn__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, p__16902__$1, map__16910__$2, meta16912) {
        return new clustermap.components.full_report.t16911(selection__$1, owner__$1, path_fn__$2, data__$1, map__16909__$2, selector__$1, link_fn__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, p__16902__$1, map__16910__$2, meta16912);
      };
    }(map__16910, map__16910__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__16909, map__16909__$1, data, all_portfolio_companies_summary, selection, selector);
  }
  return new clustermap.components.full_report.t16911(selection, owner, path_fn__$1, data, map__16909__$1, selector, link_fn__$1, full_report_component, comm, all_portfolio_companies_summary, p__16902, map__16910__$1, null);
};
clustermap.components.full_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.full_report.full_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id), new cljs.core.Keyword(null, "shared", "shared", -384145993), shared], null));
};
goog.provide("clustermap.om");
goog.require("cljs.core");
clustermap.om.burrow = function burrow(component_fn, korks) {
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return function(use_korks) {
    return function() {
      var G__18006__delegate = function(args) {
        return cljs.core.apply.call(null, component_fn, cljs.core.get_in.call(null, cljs.core.first.call(null, args), use_korks), cljs.core.rest.call(null, args));
      };
      var G__18006 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__18006__delegate.call(this, args);
      };
      G__18006.cljs$lang$maxFixedArity = 0;
      G__18006.cljs$lang$applyTo = function(arglist__18007) {
        var args = cljs.core.seq(arglist__18007);
        return G__18006__delegate(args);
      };
      G__18006.cljs$core$IFn$_invoke$arity$variadic = G__18006__delegate;
      return G__18006;
    }();
  }(use_korks);
};
goog.provide("clustermap.model");
goog.require("cljs.core");
clustermap.model.extract_id = function extract_id(type, obj) {
  var pred__17942 = cljs.core._EQ_;
  var expr__17943 = type;
  if (cljs.core.truth_(pred__17942.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__17943))) {
    return(new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)).cljs$core$IFn$_invoke$arity$1(obj);
  } else {
    if (cljs.core.truth_(pred__17942.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__17943))) {
      return(new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(obj);
    } else {
      if (cljs.core.truth_(pred__17942.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__17943))) {
        return(new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(obj);
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__17943));
      }
    }
  }
};
goog.provide("clustermap.components.select_chooser");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.select_chooser.select_chooser_component = function select_chooser_component(title, key, value_descriptions, p__17354, owner) {
  var map__17368 = p__17354;
  var map__17368__$1 = cljs.core.seq_QMARK_.call(null, map__17368) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17368) : map__17368;
  var cursor = map__17368__$1;
  if (typeof clustermap.components.select_chooser.t17369 !== "undefined") {
  } else {
    clustermap.components.select_chooser.t17369 = function(cursor, map__17368, owner, p__17354, value_descriptions, key, title, select_chooser_component, meta17370) {
      this.cursor = cursor;
      this.map__17368 = map__17368;
      this.owner = owner;
      this.p__17354 = p__17354;
      this.value_descriptions = value_descriptions;
      this.key = key;
      this.title = title;
      this.select_chooser_component = select_chooser_component;
      this.meta17370 = meta17370;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.select_chooser.t17369.cljs$lang$type = true;
    clustermap.components.select_chooser.t17369.cljs$lang$ctorStr = "clustermap.components.select-chooser/t17369";
    clustermap.components.select_chooser.t17369.cljs$lang$ctorPrWriter = function(map__17368, map__17368__$1, cursor) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.select-chooser/t17369");
      };
    }(map__17368, map__17368__$1, cursor);
    clustermap.components.select_chooser.t17369.prototype.om$core$IRender$ = true;
    clustermap.components.select_chooser.t17369.prototype.om$core$IRender$render$arity$1 = function(map__17368, map__17368__$1, cursor) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"className":"select-chooser"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, function() {
          var attrs17372 = self__.title;
          return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs17372) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tbl-cell"], null)], null), attrs17372)) : {"className":"tbl-cell"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs17372) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17372)], null)));
        }(), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(this__9504__auto____$1, map__17368, map__17368__$1, cursor) {
          return function(e) {
            var val = e.target.value;
            console.log(val);
            return om.core.update_BANG_.call(null, self__.cursor, self__.key, val);
          };
        }(this__9504__auto____$1, map__17368, map__17368__$1, cursor)}, cljs.core.into_array.call(null, function() {
          var iter__4283__auto__ = function(this__9504__auto____$1, map__17368, map__17368__$1, cursor) {
            return function iter__17373(s__17374) {
              return new cljs.core.LazySeq(null, function(this__9504__auto____$1, map__17368, map__17368__$1, cursor) {
                return function() {
                  var s__17374__$1 = s__17374;
                  while (true) {
                    var temp__4126__auto__ = cljs.core.seq.call(null, s__17374__$1);
                    if (temp__4126__auto__) {
                      var s__17374__$2 = temp__4126__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__17374__$2)) {
                        var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17374__$2);
                        var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                        var b__17376 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                        if (function() {
                          var i__17375 = 0;
                          while (true) {
                            if (i__17375 < size__4282__auto__) {
                              var vec__17379 = cljs.core._nth.call(null, c__4281__auto__, i__17375);
                              var value = cljs.core.nth.call(null, vec__17379, 0, null);
                              var description = cljs.core.nth.call(null, vec__17379, 1, null);
                              cljs.core.chunk_append.call(null, b__17376, sablono.interpreter.option.call(null, {"value":value}, sablono.interpreter.interpret.call(null, description)));
                              var G__17381 = i__17375 + 1;
                              i__17375 = G__17381;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17376), iter__17373.call(null, cljs.core.chunk_rest.call(null, s__17374__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17376), null);
                        }
                      } else {
                        var vec__17380 = cljs.core.first.call(null, s__17374__$2);
                        var value = cljs.core.nth.call(null, vec__17380, 0, null);
                        var description = cljs.core.nth.call(null, vec__17380, 1, null);
                        return cljs.core.cons.call(null, sablono.interpreter.option.call(null, {"value":value}, sablono.interpreter.interpret.call(null, description)), iter__17373.call(null, cljs.core.rest.call(null, s__17374__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(this__9504__auto____$1, map__17368, map__17368__$1, cursor), null, null);
            };
          }(this__9504__auto____$1, map__17368, map__17368__$1, cursor);
          return iter__4283__auto__.call(null, self__.value_descriptions);
        }()))))));
      };
    }(map__17368, map__17368__$1, cursor);
    clustermap.components.select_chooser.t17369.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17368, map__17368__$1, cursor) {
      return function(_17371) {
        var self__ = this;
        var _17371__$1 = this;
        return self__.meta17370;
      };
    }(map__17368, map__17368__$1, cursor);
    clustermap.components.select_chooser.t17369.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17368, map__17368__$1, cursor) {
      return function(_17371, meta17370__$1) {
        var self__ = this;
        var _17371__$1 = this;
        return new clustermap.components.select_chooser.t17369(self__.cursor, self__.map__17368, self__.owner, self__.p__17354, self__.value_descriptions, self__.key, self__.title, self__.select_chooser_component, meta17370__$1);
      };
    }(map__17368, map__17368__$1, cursor);
    clustermap.components.select_chooser.__GT_t17369 = function(map__17368, map__17368__$1, cursor) {
      return function __GT_t17369(cursor__$1, map__17368__$2, owner__$1, p__17354__$1, value_descriptions__$1, key__$1, title__$1, select_chooser_component__$1, meta17370) {
        return new clustermap.components.select_chooser.t17369(cursor__$1, map__17368__$2, owner__$1, p__17354__$1, value_descriptions__$1, key__$1, title__$1, select_chooser_component__$1, meta17370);
      };
    }(map__17368, map__17368__$1, cursor);
  }
  return new clustermap.components.select_chooser.t17369(cursor, map__17368__$1, owner, p__17354, value_descriptions, key, title, select_chooser_component, null);
};
goog.provide("clustermap.ganalytics");
goog.require("cljs.core");
clustermap.ganalytics.send_pageview = function send_pageview(path) {
  var ua_code = function() {
    var G__17938 = window;
    var G__17938__$1 = G__17938 == null ? null : G__17938.config;
    var G__17938__$2 = G__17938__$1 == null ? null : G__17938__$1.ua;
    var G__17938__$3 = G__17938__$2 == null ? null : G__17938__$2.code;
    return G__17938__$3;
  }();
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = window.ga;
    if (cljs.core.truth_(and__3546__auto__)) {
      return ua_code;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return ga("send", "pageview", path);
  } else {
    return null;
  }
};
goog.provide("clustermap.components.search");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.search.ESCAPE_KEY = 27;
clustermap.components.search.ENTER_KEY = 13;
clustermap.components.search.LEFT_ARROW = 37;
clustermap.components.search.UP_ARROW = 38;
clustermap.components.search.RIGHT_ARROW = 39;
clustermap.components.search.DOWN_ARROW = 40;
clustermap.components.search.search_result_link = function search_result_link(p__17252, owner, p__17253) {
  var map__17262 = p__17252;
  var map__17262__$1 = cljs.core.seq_QMARK_.call(null, map__17262) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17262) : map__17262;
  var search_result = map__17262__$1;
  var type = cljs.core.get.call(null, map__17262__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var name = cljs.core.get.call(null, map__17262__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var map__17263 = p__17253;
  var map__17263__$1 = cljs.core.seq_QMARK_.call(null, map__17263) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17263) : map__17263;
  var opts = map__17263__$1;
  var path_fn = cljs.core.get.call(null, map__17263__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__17263__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.search.t17264 !== "undefined") {
  } else {
    clustermap.components.search.t17264 = function(owner, path_fn, p__17252, search_result_link, p__17253, name, comm, search_result, type, map__17262, opts, map__17263, meta17265) {
      this.owner = owner;
      this.path_fn = path_fn;
      this.p__17252 = p__17252;
      this.search_result_link = search_result_link;
      this.p__17253 = p__17253;
      this.name = name;
      this.comm = comm;
      this.search_result = search_result;
      this.type = type;
      this.map__17262 = map__17262;
      this.opts = opts;
      this.map__17263 = map__17263;
      this.meta17265 = meta17265;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t17264.cljs$lang$type = true;
    clustermap.components.search.t17264.cljs$lang$ctorStr = "clustermap.components.search/t17264";
    clustermap.components.search.t17264.cljs$lang$ctorPrWriter = function(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.search/t17264");
      };
    }(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm);
    clustermap.components.search.t17264.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t17264.prototype.om$core$IRenderState$render_state$arity$2 = function(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
      return function(this$, p__17267) {
        var self__ = this;
        var map__17268 = p__17267;
        var map__17268__$1 = cljs.core.seq_QMARK_.call(null, map__17268) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17268) : map__17268;
        var state = map__17268__$1;
        var selected = cljs.core.get.call(null, map__17268__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
        var this$__$1 = this;
        var path = self__.path_fn.call(null, self__.type, self__.search_result);
        return React.DOM.li({"className":cljs.core.truth_(selected) ? "selected" : null}, React.DOM.a({"href":path, "ref":"link", "onClick":function(path, this$__$1, map__17268, map__17268__$1, state, selected, map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
          return function(e) {
            var l = om.core.get_node.call(null, self__.owner, "link");
            var G__17269 = l;
            var G__17269__$1 = G__17269 == null ? null : jayq.core.$.call(null, G__17269);
            var G__17269__$2 = G__17269__$1 == null ? null : G__17269__$1.parents(".search-component");
            var G__17269__$3 = G__17269__$2 == null ? null : G__17269__$2.toggle();
            return G__17269__$3;
          };
        }(path, this$__$1, map__17268, map__17268__$1, state, selected, map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm)}, sablono.interpreter.interpret.call(null, self__.name)));
      };
    }(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm);
    clustermap.components.search.t17264.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
      return function(_17266) {
        var self__ = this;
        var _17266__$1 = this;
        return self__.meta17265;
      };
    }(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm);
    clustermap.components.search.t17264.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
      return function(_17266, meta17265__$1) {
        var self__ = this;
        var _17266__$1 = this;
        return new clustermap.components.search.t17264(self__.owner, self__.path_fn, self__.p__17252, self__.search_result_link, self__.p__17253, self__.name, self__.comm, self__.search_result, self__.type, self__.map__17262, self__.opts, self__.map__17263, meta17265__$1);
      };
    }(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm);
    clustermap.components.search.__GT_t17264 = function(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm) {
      return function __GT_t17264(owner__$1, path_fn__$1, p__17252__$1, search_result_link__$1, p__17253__$1, name__$1, comm__$1, search_result__$1, type__$1, map__17262__$2, opts__$1, map__17263__$2, meta17265) {
        return new clustermap.components.search.t17264(owner__$1, path_fn__$1, p__17252__$1, search_result_link__$1, p__17253__$1, name__$1, comm__$1, search_result__$1, type__$1, map__17262__$2, opts__$1, map__17263__$2, meta17265);
      };
    }(map__17262, map__17262__$1, search_result, type, name, map__17263, map__17263__$1, opts, path_fn, comm);
  }
  return new clustermap.components.search.t17264(owner, path_fn, p__17252, search_result_link, p__17253, name, comm, search_result, type, map__17262__$1, opts, map__17263__$1, null);
};
clustermap.components.search.nth_search_result = function nth_search_result(p__17270, n) {
  var map__17272 = p__17270;
  var map__17272__$1 = cljs.core.seq_QMARK_.call(null, map__17272) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17272) : map__17272;
  var investor_companies = cljs.core.get.call(null, map__17272__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407));
  var portfolio_companies = cljs.core.get.call(null, map__17272__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 1223322975));
  var constituencies = cljs.core.get.call(null, map__17272__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020));
  var cons = function() {
    var or__3558__auto__ = constituencies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var pcs = function() {
    var or__3558__auto__ = portfolio_companies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var invs = function() {
    var or__3558__auto__ = investor_companies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  if (n < cljs.core.count.call(null, cons)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), cljs.core.get.call(null, constituencies, n)], null);
  } else {
    if (n < cljs.core.count.call(null, cons) + cljs.core.count.call(null, pcs)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), cljs.core.get.call(null, pcs, n - cljs.core.count.call(null, cons))], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), cljs.core.get.call(null, invs, n - cljs.core.count.call(null, cons) - cljs.core.count.call(null, pcs))], null);
    }
  }
};
clustermap.components.search.key_down = function key_down(e, search_results, owner, comm) {
  var pred__17279 = cljs.core._EQ__EQ_;
  var expr__17280 = e.keyCode;
  if (cljs.core.truth_(pred__17279.call(null, clustermap.components.search.ESCAPE_KEY, expr__17280))) {
    var G__17282 = om.core.get_node.call(null, owner, "search-component");
    var G__17282__$1 = G__17282 == null ? null : jayq.core.$.call(null, G__17282);
    var G__17282__$2 = G__17282__$1 == null ? null : G__17282__$1.toggle();
    return G__17282__$2;
  } else {
    if (cljs.core.truth_(pred__17279.call(null, clustermap.components.search.ENTER_KEY, expr__17280))) {
      var vec__17283 = clustermap.components.search.nth_search_result.call(null, cljs.core.deref.call(null, search_results), function() {
        var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return 0;
        }
      }());
      var type = cljs.core.nth.call(null, vec__17283, 0, null);
      var res = cljs.core.nth.call(null, vec__17283, 1, null);
      var G__17284_17285 = om.core.get_node.call(null, owner, "search-component");
      var G__17284_17286__$1 = G__17284_17285 == null ? null : jayq.core.$.call(null, G__17284_17285);
      var G__17284_17287__$2 = G__17284_17286__$1 == null ? null : G__17284_17286__$1.toggle();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, clustermap.model.extract_id.call(null, type, res)], null)], null));
    } else {
      if (cljs.core.truth_(pred__17279.call(null, clustermap.components.search.UP_ARROW, expr__17280))) {
        return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), function() {
          var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return 0;
          }
        }() - 1);
      } else {
        if (cljs.core.truth_(pred__17279.call(null, clustermap.components.search.DOWN_ARROW, expr__17280))) {
          return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), function() {
            var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return 0;
            }
          }() + 1);
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.search.search_component = function search_component(p__17288, owner) {
  var map__17320 = p__17288;
  var map__17320__$1 = cljs.core.seq_QMARK_.call(null, map__17320) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17320) : map__17320;
  var map__17321 = cljs.core.get.call(null, map__17320__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var map__17321__$1 = cljs.core.seq_QMARK_.call(null, map__17321) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17321) : map__17321;
  var selection_type = cljs.core.get.call(null, map__17321__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var selection_value = cljs.core.get.call(null, map__17321__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var view = cljs.core.get.call(null, map__17320__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
  var search_results = cljs.core.get.call(null, map__17320__$1, new cljs.core.Keyword(null, "search-results", "search-results", 306464634));
  var map__17322 = om.core.get_shared.call(null, owner);
  var map__17322__$1 = cljs.core.seq_QMARK_.call(null, map__17322) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17322) : map__17322;
  var path_fn = cljs.core.get.call(null, map__17322__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__17322__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, view);
  var map__17323 = search_results;
  var map__17323__$1 = cljs.core.seq_QMARK_.call(null, map__17323) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17323) : map__17323;
  var investor_companies = cljs.core.get.call(null, map__17323__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407));
  var portfolio_companies = cljs.core.get.call(null, map__17323__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 1223322975));
  var constituencies = cljs.core.get.call(null, map__17323__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020));
  if (typeof clustermap.components.search.t17324 !== "undefined") {
  } else {
    clustermap.components.search.t17324 = function(search_results, p__17288, search_component, owner, path_fn, view, portfolio_companies, constituencies, investor_companies, selection_value, comm, map__17320, selection_type, map__17323, map__17322, map__17321, meta17325) {
      this.search_results = search_results;
      this.p__17288 = p__17288;
      this.search_component = search_component;
      this.owner = owner;
      this.path_fn = path_fn;
      this.view = view;
      this.portfolio_companies = portfolio_companies;
      this.constituencies = constituencies;
      this.investor_companies = investor_companies;
      this.selection_value = selection_value;
      this.comm = comm;
      this.map__17320 = map__17320;
      this.selection_type = selection_type;
      this.map__17323 = map__17323;
      this.map__17322 = map__17322;
      this.map__17321 = map__17321;
      this.meta17325 = meta17325;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t17324.cljs$lang$type = true;
    clustermap.components.search.t17324.cljs$lang$ctorStr = "clustermap.components.search/t17324";
    clustermap.components.search.t17324.cljs$lang$ctorPrWriter = function(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.search/t17324");
      };
    }(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t17324.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t17324.prototype.om$core$IRenderState$render_state$arity$2 = function(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
      return function(this$, state) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"search-component", "ref":"search-component", "id":"search", "onKeyDown":function(this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return clustermap.components.search.key_down.call(null, e, self__.search_results, self__.owner, self__.comm);
          };
        }(this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results)}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-cell", "style":{"width":"100%"}}, sablono.interpreter.input.call(null, {"ref":"search-field", "type":"text", "placeholder":"Search", "onChange":function(this$__$1, 
        map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 1564939822), e.target.value], null));
          };
        }(this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results)})), React.DOM.div({"className":"tbl-cell", "style":{"width":"34"}}, React.DOM.button({"type":"reset", "onClick":function(this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, 
        portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 1564939822), ""], null));
            return om.core.get_node.call(null, self__.owner, "search-field").value = "";
          };
        }(this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results)}, "\u00d7"))), sablono.interpreter.interpret.call(null, cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not_empty.call(null, self__.constituencies);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_empty.call(null, self__.portfolio_companies);
            if (cljs.core.truth_(or__3558__auto____$1)) {
              return or__3558__auto____$1;
            } else {
              return cljs.core.not_empty.call(null, self__.investor_companies);
            }
          }
        }()) ? function() {
          var idx_cons = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, 0), self__.constituencies);
          var idx_pcs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons)), self__.portfolio_companies);
          var idx_invs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs)), self__.investor_companies);
          var selected_idx = cljs.core.mod.call(null, function() {
            var or__3558__auto__ = (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439)).cljs$core$IFn$_invoke$arity$1(state);
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return 0;
            }
          }(), cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs) + cljs.core.count.call(null, idx_invs));
          var _ = cljs.core.not_EQ_.call(null, selected_idx, (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439)).cljs$core$IFn$_invoke$arity$1(state)) ? om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), selected_idx) : null;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 
          1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Constituencies"], null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
              return function iter__17327(s__17328) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__17328__$1 = s__17328;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__17328__$1);
                      if (temp__4126__auto__) {
                        var s__17328__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__17328__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17328__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__17330 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__17329 = 0;
                            while (true) {
                              if (i__17329 < size__4282__auto__) {
                                var vec__17333 = cljs.core._nth.call(null, c__4281__auto__, i__17329);
                                var idx = cljs.core.nth.call(null, vec__17333, 0, null);
                                var con = cljs.core.nth.call(null, vec__17333, 1, null);
                                cljs.core.chunk_append.call(null, b__17330, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                -1988618099), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__17329, vec__17333, idx, con, c__4281__auto__, size__4282__auto__, b__17330, s__17328__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, 
                                map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395))));
                                  };
                                }(i__17329, vec__17333, idx, con, c__4281__auto__, size__4282__auto__, b__17330, s__17328__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__17351 = i__17329 + 1;
                                i__17329 = G__17351;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17330), iter__17327.call(null, cljs.core.chunk_rest.call(null, s__17328__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17330), null);
                          }
                        } else {
                          var vec__17334 = cljs.core.first.call(null, s__17328__$2);
                          var idx = cljs.core.nth.call(null, vec__17334, 0, null);
                          var con = cljs.core.nth.call(null, vec__17334, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__17334, idx, con, s__17328__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, 
                          map__17321__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395))));
                            };
                          }(vec__17334, idx, con, s__17328__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__17327.call(null, cljs.core.rest.call(null, s__17328__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_cons);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Investor-backed companies"], 
          null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
              return function iter__17335(s__17336) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__17336__$1 = s__17336;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__17336__$1);
                      if (temp__4126__auto__) {
                        var s__17336__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__17336__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17336__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__17338 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__17337 = 0;
                            while (true) {
                              if (i__17337 < size__4282__auto__) {
                                var vec__17341 = cljs.core._nth.call(null, c__4281__auto__, i__17337);
                                var idx = cljs.core.nth.call(null, vec__17341, 0, null);
                                var pc = cljs.core.nth.call(null, vec__17341, 1, null);
                                cljs.core.chunk_append.call(null, b__17338, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), 
                                new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__17337, vec__17341, idx, pc, c__4281__auto__, size__4282__auto__, b__17338, s__17336__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, 
                                investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649))));
                                  };
                                }(i__17337, vec__17341, idx, pc, c__4281__auto__, size__4282__auto__, b__17338, s__17336__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__17352 = i__17337 + 1;
                                i__17337 = G__17352;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17338), iter__17335.call(null, cljs.core.chunk_rest.call(null, s__17336__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17338), null);
                          }
                        } else {
                          var vec__17342 = cljs.core.first.call(null, s__17336__$2);
                          var idx = cljs.core.nth.call(null, vec__17342, 0, null);
                          var pc = cljs.core.nth.call(null, vec__17342, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__17342, idx, pc, s__17336__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, 
                          map__17321__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649))));
                            };
                          }(vec__17342, idx, pc, s__17336__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__17335.call(null, cljs.core.rest.call(null, s__17336__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_pcs);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Investors"], null) : 
          null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
              return function iter__17343(s__17344) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__17344__$1 = s__17344;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__17344__$1);
                      if (temp__4126__auto__) {
                        var s__17344__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__17344__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17344__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__17346 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__17345 = 0;
                            while (true) {
                              if (i__17345 < size__4282__auto__) {
                                var vec__17349 = cljs.core._nth.call(null, c__4281__auto__, i__17345);
                                var idx = cljs.core.nth.call(null, vec__17349, 0, null);
                                var inv = cljs.core.nth.call(null, vec__17349, 1, null);
                                cljs.core.chunk_append.call(null, b__17346, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                -1988618099), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__17345, vec__17349, idx, inv, c__4281__auto__, size__4282__auto__, b__17346, s__17344__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, 
                                map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830))));
                                  };
                                }(i__17345, vec__17349, idx, inv, c__4281__auto__, size__4282__auto__, b__17346, s__17344__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__17353 = i__17345 + 1;
                                i__17345 = G__17353;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17346), iter__17343.call(null, cljs.core.chunk_rest.call(null, s__17344__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17346), null);
                          }
                        } else {
                          var vec__17350 = cljs.core.first.call(null, s__17344__$2);
                          var idx = cljs.core.nth.call(null, vec__17350, 0, null);
                          var inv = cljs.core.nth.call(null, vec__17350, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__17350, idx, inv, s__17344__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, 
                          map__17321__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830))));
                            };
                          }(vec__17350, idx, inv, s__17344__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__17343.call(null, cljs.core.rest.call(null, s__17344__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_invs);
          }() : null], null)], null);
        }() : null));
      };
    }(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t17324.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
      return function(_17326) {
        var self__ = this;
        var _17326__$1 = this;
        return self__.meta17325;
      };
    }(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t17324.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
      return function(_17326, meta17325__$1) {
        var self__ = this;
        var _17326__$1 = this;
        return new clustermap.components.search.t17324(self__.search_results, self__.p__17288, self__.search_component, self__.owner, self__.path_fn, self__.view, self__.portfolio_companies, self__.constituencies, self__.investor_companies, self__.selection_value, self__.comm, self__.map__17320, self__.selection_type, self__.map__17323, self__.map__17322, self__.map__17321, meta17325__$1);
      };
    }(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.__GT_t17324 = function(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results) {
      return function __GT_t17324(search_results__$1, p__17288__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, constituencies__$1, investor_companies__$1, selection_value__$1, comm__$1, map__17320__$2, selection_type__$1, map__17323__$2, map__17322__$2, map__17321__$2, meta17325) {
        return new clustermap.components.search.t17324(search_results__$1, p__17288__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, constituencies__$1, investor_companies__$1, selection_value__$1, comm__$1, map__17320__$2, selection_type__$1, map__17323__$2, map__17322__$2, map__17321__$2, meta17325);
      };
    }(map__17322, map__17322__$1, path_fn, comm, path_fn__$1, map__17323, map__17323__$1, investor_companies, portfolio_companies, constituencies, map__17320, map__17320__$1, map__17321, map__17321__$1, selection_type, selection_value, view, search_results);
  }
  return new clustermap.components.search.t17324(search_results, p__17288, search_component, owner, path_fn__$1, view, portfolio_companies, constituencies, investor_companies, selection_value, comm, map__17320__$1, selection_type, map__17323__$1, map__17322__$1, map__17321__$1, null);
};
clustermap.components.search.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.search.search_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id)], null));
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.dom");
var div_24808 = document.createElement("div");
var test_html_24809 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_24808.innerHTML = test_html_24809;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_24808.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_24808.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_24808.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return!goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return(prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS", false);
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return{"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top);
  } else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
    var pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y);
  }
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
    return goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
  } else {
    return pos;
  }
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var be = (el);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && be.getBrowserEvent().targetTouches) {
        targetEvent = be.getBrowserEvent().targetTouches[0];
      }
    }
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.string");
goog.require("domina.support");
goog.require("goog.style");
goog.require("goog.style");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_24358 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_24359 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_24360 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", -1987822328), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_24360, opt_wrapper_24358, table_section_wrapper_24359, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 
5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_24358, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_24359, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_24359, cell_wrapper_24360, table_section_wrapper_24359, table_section_wrapper_24359]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3546__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3546__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3546__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__24365 = cljs.core.seq.call(null, tbody);
  var chunk__24366 = null;
  var count__24367 = 0;
  var i__24368 = 0;
  while (true) {
    if (i__24368 < count__24367) {
      var child = cljs.core._nth.call(null, chunk__24366, i__24368);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__24369 = seq__24365;
      var G__24370 = chunk__24366;
      var G__24371 = count__24367;
      var G__24372 = i__24368 + 1;
      seq__24365 = G__24369;
      chunk__24366 = G__24370;
      count__24367 = G__24371;
      i__24368 = G__24372;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__24365);
      if (temp__4126__auto__) {
        var seq__24365__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24365__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__24365__$1);
          var G__24373 = cljs.core.chunk_rest.call(null, seq__24365__$1);
          var G__24374 = c__4314__auto__;
          var G__24375 = cljs.core.count.call(null, c__4314__auto__);
          var G__24376 = 0;
          seq__24365 = G__24373;
          chunk__24366 = G__24374;
          count__24367 = G__24375;
          i__24368 = G__24376;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__24365__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__24377 = cljs.core.next.call(null, seq__24365__$1);
          var G__24378 = null;
          var G__24379 = 0;
          var G__24380 = 0;
          seq__24365 = G__24377;
          chunk__24366 = G__24378;
          count__24367 = G__24379;
          i__24368 = G__24380;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))).toLowerCase();
  var vec__24382 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__24382, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__24382, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__24382, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(start_wrap) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(html__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(end_wrap);
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__24383 = wrapper.lastChild;
        var G__24384 = level - 1;
        wrapper = G__24383;
        level = G__24384;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__3546__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3546__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj24386 = {};
  return obj24386;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3546__auto__ = content;
    if (and__3546__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4185__auto__ = content == null ? null : content;
    return function() {
      var or__3558__auto__ = domina.nodes[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.nodes["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3546__auto__ = nodeseq;
    if (and__3546__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4185__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3558__auto__ = domina.single_node[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.single_node["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3546__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__3546__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__24387) {
    var mesg = cljs.core.seq(arglist__24387);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__24388) {
    var mesg = cljs.core.seq(arglist__24388);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__24389) {
    var contents = cljs.core.seq(arglist__24389);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__24390_SHARP_) {
    return p1__24390_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__24391_SHARP_, p2__24392_SHARP_) {
    return goog.dom.insertChildAt(p1__24391_SHARP_, p2__24392_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__24394_SHARP_, p2__24393_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__24393_SHARP_, p1__24394_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__24396_SHARP_, p2__24395_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__24395_SHARP_, p1__24396_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__24398_SHARP_, p2__24397_SHARP_) {
    return goog.dom.replaceNode(p2__24397_SHARP_, p1__24398_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__24403_24407 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__24404_24408 = null;
    var count__24405_24409 = 0;
    var i__24406_24410 = 0;
    while (true) {
      if (i__24406_24410 < count__24405_24409) {
        var n_24411 = cljs.core._nth.call(null, chunk__24404_24408, i__24406_24410);
        goog.style.setStyle(n_24411, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__24412 = seq__24403_24407;
        var G__24413 = chunk__24404_24408;
        var G__24414 = count__24405_24409;
        var G__24415 = i__24406_24410 + 1;
        seq__24403_24407 = G__24412;
        chunk__24404_24408 = G__24413;
        count__24405_24409 = G__24414;
        i__24406_24410 = G__24415;
        continue;
      } else {
        var temp__4126__auto___24416 = cljs.core.seq.call(null, seq__24403_24407);
        if (temp__4126__auto___24416) {
          var seq__24403_24417__$1 = temp__4126__auto___24416;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24403_24417__$1)) {
            var c__4314__auto___24418 = cljs.core.chunk_first.call(null, seq__24403_24417__$1);
            var G__24419 = cljs.core.chunk_rest.call(null, seq__24403_24417__$1);
            var G__24420 = c__4314__auto___24418;
            var G__24421 = cljs.core.count.call(null, c__4314__auto___24418);
            var G__24422 = 0;
            seq__24403_24407 = G__24419;
            chunk__24404_24408 = G__24420;
            count__24405_24409 = G__24421;
            i__24406_24410 = G__24422;
            continue;
          } else {
            var n_24423 = cljs.core.first.call(null, seq__24403_24417__$1);
            goog.style.setStyle(n_24423, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__24424 = cljs.core.next.call(null, seq__24403_24417__$1);
            var G__24425 = null;
            var G__24426 = 0;
            var G__24427 = 0;
            seq__24403_24407 = G__24424;
            chunk__24404_24408 = G__24425;
            count__24405_24409 = G__24426;
            i__24406_24410 = G__24427;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__24428) {
    var content = cljs.core.first(arglist__24428);
    arglist__24428 = cljs.core.next(arglist__24428);
    var name = cljs.core.first(arglist__24428);
    var value = cljs.core.rest(arglist__24428);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__24433_24437 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__24434_24438 = null;
    var count__24435_24439 = 0;
    var i__24436_24440 = 0;
    while (true) {
      if (i__24436_24440 < count__24435_24439) {
        var n_24441 = cljs.core._nth.call(null, chunk__24434_24438, i__24436_24440);
        n_24441.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__24442 = seq__24433_24437;
        var G__24443 = chunk__24434_24438;
        var G__24444 = count__24435_24439;
        var G__24445 = i__24436_24440 + 1;
        seq__24433_24437 = G__24442;
        chunk__24434_24438 = G__24443;
        count__24435_24439 = G__24444;
        i__24436_24440 = G__24445;
        continue;
      } else {
        var temp__4126__auto___24446 = cljs.core.seq.call(null, seq__24433_24437);
        if (temp__4126__auto___24446) {
          var seq__24433_24447__$1 = temp__4126__auto___24446;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24433_24447__$1)) {
            var c__4314__auto___24448 = cljs.core.chunk_first.call(null, seq__24433_24447__$1);
            var G__24449 = cljs.core.chunk_rest.call(null, seq__24433_24447__$1);
            var G__24450 = c__4314__auto___24448;
            var G__24451 = cljs.core.count.call(null, c__4314__auto___24448);
            var G__24452 = 0;
            seq__24433_24437 = G__24449;
            chunk__24434_24438 = G__24450;
            count__24435_24439 = G__24451;
            i__24436_24440 = G__24452;
            continue;
          } else {
            var n_24453 = cljs.core.first.call(null, seq__24433_24447__$1);
            n_24453.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__24454 = cljs.core.next.call(null, seq__24433_24447__$1);
            var G__24455 = null;
            var G__24456 = 0;
            var G__24457 = 0;
            seq__24433_24437 = G__24454;
            chunk__24434_24438 = G__24455;
            count__24435_24439 = G__24456;
            i__24436_24440 = G__24457;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__24458) {
    var content = cljs.core.first(arglist__24458);
    arglist__24458 = cljs.core.next(arglist__24458);
    var name = cljs.core.first(arglist__24458);
    var value = cljs.core.rest(arglist__24458);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__24463_24467 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24464_24468 = null;
  var count__24465_24469 = 0;
  var i__24466_24470 = 0;
  while (true) {
    if (i__24466_24470 < count__24465_24469) {
      var n_24471 = cljs.core._nth.call(null, chunk__24464_24468, i__24466_24470);
      n_24471.removeAttribute(cljs.core.name.call(null, name));
      var G__24472 = seq__24463_24467;
      var G__24473 = chunk__24464_24468;
      var G__24474 = count__24465_24469;
      var G__24475 = i__24466_24470 + 1;
      seq__24463_24467 = G__24472;
      chunk__24464_24468 = G__24473;
      count__24465_24469 = G__24474;
      i__24466_24470 = G__24475;
      continue;
    } else {
      var temp__4126__auto___24476 = cljs.core.seq.call(null, seq__24463_24467);
      if (temp__4126__auto___24476) {
        var seq__24463_24477__$1 = temp__4126__auto___24476;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24463_24477__$1)) {
          var c__4314__auto___24478 = cljs.core.chunk_first.call(null, seq__24463_24477__$1);
          var G__24479 = cljs.core.chunk_rest.call(null, seq__24463_24477__$1);
          var G__24480 = c__4314__auto___24478;
          var G__24481 = cljs.core.count.call(null, c__4314__auto___24478);
          var G__24482 = 0;
          seq__24463_24467 = G__24479;
          chunk__24464_24468 = G__24480;
          count__24465_24469 = G__24481;
          i__24466_24470 = G__24482;
          continue;
        } else {
          var n_24483 = cljs.core.first.call(null, seq__24463_24477__$1);
          n_24483.removeAttribute(cljs.core.name.call(null, name));
          var G__24484 = cljs.core.next.call(null, seq__24463_24477__$1);
          var G__24485 = null;
          var G__24486 = 0;
          var G__24487 = 0;
          seq__24463_24467 = G__24484;
          chunk__24464_24468 = G__24485;
          count__24465_24469 = G__24486;
          i__24466_24470 = G__24487;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__24489 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__24489, 0, null);
    var v = cljs.core.nth.call(null, vec__24489, 1, null);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = k;
      if (cljs.core.truth_(and__3546__auto__)) {
        return v;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__24490_SHARP_) {
      var attr = attrs__$1.item(p1__24490_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__24497_24503 = cljs.core.seq.call(null, styles);
  var chunk__24498_24504 = null;
  var count__24499_24505 = 0;
  var i__24500_24506 = 0;
  while (true) {
    if (i__24500_24506 < count__24499_24505) {
      var vec__24501_24507 = cljs.core._nth.call(null, chunk__24498_24504, i__24500_24506);
      var name_24508 = cljs.core.nth.call(null, vec__24501_24507, 0, null);
      var value_24509 = cljs.core.nth.call(null, vec__24501_24507, 1, null);
      domina.set_style_BANG_.call(null, content, name_24508, value_24509);
      var G__24510 = seq__24497_24503;
      var G__24511 = chunk__24498_24504;
      var G__24512 = count__24499_24505;
      var G__24513 = i__24500_24506 + 1;
      seq__24497_24503 = G__24510;
      chunk__24498_24504 = G__24511;
      count__24499_24505 = G__24512;
      i__24500_24506 = G__24513;
      continue;
    } else {
      var temp__4126__auto___24514 = cljs.core.seq.call(null, seq__24497_24503);
      if (temp__4126__auto___24514) {
        var seq__24497_24515__$1 = temp__4126__auto___24514;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24497_24515__$1)) {
          var c__4314__auto___24516 = cljs.core.chunk_first.call(null, seq__24497_24515__$1);
          var G__24517 = cljs.core.chunk_rest.call(null, seq__24497_24515__$1);
          var G__24518 = c__4314__auto___24516;
          var G__24519 = cljs.core.count.call(null, c__4314__auto___24516);
          var G__24520 = 0;
          seq__24497_24503 = G__24517;
          chunk__24498_24504 = G__24518;
          count__24499_24505 = G__24519;
          i__24500_24506 = G__24520;
          continue;
        } else {
          var vec__24502_24521 = cljs.core.first.call(null, seq__24497_24515__$1);
          var name_24522 = cljs.core.nth.call(null, vec__24502_24521, 0, null);
          var value_24523 = cljs.core.nth.call(null, vec__24502_24521, 1, null);
          domina.set_style_BANG_.call(null, content, name_24522, value_24523);
          var G__24524 = cljs.core.next.call(null, seq__24497_24515__$1);
          var G__24525 = null;
          var G__24526 = 0;
          var G__24527 = 0;
          seq__24497_24503 = G__24524;
          chunk__24498_24504 = G__24525;
          count__24499_24505 = G__24526;
          i__24500_24506 = G__24527;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__24534_24540 = cljs.core.seq.call(null, attrs);
  var chunk__24535_24541 = null;
  var count__24536_24542 = 0;
  var i__24537_24543 = 0;
  while (true) {
    if (i__24537_24543 < count__24536_24542) {
      var vec__24538_24544 = cljs.core._nth.call(null, chunk__24535_24541, i__24537_24543);
      var name_24545 = cljs.core.nth.call(null, vec__24538_24544, 0, null);
      var value_24546 = cljs.core.nth.call(null, vec__24538_24544, 1, null);
      domina.set_attr_BANG_.call(null, content, name_24545, value_24546);
      var G__24547 = seq__24534_24540;
      var G__24548 = chunk__24535_24541;
      var G__24549 = count__24536_24542;
      var G__24550 = i__24537_24543 + 1;
      seq__24534_24540 = G__24547;
      chunk__24535_24541 = G__24548;
      count__24536_24542 = G__24549;
      i__24537_24543 = G__24550;
      continue;
    } else {
      var temp__4126__auto___24551 = cljs.core.seq.call(null, seq__24534_24540);
      if (temp__4126__auto___24551) {
        var seq__24534_24552__$1 = temp__4126__auto___24551;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24534_24552__$1)) {
          var c__4314__auto___24553 = cljs.core.chunk_first.call(null, seq__24534_24552__$1);
          var G__24554 = cljs.core.chunk_rest.call(null, seq__24534_24552__$1);
          var G__24555 = c__4314__auto___24553;
          var G__24556 = cljs.core.count.call(null, c__4314__auto___24553);
          var G__24557 = 0;
          seq__24534_24540 = G__24554;
          chunk__24535_24541 = G__24555;
          count__24536_24542 = G__24556;
          i__24537_24543 = G__24557;
          continue;
        } else {
          var vec__24539_24558 = cljs.core.first.call(null, seq__24534_24552__$1);
          var name_24559 = cljs.core.nth.call(null, vec__24539_24558, 0, null);
          var value_24560 = cljs.core.nth.call(null, vec__24539_24558, 1, null);
          domina.set_attr_BANG_.call(null, content, name_24559, value_24560);
          var G__24561 = cljs.core.next.call(null, seq__24534_24552__$1);
          var G__24562 = null;
          var G__24563 = 0;
          var G__24564 = 0;
          seq__24534_24540 = G__24561;
          chunk__24535_24541 = G__24562;
          count__24536_24542 = G__24563;
          i__24537_24543 = G__24564;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__24569_24573 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24570_24574 = null;
  var count__24571_24575 = 0;
  var i__24572_24576 = 0;
  while (true) {
    if (i__24572_24576 < count__24571_24575) {
      var node_24577 = cljs.core._nth.call(null, chunk__24570_24574, i__24572_24576);
      goog.dom.classes.add(node_24577, class$);
      var G__24578 = seq__24569_24573;
      var G__24579 = chunk__24570_24574;
      var G__24580 = count__24571_24575;
      var G__24581 = i__24572_24576 + 1;
      seq__24569_24573 = G__24578;
      chunk__24570_24574 = G__24579;
      count__24571_24575 = G__24580;
      i__24572_24576 = G__24581;
      continue;
    } else {
      var temp__4126__auto___24582 = cljs.core.seq.call(null, seq__24569_24573);
      if (temp__4126__auto___24582) {
        var seq__24569_24583__$1 = temp__4126__auto___24582;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24569_24583__$1)) {
          var c__4314__auto___24584 = cljs.core.chunk_first.call(null, seq__24569_24583__$1);
          var G__24585 = cljs.core.chunk_rest.call(null, seq__24569_24583__$1);
          var G__24586 = c__4314__auto___24584;
          var G__24587 = cljs.core.count.call(null, c__4314__auto___24584);
          var G__24588 = 0;
          seq__24569_24573 = G__24585;
          chunk__24570_24574 = G__24586;
          count__24571_24575 = G__24587;
          i__24572_24576 = G__24588;
          continue;
        } else {
          var node_24589 = cljs.core.first.call(null, seq__24569_24583__$1);
          goog.dom.classes.add(node_24589, class$);
          var G__24590 = cljs.core.next.call(null, seq__24569_24583__$1);
          var G__24591 = null;
          var G__24592 = 0;
          var G__24593 = 0;
          seq__24569_24573 = G__24590;
          chunk__24570_24574 = G__24591;
          count__24571_24575 = G__24592;
          i__24572_24576 = G__24593;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__24598_24602 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24599_24603 = null;
  var count__24600_24604 = 0;
  var i__24601_24605 = 0;
  while (true) {
    if (i__24601_24605 < count__24600_24604) {
      var node_24606 = cljs.core._nth.call(null, chunk__24599_24603, i__24601_24605);
      goog.dom.classes.remove(node_24606, class$);
      var G__24607 = seq__24598_24602;
      var G__24608 = chunk__24599_24603;
      var G__24609 = count__24600_24604;
      var G__24610 = i__24601_24605 + 1;
      seq__24598_24602 = G__24607;
      chunk__24599_24603 = G__24608;
      count__24600_24604 = G__24609;
      i__24601_24605 = G__24610;
      continue;
    } else {
      var temp__4126__auto___24611 = cljs.core.seq.call(null, seq__24598_24602);
      if (temp__4126__auto___24611) {
        var seq__24598_24612__$1 = temp__4126__auto___24611;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24598_24612__$1)) {
          var c__4314__auto___24613 = cljs.core.chunk_first.call(null, seq__24598_24612__$1);
          var G__24614 = cljs.core.chunk_rest.call(null, seq__24598_24612__$1);
          var G__24615 = c__4314__auto___24613;
          var G__24616 = cljs.core.count.call(null, c__4314__auto___24613);
          var G__24617 = 0;
          seq__24598_24602 = G__24614;
          chunk__24599_24603 = G__24615;
          count__24600_24604 = G__24616;
          i__24601_24605 = G__24617;
          continue;
        } else {
          var node_24618 = cljs.core.first.call(null, seq__24598_24612__$1);
          goog.dom.classes.remove(node_24618, class$);
          var G__24619 = cljs.core.next.call(null, seq__24598_24612__$1);
          var G__24620 = null;
          var G__24621 = 0;
          var G__24622 = 0;
          seq__24598_24602 = G__24619;
          chunk__24599_24603 = G__24620;
          count__24600_24604 = G__24621;
          i__24601_24605 = G__24622;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__24627_24631 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24628_24632 = null;
  var count__24629_24633 = 0;
  var i__24630_24634 = 0;
  while (true) {
    if (i__24630_24634 < count__24629_24633) {
      var node_24635 = cljs.core._nth.call(null, chunk__24628_24632, i__24630_24634);
      goog.dom.classes.toggle(node_24635, class$);
      var G__24636 = seq__24627_24631;
      var G__24637 = chunk__24628_24632;
      var G__24638 = count__24629_24633;
      var G__24639 = i__24630_24634 + 1;
      seq__24627_24631 = G__24636;
      chunk__24628_24632 = G__24637;
      count__24629_24633 = G__24638;
      i__24630_24634 = G__24639;
      continue;
    } else {
      var temp__4126__auto___24640 = cljs.core.seq.call(null, seq__24627_24631);
      if (temp__4126__auto___24640) {
        var seq__24627_24641__$1 = temp__4126__auto___24640;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24627_24641__$1)) {
          var c__4314__auto___24642 = cljs.core.chunk_first.call(null, seq__24627_24641__$1);
          var G__24643 = cljs.core.chunk_rest.call(null, seq__24627_24641__$1);
          var G__24644 = c__4314__auto___24642;
          var G__24645 = cljs.core.count.call(null, c__4314__auto___24642);
          var G__24646 = 0;
          seq__24627_24631 = G__24643;
          chunk__24628_24632 = G__24644;
          count__24629_24633 = G__24645;
          i__24630_24634 = G__24646;
          continue;
        } else {
          var node_24647 = cljs.core.first.call(null, seq__24627_24641__$1);
          goog.dom.classes.toggle(node_24647, class$);
          var G__24648 = cljs.core.next.call(null, seq__24627_24641__$1);
          var G__24649 = null;
          var G__24650 = 0;
          var G__24651 = 0;
          seq__24627_24631 = G__24648;
          chunk__24628_24632 = G__24649;
          count__24629_24633 = G__24650;
          i__24630_24634 = G__24651;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_24660__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__24656_24661 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24657_24662 = null;
  var count__24658_24663 = 0;
  var i__24659_24664 = 0;
  while (true) {
    if (i__24659_24664 < count__24658_24663) {
      var node_24665 = cljs.core._nth.call(null, chunk__24657_24662, i__24659_24664);
      goog.dom.classes.set(node_24665, classes_24660__$1);
      var G__24666 = seq__24656_24661;
      var G__24667 = chunk__24657_24662;
      var G__24668 = count__24658_24663;
      var G__24669 = i__24659_24664 + 1;
      seq__24656_24661 = G__24666;
      chunk__24657_24662 = G__24667;
      count__24658_24663 = G__24668;
      i__24659_24664 = G__24669;
      continue;
    } else {
      var temp__4126__auto___24670 = cljs.core.seq.call(null, seq__24656_24661);
      if (temp__4126__auto___24670) {
        var seq__24656_24671__$1 = temp__4126__auto___24670;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24656_24671__$1)) {
          var c__4314__auto___24672 = cljs.core.chunk_first.call(null, seq__24656_24671__$1);
          var G__24673 = cljs.core.chunk_rest.call(null, seq__24656_24671__$1);
          var G__24674 = c__4314__auto___24672;
          var G__24675 = cljs.core.count.call(null, c__4314__auto___24672);
          var G__24676 = 0;
          seq__24656_24661 = G__24673;
          chunk__24657_24662 = G__24674;
          count__24658_24663 = G__24675;
          i__24659_24664 = G__24676;
          continue;
        } else {
          var node_24677 = cljs.core.first.call(null, seq__24656_24671__$1);
          goog.dom.classes.set(node_24677, classes_24660__$1);
          var G__24678 = cljs.core.next.call(null, seq__24656_24671__$1);
          var G__24679 = null;
          var G__24680 = 0;
          var G__24681 = 0;
          seq__24656_24661 = G__24678;
          chunk__24657_24662 = G__24679;
          count__24658_24663 = G__24680;
          i__24659_24664 = G__24681;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__24686_24690 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24687_24691 = null;
  var count__24688_24692 = 0;
  var i__24689_24693 = 0;
  while (true) {
    if (i__24689_24693 < count__24688_24692) {
      var node_24694 = cljs.core._nth.call(null, chunk__24687_24691, i__24689_24693);
      goog.dom.setTextContent(node_24694, value);
      var G__24695 = seq__24686_24690;
      var G__24696 = chunk__24687_24691;
      var G__24697 = count__24688_24692;
      var G__24698 = i__24689_24693 + 1;
      seq__24686_24690 = G__24695;
      chunk__24687_24691 = G__24696;
      count__24688_24692 = G__24697;
      i__24689_24693 = G__24698;
      continue;
    } else {
      var temp__4126__auto___24699 = cljs.core.seq.call(null, seq__24686_24690);
      if (temp__4126__auto___24699) {
        var seq__24686_24700__$1 = temp__4126__auto___24699;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24686_24700__$1)) {
          var c__4314__auto___24701 = cljs.core.chunk_first.call(null, seq__24686_24700__$1);
          var G__24702 = cljs.core.chunk_rest.call(null, seq__24686_24700__$1);
          var G__24703 = c__4314__auto___24701;
          var G__24704 = cljs.core.count.call(null, c__4314__auto___24701);
          var G__24705 = 0;
          seq__24686_24690 = G__24702;
          chunk__24687_24691 = G__24703;
          count__24688_24692 = G__24704;
          i__24689_24693 = G__24705;
          continue;
        } else {
          var node_24706 = cljs.core.first.call(null, seq__24686_24700__$1);
          goog.dom.setTextContent(node_24706, value);
          var G__24707 = cljs.core.next.call(null, seq__24686_24700__$1);
          var G__24708 = null;
          var G__24709 = 0;
          var G__24710 = 0;
          seq__24686_24690 = G__24707;
          chunk__24687_24691 = G__24708;
          count__24688_24692 = G__24709;
          i__24689_24693 = G__24710;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__24715_24719 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__24716_24720 = null;
  var count__24717_24721 = 0;
  var i__24718_24722 = 0;
  while (true) {
    if (i__24718_24722 < count__24717_24721) {
      var node_24723 = cljs.core._nth.call(null, chunk__24716_24720, i__24718_24722);
      goog.dom.forms.setValue(node_24723, value);
      var G__24724 = seq__24715_24719;
      var G__24725 = chunk__24716_24720;
      var G__24726 = count__24717_24721;
      var G__24727 = i__24718_24722 + 1;
      seq__24715_24719 = G__24724;
      chunk__24716_24720 = G__24725;
      count__24717_24721 = G__24726;
      i__24718_24722 = G__24727;
      continue;
    } else {
      var temp__4126__auto___24728 = cljs.core.seq.call(null, seq__24715_24719);
      if (temp__4126__auto___24728) {
        var seq__24715_24729__$1 = temp__4126__auto___24728;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24715_24729__$1)) {
          var c__4314__auto___24730 = cljs.core.chunk_first.call(null, seq__24715_24729__$1);
          var G__24731 = cljs.core.chunk_rest.call(null, seq__24715_24729__$1);
          var G__24732 = c__4314__auto___24730;
          var G__24733 = cljs.core.count.call(null, c__4314__auto___24730);
          var G__24734 = 0;
          seq__24715_24719 = G__24731;
          chunk__24716_24720 = G__24732;
          count__24717_24721 = G__24733;
          i__24718_24722 = G__24734;
          continue;
        } else {
          var node_24735 = cljs.core.first.call(null, seq__24715_24729__$1);
          goog.dom.forms.setValue(node_24735, value);
          var G__24736 = cljs.core.next.call(null, seq__24715_24729__$1);
          var G__24737 = null;
          var G__24738 = 0;
          var G__24739 = 0;
          seq__24715_24719 = G__24736;
          chunk__24716_24720 = G__24737;
          count__24717_24721 = G__24738;
          i__24718_24722 = G__24739;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))).toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = allows_inner_html_QMARK_;
    if (and__3546__auto__) {
      var and__3546__auto____$1 = function() {
        var or__3558__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3546__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }())) {
    var value_24750 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__24746_24751 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__24747_24752 = null;
      var count__24748_24753 = 0;
      var i__24749_24754 = 0;
      while (true) {
        if (i__24749_24754 < count__24748_24753) {
          var node_24755 = cljs.core._nth.call(null, chunk__24747_24752, i__24749_24754);
          node_24755.innerHTML = value_24750;
          var G__24756 = seq__24746_24751;
          var G__24757 = chunk__24747_24752;
          var G__24758 = count__24748_24753;
          var G__24759 = i__24749_24754 + 1;
          seq__24746_24751 = G__24756;
          chunk__24747_24752 = G__24757;
          count__24748_24753 = G__24758;
          i__24749_24754 = G__24759;
          continue;
        } else {
          var temp__4126__auto___24760 = cljs.core.seq.call(null, seq__24746_24751);
          if (temp__4126__auto___24760) {
            var seq__24746_24761__$1 = temp__4126__auto___24760;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__24746_24761__$1)) {
              var c__4314__auto___24762 = cljs.core.chunk_first.call(null, seq__24746_24761__$1);
              var G__24763 = cljs.core.chunk_rest.call(null, seq__24746_24761__$1);
              var G__24764 = c__4314__auto___24762;
              var G__24765 = cljs.core.count.call(null, c__4314__auto___24762);
              var G__24766 = 0;
              seq__24746_24751 = G__24763;
              chunk__24747_24752 = G__24764;
              count__24748_24753 = G__24765;
              i__24749_24754 = G__24766;
              continue;
            } else {
              var node_24767 = cljs.core.first.call(null, seq__24746_24761__$1);
              node_24767.innerHTML = value_24750;
              var G__24768 = cljs.core.next.call(null, seq__24746_24761__$1);
              var G__24769 = null;
              var G__24770 = 0;
              var G__24771 = 0;
              seq__24746_24751 = G__24768;
              chunk__24747_24752 = G__24769;
              count__24748_24753 = G__24770;
              i__24749_24754 = G__24771;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e24745) {
      if (e24745 instanceof Error) {
        var e_24772 = e24745;
        domina.replace_children_BANG_.call(null, content, value_24750);
      } else {
        throw e24745;
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = bubble;
      if (cljs.core.truth_(and__3546__auto__)) {
        return value == null;
      } else {
        return and__3546__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3558__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__24779_24783 = cljs.core.seq.call(null, children);
    var chunk__24780_24784 = null;
    var count__24781_24785 = 0;
    var i__24782_24786 = 0;
    while (true) {
      if (i__24782_24786 < count__24781_24785) {
        var child_24787 = cljs.core._nth.call(null, chunk__24780_24784, i__24782_24786);
        frag.appendChild(child_24787);
        var G__24788 = seq__24779_24783;
        var G__24789 = chunk__24780_24784;
        var G__24790 = count__24781_24785;
        var G__24791 = i__24782_24786 + 1;
        seq__24779_24783 = G__24788;
        chunk__24780_24784 = G__24789;
        count__24781_24785 = G__24790;
        i__24782_24786 = G__24791;
        continue;
      } else {
        var temp__4126__auto___24792 = cljs.core.seq.call(null, seq__24779_24783);
        if (temp__4126__auto___24792) {
          var seq__24779_24793__$1 = temp__4126__auto___24792;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24779_24793__$1)) {
            var c__4314__auto___24794 = cljs.core.chunk_first.call(null, seq__24779_24793__$1);
            var G__24795 = cljs.core.chunk_rest.call(null, seq__24779_24793__$1);
            var G__24796 = c__4314__auto___24794;
            var G__24797 = cljs.core.count.call(null, c__4314__auto___24794);
            var G__24798 = 0;
            seq__24779_24783 = G__24795;
            chunk__24780_24784 = G__24796;
            count__24781_24785 = G__24797;
            i__24782_24786 = G__24798;
            continue;
          } else {
            var child_24799 = cljs.core.first.call(null, seq__24779_24793__$1);
            frag.appendChild(child_24799);
            var G__24800 = cljs.core.next.call(null, seq__24779_24793__$1);
            var G__24801 = null;
            var G__24802 = 0;
            var G__24803 = 0;
            seq__24779_24783 = G__24800;
            chunk__24780_24784 = G__24801;
            count__24781_24785 = G__24802;
            i__24782_24786 = G__24803;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__24773_SHARP_, p2__24774_SHARP_) {
        return f.call(null, p1__24773_SHARP_, p2__24774_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3546__auto__ = obj;
  if (cljs.core.truth_(and__3546__auto__)) {
    var and__3546__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3546__auto____$1) {
      return obj.length;
    } else {
      return and__3546__auto____$1;
    }
  } else {
    return and__3546__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__24805 = list_thing;
      if (G__24805) {
        var bit__4208__auto__ = G__24805.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__24805.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__24805.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24805);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24805);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__24806 = content;
      if (G__24806) {
        var bit__4208__auto__ = G__24806.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__24806.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__24806.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24806);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24806);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__24807 = content;
      if (G__24807) {
        var bit__4208__auto__ = G__24807.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__24807.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__24807.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24807);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24807);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.object");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj22793 = {};
  return obj22793;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.prevent_default[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.prevent_default["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.stop_propagation[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.stop_propagation["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.target[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.target["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.current_target[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.current_target["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.event_type[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.event_type["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.raw_event[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.raw_event["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t22797 !== "undefined") {
      } else {
        domina.events.t22797 = function(evt, f, create_listener_function, meta22798) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta22798 = meta22798;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t22797.cljs$lang$type = true;
        domina.events.t22797.cljs$lang$ctorStr = "domina.events/t22797";
        domina.events.t22797.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "domina.events/t22797");
        };
        domina.events.t22797.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t22797.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__3558__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t22797.prototype.domina$events$Event$ = true;
        domina.events.t22797.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t22797.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t22797.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t22797.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t22797.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t22797.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t22797.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22799) {
          var self__ = this;
          var _22799__$1 = this;
          return self__.meta22798;
        };
        domina.events.t22797.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22799, meta22798__$1) {
          var self__ = this;
          var _22799__$1 = this;
          return new domina.events.t22797(self__.evt, self__.f, self__.create_listener_function, meta22798__$1);
        };
        domina.events.__GT_t22797 = function __GT_t22797(evt__$1, f__$1, create_listener_function__$1, meta22798) {
          return new domina.events.t22797(evt__$1, f__$1, create_listener_function__$1, meta22798);
        };
      }
      return new domina.events.t22797(evt, f, create_listener_function, null);
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__4283__auto__ = function(f, t) {
      return function iter__22804(s__22805) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__22805__$1 = s__22805;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__22805__$1);
              if (temp__4126__auto__) {
                var s__22805__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__22805__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__22805__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__22807 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__22806 = 0;
                    while (true) {
                      if (i__22806 < size__4282__auto__) {
                        var node = cljs.core._nth.call(null, c__4281__auto__, i__22806);
                        cljs.core.chunk_append.call(null, b__22807, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__22808 = i__22806 + 1;
                        i__22806 = G__22808;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22807), iter__22804.call(null, cljs.core.chunk_rest.call(null, s__22805__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__22807), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__22805__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__22804.call(null, cljs.core.rest.call(null, s__22805__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__4283__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__22817 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__22818 = null;
    var count__22819 = 0;
    var i__22820 = 0;
    while (true) {
      if (i__22820 < count__22819) {
        var node = cljs.core._nth.call(null, chunk__22818, i__22820);
        goog.events.removeAll(node);
        var G__22825 = seq__22817;
        var G__22826 = chunk__22818;
        var G__22827 = count__22819;
        var G__22828 = i__22820 + 1;
        seq__22817 = G__22825;
        chunk__22818 = G__22826;
        count__22819 = G__22827;
        i__22820 = G__22828;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__22817);
        if (temp__4126__auto__) {
          var seq__22817__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22817__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__22817__$1);
            var G__22829 = cljs.core.chunk_rest.call(null, seq__22817__$1);
            var G__22830 = c__4314__auto__;
            var G__22831 = cljs.core.count.call(null, c__4314__auto__);
            var G__22832 = 0;
            seq__22817 = G__22829;
            chunk__22818 = G__22830;
            count__22819 = G__22831;
            i__22820 = G__22832;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__22817__$1);
            goog.events.removeAll(node);
            var G__22833 = cljs.core.next.call(null, seq__22817__$1);
            var G__22834 = null;
            var G__22835 = 0;
            var G__22836 = 0;
            seq__22817 = G__22833;
            chunk__22818 = G__22834;
            count__22819 = G__22835;
            i__22820 = G__22836;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__22821 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__22822 = null;
    var count__22823 = 0;
    var i__22824 = 0;
    while (true) {
      if (i__22824 < count__22823) {
        var node = cljs.core._nth.call(null, chunk__22822, i__22824);
        goog.events.removeAll(node, type__$1);
        var G__22837 = seq__22821;
        var G__22838 = chunk__22822;
        var G__22839 = count__22823;
        var G__22840 = i__22824 + 1;
        seq__22821 = G__22837;
        chunk__22822 = G__22838;
        count__22823 = G__22839;
        i__22824 = G__22840;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__22821);
        if (temp__4126__auto__) {
          var seq__22821__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22821__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__22821__$1);
            var G__22841 = cljs.core.chunk_rest.call(null, seq__22821__$1);
            var G__22842 = c__4314__auto__;
            var G__22843 = cljs.core.count.call(null, c__4314__auto__);
            var G__22844 = 0;
            seq__22821 = G__22841;
            chunk__22822 = G__22842;
            count__22823 = G__22843;
            i__22824 = G__22844;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__22821__$1);
            goog.events.removeAll(node, type__$1);
            var G__22845 = cljs.core.next.call(null, seq__22821__$1);
            var G__22846 = null;
            var G__22847 = 0;
            var G__22848 = 0;
            seq__22821 = G__22845;
            chunk__22822 = G__22846;
            count__22823 = G__22847;
            i__22824 = G__22848;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__22849 = parent;
        var G__22850 = cljs.core.cons.call(null, parent, so_far);
        n = G__22849;
        so_far = G__22850;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__22859_22867 = cljs.core.seq.call(null, ancestors);
  var chunk__22860_22868 = null;
  var count__22861_22869 = 0;
  var i__22862_22870 = 0;
  while (true) {
    if (i__22862_22870 < count__22861_22869) {
      var n_22871 = cljs.core._nth.call(null, chunk__22860_22868, i__22862_22870);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_22871;
        goog.events.fireListeners(n_22871, evt.type, true, evt);
      }
      var G__22872 = seq__22859_22867;
      var G__22873 = chunk__22860_22868;
      var G__22874 = count__22861_22869;
      var G__22875 = i__22862_22870 + 1;
      seq__22859_22867 = G__22872;
      chunk__22860_22868 = G__22873;
      count__22861_22869 = G__22874;
      i__22862_22870 = G__22875;
      continue;
    } else {
      var temp__4126__auto___22876 = cljs.core.seq.call(null, seq__22859_22867);
      if (temp__4126__auto___22876) {
        var seq__22859_22877__$1 = temp__4126__auto___22876;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22859_22877__$1)) {
          var c__4314__auto___22878 = cljs.core.chunk_first.call(null, seq__22859_22877__$1);
          var G__22879 = cljs.core.chunk_rest.call(null, seq__22859_22877__$1);
          var G__22880 = c__4314__auto___22878;
          var G__22881 = cljs.core.count.call(null, c__4314__auto___22878);
          var G__22882 = 0;
          seq__22859_22867 = G__22879;
          chunk__22860_22868 = G__22880;
          count__22861_22869 = G__22881;
          i__22862_22870 = G__22882;
          continue;
        } else {
          var n_22883 = cljs.core.first.call(null, seq__22859_22877__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_22883;
            goog.events.fireListeners(n_22883, evt.type, true, evt);
          }
          var G__22884 = cljs.core.next.call(null, seq__22859_22877__$1);
          var G__22885 = null;
          var G__22886 = 0;
          var G__22887 = 0;
          seq__22859_22867 = G__22884;
          chunk__22860_22868 = G__22885;
          count__22861_22869 = G__22886;
          i__22862_22870 = G__22887;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__22863_22888 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__22864_22889 = null;
  var count__22865_22890 = 0;
  var i__22866_22891 = 0;
  while (true) {
    if (i__22866_22891 < count__22865_22890) {
      var n_22892 = cljs.core._nth.call(null, chunk__22864_22889, i__22866_22891);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_22892;
        goog.events.fireListeners(n_22892, evt.type, false, evt);
      }
      var G__22893 = seq__22863_22888;
      var G__22894 = chunk__22864_22889;
      var G__22895 = count__22865_22890;
      var G__22896 = i__22866_22891 + 1;
      seq__22863_22888 = G__22893;
      chunk__22864_22889 = G__22894;
      count__22865_22890 = G__22895;
      i__22866_22891 = G__22896;
      continue;
    } else {
      var temp__4126__auto___22897 = cljs.core.seq.call(null, seq__22863_22888);
      if (temp__4126__auto___22897) {
        var seq__22863_22898__$1 = temp__4126__auto___22897;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__22863_22898__$1)) {
          var c__4314__auto___22899 = cljs.core.chunk_first.call(null, seq__22863_22898__$1);
          var G__22900 = cljs.core.chunk_rest.call(null, seq__22863_22898__$1);
          var G__22901 = c__4314__auto___22899;
          var G__22902 = cljs.core.count.call(null, c__4314__auto___22899);
          var G__22903 = 0;
          seq__22863_22888 = G__22900;
          chunk__22864_22889 = G__22901;
          count__22865_22890 = G__22902;
          i__22866_22891 = G__22903;
          continue;
        } else {
          var n_22904 = cljs.core.first.call(null, seq__22863_22898__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_22904;
            goog.events.fireListeners(n_22904, evt.type, false, evt);
          }
          var G__22905 = cljs.core.next.call(null, seq__22863_22898__$1);
          var G__22906 = null;
          var G__22907 = 0;
          var G__22908 = 0;
          seq__22863_22888 = G__22905;
          chunk__22864_22889 = G__22906;
          count__22865_22890 = G__22907;
          i__22866_22891 = G__22908;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3546__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__3546__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__3546__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__22915_22921 = cljs.core.seq.call(null, evt_map);
    var chunk__22916_22922 = null;
    var count__22917_22923 = 0;
    var i__22918_22924 = 0;
    while (true) {
      if (i__22918_22924 < count__22917_22923) {
        var vec__22919_22925 = cljs.core._nth.call(null, chunk__22916_22922, i__22918_22924);
        var k_22926 = cljs.core.nth.call(null, vec__22919_22925, 0, null);
        var v_22927 = cljs.core.nth.call(null, vec__22919_22925, 1, null);
        evt[k_22926] = v_22927;
        var G__22928 = seq__22915_22921;
        var G__22929 = chunk__22916_22922;
        var G__22930 = count__22917_22923;
        var G__22931 = i__22918_22924 + 1;
        seq__22915_22921 = G__22928;
        chunk__22916_22922 = G__22929;
        count__22917_22923 = G__22930;
        i__22918_22924 = G__22931;
        continue;
      } else {
        var temp__4126__auto___22932 = cljs.core.seq.call(null, seq__22915_22921);
        if (temp__4126__auto___22932) {
          var seq__22915_22933__$1 = temp__4126__auto___22932;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__22915_22933__$1)) {
            var c__4314__auto___22934 = cljs.core.chunk_first.call(null, seq__22915_22933__$1);
            var G__22935 = cljs.core.chunk_rest.call(null, seq__22915_22933__$1);
            var G__22936 = c__4314__auto___22934;
            var G__22937 = cljs.core.count.call(null, c__4314__auto___22934);
            var G__22938 = 0;
            seq__22915_22921 = G__22935;
            chunk__22916_22922 = G__22936;
            count__22917_22923 = G__22937;
            i__22918_22924 = G__22938;
            continue;
          } else {
            var vec__22920_22939 = cljs.core.first.call(null, seq__22915_22933__$1);
            var k_22940 = cljs.core.nth.call(null, vec__22920_22939, 0, null);
            var v_22941 = cljs.core.nth.call(null, vec__22920_22939, 1, null);
            evt[k_22940] = v_22941;
            var G__22942 = cljs.core.next.call(null, seq__22915_22933__$1);
            var G__22943 = null;
            var G__22944 = 0;
            var G__22945 = 0;
            seq__22915_22921 = G__22942;
            chunk__22916_22922 = G__22943;
            count__22917_22923 = G__22944;
            i__22918_22924 = G__22945;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__22946_SHARP_) {
      return goog.events.getListeners(p1__22946_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("clustermap.formats.string");
goog.require("cljs.core");
clustermap.formats.string.pluralize = function() {
  var pluralize__delegate = function(n, word, p__17929) {
    var vec__17931 = p__17929;
    var irreg = cljs.core.nth.call(null, vec__17931, 0, null);
    if (n === 1) {
      return word;
    } else {
      var or__3558__auto__ = irreg;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(word) + "s";
      }
    }
  };
  var pluralize = function(n, word, var_args) {
    var p__17929 = null;
    if (arguments.length > 2) {
      p__17929 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return pluralize__delegate.call(this, n, word, p__17929);
  };
  pluralize.cljs$lang$maxFixedArity = 2;
  pluralize.cljs$lang$applyTo = function(arglist__17932) {
    var n = cljs.core.first(arglist__17932);
    arglist__17932 = cljs.core.next(arglist__17932);
    var word = cljs.core.first(arglist__17932);
    var p__17929 = cljs.core.rest(arglist__17932);
    return pluralize__delegate(n, word, p__17929);
  };
  pluralize.cljs$core$IFn$_invoke$arity$variadic = pluralize__delegate;
  return pluralize;
}();
goog.provide("clustermap.components.reset_selection_button");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.reset_selection_button.reset_selection_button = function reset_selection_button(path_fn) {
  return React.DOM.a({"className":"btn btn-link btn-reset", "href":path_fn.call(null, null, null)}, "Reset to UK wide");
};
goog.provide("clustermap.components.map_report");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.string");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.formats.string");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("domina.events");
goog.require("domina.events");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.string");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.map_report.full_report_button = function full_report_button(comm, view_path_fn) {
  return React.DOM.a({"className":"btn btn-link", "href":view_path_fn.call(null, new cljs.core.Keyword(null, "lists", "lists", -884730684))}, React.DOM.i({"className":"icon-lists-sm"}), "Full report");
};
clustermap.components.map_report.summary_stats_report = function summary_stats_report(map_report_data, comm, view_path_fn, p__17111) {
  var map__17133 = p__17111;
  var map__17133__$1 = cljs.core.seq_QMARK_.call(null, map__17133) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17133) : map__17133;
  var summary_stats_data = map__17133__$1;
  var map__17134 = cljs.core.get.call(null, map__17133__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var map__17134__$1 = cljs.core.seq_QMARK_.call(null, map__17134) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17134) : map__17134;
  var data = map__17134__$1;
  var map__17135 = cljs.core.get.call(null, map__17134__$1, new cljs.core.Keyword(null, "!latest_employee_count", "!latest_employee_count", -1445524938));
  var map__17135__$1 = cljs.core.seq_QMARK_.call(null, map__17135) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17135) : map__17135;
  var sum_employee_count = cljs.core.get.call(null, map__17135__$1, new cljs.core.Keyword(null, "sum", "sum", 136986814));
  var count = cljs.core.get.call(null, map__17135__$1, new cljs.core.Keyword(null, "viewfilter_doc_count", "viewfilter_doc_count", 231005032));
  var map__17136 = cljs.core.get.call(null, map__17134__$1, new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", -1853433972));
  var map__17136__$1 = cljs.core.seq_QMARK_.call(null, map__17136) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17136) : map__17136;
  var sum_turnover = cljs.core.get.call(null, map__17136__$1, new cljs.core.Keyword(null, "sum", "sum", 136986814));
  return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "Summary stats")), React.DOM.ul(null, function() {
    var attrs17139 = clustermap.formats.number.fnum.call(null, count, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs17139) ? sablono.interpreter.attributes.call(null, attrs17139) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17139) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Companies")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs17139), React.DOM.small(null, "Companies")], null)));
  }(), function() {
    var attrs17144 = clustermap.formats.money.fmoney.call(null, sum_turnover, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs17144) ? sablono.interpreter.attributes.call(null, attrs17144) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17144) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs17144), React.DOM.small(null, "Total revenue")], null)));
  }(), function() {
    var attrs17149 = clustermap.formats.number.fnum.call(null, sum_employee_count, new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs17149) ? sablono.interpreter.attributes.call(null, attrs17149) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17149) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs17149), React.DOM.small(null, "Total employees")], null)));
  }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, comm, view_path_fn)));
};
clustermap.components.map_report.request_summary_stats = function request_summary_stats(resource, index, index_type, attrs, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.summary_stats, index, index_type, attrs, filter, bounds);
};
clustermap.components.map_report.map_report_component = function map_report_component(p__17154, owner) {
  var map__17174 = p__17154;
  var map__17174__$1 = cljs.core.seq_QMARK_.call(null, map__17174) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17174) : map__17174;
  var data = map__17174__$1;
  var map__17175 = cljs.core.get.call(null, map__17174__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__17175__$1 = cljs.core.seq_QMARK_.call(null, map__17175) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17175) : map__17175;
  var filter_by_view = cljs.core.get.call(null, map__17175__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var filt = cljs.core.get.call(null, map__17175__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var map__17176 = cljs.core.get.call(null, map__17174__$1, new cljs.core.Keyword(null, "map-report", "map-report", -254073588));
  var map__17176__$1 = cljs.core.seq_QMARK_.call(null, map__17176) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17176) : map__17176;
  var map_report = map__17176__$1;
  var map__17177 = cljs.core.get.call(null, map__17176__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__17177__$1 = cljs.core.seq_QMARK_.call(null, map__17177) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17177) : map__17177;
  var controls = map__17177__$1;
  var map__17178 = cljs.core.get.call(null, map__17177__$1, new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251));
  var map__17178__$1 = cljs.core.seq_QMARK_.call(null, map__17178) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17178) : map__17178;
  var summary_stats = map__17178__$1;
  var variables = cljs.core.get.call(null, map__17178__$1, new cljs.core.Keyword(null, "variables", "variables", 1563680814));
  var index_type = cljs.core.get.call(null, map__17178__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
  var index = cljs.core.get.call(null, map__17178__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
  var summary_stats_data = cljs.core.get.call(null, map__17176__$1, new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588));
  var map__17179 = cljs.core.get.call(null, map__17174__$1, new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552));
  var map__17179__$1 = cljs.core.seq_QMARK_.call(null, map__17179) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17179) : map__17179;
  var bounds = cljs.core.get.call(null, map__17179__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.map_report.t17180 !== "undefined") {
  } else {
    clustermap.components.map_report.t17180 = function(filt, index_type, map__17174, owner, map__17177, map__17179, filter_by_view, data, index, p__17154, controls, summary_stats_data, map_report, summary_stats, map_report_component, variables, bounds, map__17176, map__17175, map__17178, meta17181) {
      this.filt = filt;
      this.index_type = index_type;
      this.map__17174 = map__17174;
      this.owner = owner;
      this.map__17177 = map__17177;
      this.map__17179 = map__17179;
      this.filter_by_view = filter_by_view;
      this.data = data;
      this.index = index;
      this.p__17154 = p__17154;
      this.controls = controls;
      this.summary_stats_data = summary_stats_data;
      this.map_report = map_report;
      this.summary_stats = summary_stats;
      this.map_report_component = map_report_component;
      this.variables = variables;
      this.bounds = bounds;
      this.map__17176 = map__17176;
      this.map__17175 = map__17175;
      this.map__17178 = map__17178;
      this.meta17181 = meta17181;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t17180.cljs$lang$type = true;
    clustermap.components.map_report.t17180.cljs$lang$ctorStr = "clustermap.components.map-report/t17180";
    clustermap.components.map_report.t17180.cljs$lang$ctorPrWriter = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.map-report/t17180");
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.t17180.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map_report.t17180.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(_, p__17183, p__17184) {
        var self__ = this;
        var map__17185 = p__17183;
        var map__17185__$1 = cljs.core.seq_QMARK_.call(null, map__17185) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17185) : map__17185;
        var next_data = map__17185__$1;
        var map__17186 = cljs.core.get.call(null, map__17185__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__17186__$1 = cljs.core.seq_QMARK_.call(null, map__17186) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17186) : map__17186;
        var next_filter_by_view = cljs.core.get.call(null, map__17186__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_filt = cljs.core.get.call(null, map__17186__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var map__17187 = cljs.core.get.call(null, map__17185__$1, new cljs.core.Keyword(null, "map-report", "map-report", -254073588));
        var map__17187__$1 = cljs.core.seq_QMARK_.call(null, map__17187) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17187) : map__17187;
        var next_map_report = map__17187__$1;
        var map__17188 = cljs.core.get.call(null, map__17187__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__17188__$1 = cljs.core.seq_QMARK_.call(null, map__17188) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17188) : map__17188;
        var next_controls = map__17188__$1;
        var map__17189 = cljs.core.get.call(null, map__17188__$1, new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251));
        var map__17189__$1 = cljs.core.seq_QMARK_.call(null, map__17189) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17189) : map__17189;
        var next_summary_stats = map__17189__$1;
        var next_index = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
        var next_index_type = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
        var next_variables = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "variables", "variables", 1563680814));
        var next_summary_stats_data = cljs.core.get.call(null, map__17187__$1, new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588));
        var map__17190 = cljs.core.get.call(null, map__17185__$1, new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552));
        var map__17190__$1 = cljs.core.seq_QMARK_.call(null, map__17190) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17190) : map__17190;
        var map_controls = map__17190__$1;
        var next_bounds = cljs.core.get.call(null, map__17190__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var map__17191 = p__17184;
        var map__17191__$1 = cljs.core.seq_QMARK_.call(null, map__17191) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17191) : map__17191;
        var next_state = map__17191__$1;
        var summary_stats_resource = cljs.core.get.call(null, map__17191__$1, new cljs.core.Keyword(null, "summary-stats-resource", "summary-stats-resource", -2107619160));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not.call(null, next_summary_stats_data);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_filt, self__.filt);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var or__3558__auto____$2 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
              if (or__3558__auto____$2) {
                return or__3558__auto____$2;
              } else {
                var and__3546__auto__ = next_filter_by_view;
                if (cljs.core.truth_(and__3546__auto__)) {
                  return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
                } else {
                  return and__3546__auto__;
                }
              }
            }
          }
        }())) {
          return clustermap.components.map_report.request_summary_stats.call(null, summary_stats_resource, next_index, next_index_type, next_variables, next_filt, cljs.core.truth_(next_filter_by_view) ? om.core._value.call(null, next_bounds) : null);
        } else {
          return null;
        }
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.t17180.prototype.om$core$IRenderState$ = true;
    clustermap.components.map_report.t17180.prototype.om$core$IRenderState$render_state$arity$2 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(_, state) {
        var self__ = this;
        var ___$1 = this;
        var map__17192 = om.core.get_shared.call(null, self__.owner);
        var map__17192__$1 = cljs.core.seq_QMARK_.call(null, map__17192) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17192) : map__17192;
        var view_path_fn = cljs.core.get.call(null, map__17192__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502));
        var path_fn = cljs.core.get.call(null, map__17192__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var comm = cljs.core.get.call(null, map__17192__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        return clustermap.components.map_report.summary_stats_report.call(null, self__.map_report, comm, view_path_fn, self__.summary_stats_data);
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.t17180.prototype.om$core$IDidMount$ = true;
    clustermap.components.map_report.t17180.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var ssr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "summary-stats");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "summary-stats-resource", "summary-stats-resource", -2107619160), ssr);
        return clustermap.ordered_resource.retrieve_responses.call(null, ssr, function(ssr, ___$1, map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
          return function(ss) {
            return om.core.update_BANG_.call(null, self__.map_report, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588)], null), ss);
          };
        }(ssr, ___$1, map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds));
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.t17180.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(_17182) {
        var self__ = this;
        var _17182__$1 = this;
        return self__.meta17181;
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.t17180.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function(_17182, meta17181__$1) {
        var self__ = this;
        var _17182__$1 = this;
        return new clustermap.components.map_report.t17180(self__.filt, self__.index_type, self__.map__17174, self__.owner, self__.map__17177, self__.map__17179, self__.filter_by_view, self__.data, self__.index, self__.p__17154, self__.controls, self__.summary_stats_data, self__.map_report, self__.summary_stats, self__.map_report_component, self__.variables, self__.bounds, self__.map__17176, self__.map__17175, self__.map__17178, meta17181__$1);
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
    clustermap.components.map_report.__GT_t17180 = function(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds) {
      return function __GT_t17180(filt__$1, index_type__$1, map__17174__$2, owner__$1, map__17177__$2, map__17179__$2, filter_by_view__$1, data__$1, index__$1, p__17154__$1, controls__$1, summary_stats_data__$1, map_report__$1, summary_stats__$1, map_report_component__$1, variables__$1, bounds__$1, map__17176__$2, map__17175__$2, map__17178__$2, meta17181) {
        return new clustermap.components.map_report.t17180(filt__$1, index_type__$1, map__17174__$2, owner__$1, map__17177__$2, map__17179__$2, filter_by_view__$1, data__$1, index__$1, p__17154__$1, controls__$1, summary_stats_data__$1, map_report__$1, summary_stats__$1, map_report_component__$1, variables__$1, bounds__$1, map__17176__$2, map__17175__$2, map__17178__$2, meta17181);
      };
    }(map__17174, map__17174__$1, data, map__17175, map__17175__$1, filter_by_view, filt, map__17176, map__17176__$1, map_report, map__17177, map__17177__$1, controls, map__17178, map__17178__$1, summary_stats, variables, index_type, index, summary_stats_data, map__17179, map__17179__$1, bounds);
  }
  return new clustermap.components.map_report.t17180(filt, index_type, map__17174__$1, owner, map__17177__$1, map__17179__$1, filter_by_view, data, index, p__17154, controls, summary_stats_data, map_report, summary_stats, map_report_component, variables, bounds, map__17176__$1, map__17175__$1, map__17178__$1, null);
};
goog.provide("clustermap.data.picker");
goog.require("cljs.core");
clustermap.data.picker.pick_variable = function pick_variable(variable, data) {
  return cljs.core.map.call(null, function(d) {
    return cljs.core.get.call(null, d, variable);
  }, data);
};
goog.provide("clustermap.data.colorbrewer");
goog.require("cljs.core");
clustermap.data.colorbrewer.schemes = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "YlGn", "YlGn", 507221536), new cljs.core.Keyword(null, "Spectral", "Spectral", -692376127), new cljs.core.Keyword(null, "Paired", "Paired", -1839552955), new cljs.core.Keyword(null, "Set2", "Set2", -444147418), new cljs.core.Keyword(null, "PuBu", "PuBu", 1525547624), new cljs.core.Keyword(null, "GnBu", "GnBu", 1316073224), new cljs.core.Keyword(null, "RdGy", "RdGy", -1158156279), new cljs.core.Keyword(null, 
"Purples", "Purples", 1309432905), new cljs.core.Keyword(null, "YlOrBr", "YlOrBr", 2072225066), new cljs.core.Keyword(null, "Pastel2", "Pastel2", 705023467), new cljs.core.Keyword(null, "Set3", "Set3", 278046667), new cljs.core.Keyword(null, "Greys", "Greys", -1509640308), new cljs.core.Keyword(null, "PRGn:", "PRGn:", 980503854), new cljs.core.Keyword(null, "Greens", "Greens", -1413705298), new cljs.core.Keyword(null, "BrBG", "BrBG", -297264113), new cljs.core.Keyword(null, "PuOr", "PuOr", -769472497), 
new cljs.core.Keyword(null, "BuPu", "BuPu", -1977891377), new cljs.core.Keyword(null, "RdYlGn", "RdYlGn", -1023051471), new cljs.core.Keyword(null, "Reds", "Reds", -1589610158), new cljs.core.Keyword(null, "Accent", "Accent", 2007651090), new cljs.core.Keyword(null, "Dark2", "Dark2", 1074570035), new cljs.core.Keyword(null, "PiYG", "PiYG", -1162651564), new cljs.core.Keyword(null, "PuR", "PuR", -1518916716), new cljs.core.Keyword(null, "OrRd", "OrRd", 673412084), new cljs.core.Keyword(null, "PuBuGn", 
"PuBuGn", 483376373), new cljs.core.Keyword(null, "YlOrRd", "YlOrRd", -1111058027), new cljs.core.Keyword(null, "BuGn", "BuGn", 985852661), new cljs.core.Keyword(null, "Oranges", "Oranges", 1752319702), new cljs.core.Keyword(null, "RdYlBu", "RdYlBu", 1160830524), new cljs.core.Keyword(null, "Blues", "Blues", -551621539), new cljs.core.Keyword(null, "RdBu", "RdBu", 119670078), new cljs.core.Keyword(null, "RdPu", "RdPu", -1880439170), new cljs.core.Keyword(null, "Pastel1", "Pastel1", 1702813470), new cljs.core.Keyword(null, 
"YlGnBu", "YlGnBu", 269339550), new cljs.core.Keyword(null, "Set1", "Set1", -621848513)], [new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcb9", "#addd8e", "#31a354"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c2e699", "#78c679", "#238443"], null), new cljs.core.Keyword(null, 
"5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#31a354", "#006837"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", 
"#41ab5d", "#238443", "#006837", "#004529"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), 
new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"], null), new cljs.core.PersistentVector(null, 
4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#abdda4", "#2b83ba"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#fc8d59", "#fee08b", "#ffffbf", "#e6f598", "#99d594", "#3288bd"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#99d594"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#fc8d59", "#fee08b", "#e6f598", 
"#99d594", "#3288bd"], null)]), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "12", "12", 1779965095), new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, 
"3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"], null), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99"], 
null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f"], 
null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", 
"#fb9a99"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c"], null)]), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", 
"#8da0cb"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", 
"#b3b3b3"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ece7f2", "#a6bddb", "#2b8cbe"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#bdc9e1", "#74a9cf", "#0570b0"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#bdc9e1", "#74a9cf", "#2b8cbe", "#045a8d"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#2b8cbe", "#045a8d"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", 
"#0570b0", "#034e7b"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#034e7b"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"], null)], 
null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e0f3db", "#a8ddb5", "#43a2ca"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#bae4bc", "#7bccc4", "#2b8cbe"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#bae4bc", "#7bccc4", "#43a2ca", "#0868ac"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#43a2ca", "#0868ac"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", 
"#2b8cbe", "#08589e"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#08589e"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"], null)], 
null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], 
[new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", 
"#f4a582", "#bababa", "#404040"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#ffffff", "#e0e0e0", "#999999", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", 
"#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#ffffff", "#bababa", "#404040"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ef8a62", "#ffffff", "#999999"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#e0e0e0", "#999999", "#4d4d4d"], null)]), 
new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#efedf5", "#bcbddc", "#756bb1"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f2f0f7", "#cbc9e2", "#9e9ac8", "#756bb1", "#54278f"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"], null), new cljs.core.Keyword(null, 
"8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, 
"3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7bc", "#fec44f", "#d95f0e"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fed98e", "#fe9929", "#cc4c02"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fed98e", "#fe9929", "#d95f0e", 
"#993404"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 
8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9"], null), new cljs.core.Keyword(null, "6", 
"6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "12", "12", 1779965095), new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), 
new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"], null), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", 
"#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f0f0f0", "#bdbdbd", "#636363"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#cccccc", "#969696", "#525252"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#cccccc", "#969696", "#636363", "#252525"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#636363", "#252525"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffff", "#f0f0f0", "#d9d9d9", 
"#bdbdbd", "#969696", "#737373", "#525252", "#252525"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", 
"#00441b"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7b3294", "#c2a5cf", "#a6dba0", "#008837"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#af8dc3", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#7fbf7b", 
"#1b7837"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7b3294", "#c2a5cf", "#f7f7f7", 
"#a6dba0", "#008837"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#af8dc3", "#f7f7f7", "#7fbf7b"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e5f5e0", 
"#a1d99b", "#31a354"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#bae4b3", "#74c476", "#238b45"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#bae4b3", "#74c476", "#31a354", "#006d2c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#31a354", "#006d2c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf5", "#e5f5e0", "#c7e9c0", 
"#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", 
"#003c30"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6611a", "#dfc27d", "#80cdc1", "#018571"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#d8b365", "#f6e8c3", "#f5f5f5", "#c7eae5", "#5ab4ac", 
"#01665e"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6611a", "#dfc27d", "#f5f5f5", 
"#80cdc1", "#018571"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d8b365", "#f5f5f5", "#5ab4ac"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#d8b365", "#f6e8c3", "#c7eae5", "#5ab4ac", "#01665e"], null)]), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", 
"#2d004b"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e66101", "#fdb863", "#b2abd2", "#5e3c99"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#f1a340", "#fee0b6", "#f7f7f7", "#d8daeb", "#998ec3", 
"#542788"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e66101", "#fdb863", "#f7f7f7", 
"#b2abd2", "#5e3c99"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1a340", "#f7f7f7", "#998ec3"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#f1a340", "#fee0b6", "#d8daeb", "#998ec3", "#542788"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e0ecf4", 
"#9ebcda", "#8856a7"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b3cde3", "#8c96c6", "#88419d"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b3cde3", "#8c96c6", "#8856a7", "#810f7c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e0ecf4", "#bfd3e6", 
"#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", 
"#006837"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#a6d96a", "#1a9641"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee08b", "#ffffbf", "#d9ef8b", "#91cf60", 
"#1a9850"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", 
"#a6d96a", "#1a9641"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#91cf60"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee08b", "#d9ef8b", "#91cf60", "#1a9850"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee0d2", 
"#fc9272", "#de2d26"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcae91", "#fb6a4a", "#cb181d"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcae91", "#fb6a4a", "#de2d26", "#a50f15"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#de2d26", "#a50f15"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5f0", "#fee0d2", "#fcbba1", 
"#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", 
"#fdc086"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", 
"#666666"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", 
"#e6ab02", "#a6761d"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 
993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d01c8b", "#f1b6da", "#b8e186", "#4dac26"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#e9a3c9", "#fde0ef", "#f7f7f7", "#e6f5d0", "#a1d76a", "#4d9221"], null), new cljs.core.PersistentVector(null, 
8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d01c8b", "#f1b6da", "#f7f7f7", "#b8e186", "#4dac26"], null), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e9a3c9", "#f7f7f7", "#a1d76a"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#e9a3c9", "#fde0ef", "#e6f5d0", "#a1d76a", "#4d9221"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e7e1ef", "#c994c7", "#dd1c77"], null), new cljs.core.Keyword(null, "4", "4", 
-1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d7b5d8", "#df65b0", "#ce1256"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d4b9da", 
"#c994c7", "#df65b0", "#dd1c77", "#980043"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"], null), new cljs.core.Keyword(null, 
"9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee8c8", "#fdbb84", "#e34a33"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 
4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdcc8a", "#fc8d59", "#d7301f"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000"], null), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 
9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ece2f0", "#a6bddb", "#1c9099"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f6eff7", "#bdc9e1", "#67a9cf", "#02818a"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#bdc9e1", "#67a9cf", "#1c9099", "#016c59"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#1c9099", "#016c59"], null), new cljs.core.Keyword(null, "7", "7", 993885869), 
new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffeda0", "#feb24c", "#f03b20"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fecc5c", "#fd8d3c", 
"#e31a1c"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fecc5c", "#fd8d3c", "#f03b20", "#bd0026"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#f03b20", "#bd0026"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", 
"#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e5f5f9", "#99d8c9", "#2ca25f"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b2e2e2", "#66c2a4", "#238b45"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b2e2e2", "#66c2a4", "#2ca25f", "#006d2c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#2ca25f", "#006d2c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", 
"#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee6ce", "#fdae6b", "#e6550d"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdbe85", "#fd8d3c", "#d94701"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdbe85", "#fd8d3c", "#e6550d", "#a63603"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#e6550d", "#a63603"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5eb", 
"#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), 
new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", 
"#313695"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#abd9e9", "#2c7bb6"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee090", "#ffffbf", "#e0f3f8", "#91bfdb", "#4575b4"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"], null), 
new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#91bfdb"], null), new cljs.core.PersistentVector(null, 6, 5, 
cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee090", "#e0f3f8", "#91bfdb", "#4575b4"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#deebf7", "#9ecae1", "#3182bd"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#bdd7e7", "#6baed6", 
"#2171b5"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#3182bd", "#08519c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fbff", 
"#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), 
new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", 
"#053061"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#92c5de", "#0571b0"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#f7f7f7", "#d1e5f0", "#67a9cf", "#2166ac"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"], null), 
new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ef8a62", "#f7f7f7", "#67a9cf"], null), new cljs.core.PersistentVector(null, 6, 5, 
cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#d1e5f0", "#67a9cf", "#2166ac"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fde0dd", "#fa9fb5", "#c51b8a"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fbb4b9", "#f768a1", 
"#ae017e"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fbb4b9", "#f768a1", "#c51b8a", "#7a0177"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#c51b8a", "#7a0177"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7f3", 
"#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", 
"#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8b1", "#7fcdbb", "#2c7fb8"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#a1dab4", "#41b6c4", "#225ea8"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#253494"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#2c7fb8", "#253494"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd9", 
"#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", 
"#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"], null)], null)]);
clustermap.data.colorbrewer.brewer = function brewer(scheme, steps, idx) {
  var steps_key = cljs.core.keyword.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(steps));
  return cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [scheme, steps_key, idx], null));
};
clustermap.data.colorbrewer.colors = function colors(scheme, steps) {
  var steps_key = cljs.core.keyword.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(steps));
  return cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [scheme, steps_key], null));
};
goog.provide("clustermap.data.colorchooser");
goog.require("cljs.core");
goog.require("clustermap.data.colorbrewer");
goog.require("clustermap.data.colorbrewer");
goog.require("clustermap.data.picker");
goog.require("clustermap.data.picker");
clustermap.data.colorchooser.linear_scale = function linear_scale(min, max, steps) {
  var step = (max - min) / steps;
  return cljs.core.map.call(null, function(step) {
    return function(i) {
      return min + i * step;
    };
  }(step), cljs.core.range.call(null, 1, steps));
};
clustermap.data.colorchooser.log_scale = function log_scale(min, max, steps) {
  var translation = 1 - min;
  var log_min = Math.log.call(null, min);
  var log_max = Math.log.call(null, max + translation);
  var log_linear_scale = clustermap.data.colorchooser.linear_scale.call(null, 1, log_max, steps);
  return cljs.core.map.call(null, function(translation, log_min, log_max, log_linear_scale) {
    return function(n) {
      return Math.pow.call(null, Math.E, n) - translation;
    };
  }(translation, log_min, log_max, log_linear_scale), log_linear_scale);
};
clustermap.data.colorchooser.choose_from_scheme = function choose_from_scheme(scheme, thresholds, value) {
  var scheme_thresholds = cljs.core.map.call(null, cljs.core.vector, thresholds, scheme);
  var chosen = cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(scheme_thresholds) {
    return function(p__17898) {
      var vec__17899 = p__17898;
      var t = cljs.core.nth.call(null, vec__17899, 0, null);
      var i = cljs.core.nth.call(null, vec__17899, 1, null);
      return value <= t;
    };
  }(scheme_thresholds), scheme_thresholds)));
  var or__3558__auto__ = chosen;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return cljs.core.last.call(null, scheme);
  }
};
clustermap.data.colorchooser.choose = function choose(color_scheme_spec, scale, key, variable, data) {
  var color_scheme = cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, color_scheme_spec);
  var col_count = cljs.core.count.call(null, color_scheme);
  var values = clustermap.data.picker.pick_variable.call(null, variable, data);
  var min_value = cljs.core.apply.call(null, cljs.core.min, values);
  var max_value = cljs.core.apply.call(null, cljs.core.max, values);
  var thresholds = cljs.core._EQ_.call(null, scale, new cljs.core.Keyword(null, "log", "log", -1595516004)) ? clustermap.data.colorchooser.log_scale.call(null, min_value, max_value, col_count) : clustermap.data.colorchooser.linear_scale.call(null, min_value, max_value, col_count);
  var chooser = cljs.core.partial.call(null, clustermap.data.colorchooser.choose_from_scheme, color_scheme, thresholds);
  var value_colors = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(color_scheme, col_count, values, min_value, max_value, thresholds, chooser) {
    return function(r) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.call(null, r, key), chooser.call(null, cljs.core.get.call(null, r, variable))], null);
    };
  }(color_scheme, col_count, values, min_value, max_value, thresholds, chooser), data));
  var threshold_colors = cljs.core.map.call(null, cljs.core.vector, cljs.core.concat.call(null, thresholds, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max_value], null)), color_scheme);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [threshold_colors, value_colors], null);
};
goog.provide("clustermap.components.filter");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.filter.render = function render(p__16480, owner, state) {
  var map__16568 = p__16480;
  var map__16568__$1 = cljs.core.seq_QMARK_.call(null, map__16568) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16568) : map__16568;
  var bounds = cljs.core.get.call(null, map__16568__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  var filter_spec = cljs.core.get.call(null, map__16568__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  return React.DOM.div({"className":"filter-component"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, React.DOM.h3(null, "Filter"))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "filter by view"), React.DOM.div({"className":"tbl-cell"}, sablono.interpreter.input.call(null, {"type":"checkbox", "name":"filter-by-view", "value":"true", "onChange":function(map__16568, map__16568__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.checked;
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255)], null), val);
    };
  }(map__16568, map__16568__$1, bounds, filter_spec)}))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "age"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__16568, map__16568__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "age", "age", -604307804)], null), function() {
        var pred__16643 = cljs.core._EQ_;
        var expr__16644 = val;
        if (cljs.core.truth_(pred__16643.call(null, "new", expr__16644))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!formation_date", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "2009-01-01"], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__16643.call(null, "old", expr__16644))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!formation_date", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lt", "lt", 421989243), "2009-01-01"], null)], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__16568, map__16568__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"new"}, "\x3c 5 years old"), sablono.interpreter.option.call(null, {"value":"old"}, "\x3e\x3d 5 years old")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "group ?"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__16568, map__16568__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "group", "group", 582596132)], null), function() {
        var pred__16646 = cljs.core._EQ_;
        var expr__16647 = val;
        if (cljs.core.truth_(pred__16646.call(null, "group", expr__16647))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "term", "term", -1817390416), new cljs.core.PersistentArrayMap(null, 1, ["!is_group", true], null)], null);
        } else {
          if (cljs.core.truth_(pred__16646.call(null, "notgroup", expr__16647))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "term", "term", -1817390416), new cljs.core.PersistentArrayMap(null, 1, ["!is_group", false], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__16568, map__16568__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"group"}, "group"), sablono.interpreter.option.call(null, {"value":"notgroup"}, "not group")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "turnover"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__16568, map__16568__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)], null), function() {
        var pred__16649 = cljs.core._EQ_;
        var expr__16650 = val;
        if (cljs.core.truth_(pred__16649.call(null, "low", expr__16650))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!latest_turnover", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lt", "lt", 421989243), 1E6], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__16649.call(null, "high", expr__16650))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!latest_turnover", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), 1E6], null)], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__16568, map__16568__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"low"}, "\x3c \u00a31 million"), sablono.interpreter.option.call(null, {"value":"high"}, "\x3e\x3d \u00a31 million")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "SIC section"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"style":{"width":"100%"}, "onChange":function(map__16568, map__16568__$1, 
  bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(e.target.value);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "sic", "sic", 589884826)], null), function() {
        var pred__16652 = cljs.core._EQ_;
        var expr__16653 = val;
        if (cljs.core.truth_(pred__16652.call(null, "A", expr__16653))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "01110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "03220"], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__16652.call(null, "B", expr__16653))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "05101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "09900"], null)], null)], null);
          } else {
            if (cljs.core.truth_(pred__16652.call(null, "C", expr__16653))) {
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "10110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "33200"], null)], null)], null);
            } else {
              if (cljs.core.truth_(pred__16652.call(null, "D", expr__16653))) {
                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "35110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "35300"], null)], null)], null);
              } else {
                if (cljs.core.truth_(pred__16652.call(null, "E", expr__16653))) {
                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "36000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "39000"], null)], null)], null);
                } else {
                  if (cljs.core.truth_(pred__16652.call(null, "F", expr__16653))) {
                    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "41100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "43999"], null)], null)], null);
                  } else {
                    if (cljs.core.truth_(pred__16652.call(null, "G", expr__16653))) {
                      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "45111", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "47990"], null)], null)], null);
                    } else {
                      if (cljs.core.truth_(pred__16652.call(null, "H", expr__16653))) {
                        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "49100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "53202"], null)], null)], null);
                      } else {
                        if (cljs.core.truth_(pred__16652.call(null, "I", expr__16653))) {
                          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "55100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "56302"], null)], null)], null);
                        } else {
                          if (cljs.core.truth_(pred__16652.call(null, "J", expr__16653))) {
                            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "58110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "63990"], null)], null)], null);
                          } else {
                            if (cljs.core.truth_(pred__16652.call(null, "K", expr__16653))) {
                              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "64110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "66300"], null)], null)], null);
                            } else {
                              if (cljs.core.truth_(pred__16652.call(null, "L", expr__16653))) {
                                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "68100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "68320"], null)], null)], null);
                              } else {
                                if (cljs.core.truth_(pred__16652.call(null, "M", expr__16653))) {
                                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "69101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "75000"], null)], null)], null);
                                } else {
                                  if (cljs.core.truth_(pred__16652.call(null, "N", expr__16653))) {
                                    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "77110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "82990"], null)], null)], null);
                                  } else {
                                    if (cljs.core.truth_(pred__16652.call(null, "O", expr__16653))) {
                                      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "84110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "84300"], null)], null)], null);
                                    } else {
                                      if (cljs.core.truth_(pred__16652.call(null, "P", expr__16653))) {
                                        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "85100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "85600"], null)], null)], null);
                                      } else {
                                        if (cljs.core.truth_(pred__16652.call(null, "Q", expr__16653))) {
                                          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "86101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "88990"], null)], null)], null);
                                        } else {
                                          if (cljs.core.truth_(pred__16652.call(null, "R", expr__16653))) {
                                            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "90010", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "93290"], null)], null)], null);
                                          } else {
                                            if (cljs.core.truth_(pred__16652.call(null, "S", expr__16653))) {
                                              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "94110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "96090"], null)], null)], null);
                                            } else {
                                              if (cljs.core.truth_(pred__16652.call(null, "T", expr__16653))) {
                                                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "97000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "98200"], null)], null)], null);
                                              } else {
                                                if (cljs.core.truth_(pred__16652.call(null, "U", expr__16653))) {
                                                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "99000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "99999"], null)], null)], null);
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }());
    };
  }(map__16568, map__16568__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "all"), sablono.interpreter.option.call(null, {"value":"A"}, "A : Agriculture, Forestry and Fishing"), sablono.interpreter.option.call(null, {"value":"B"}, "B : Mining and Quarrying"), sablono.interpreter.option.call(null, {"value":"C"}, "C : Manufacturing"), sablono.interpreter.option.call(null, {"value":"D"}, "D : Electricity, gas, steam and air conditioning supply"), sablono.interpreter.option.call(null, 
  {"value":"E"}, "E : Water supply, sewerage, waste management and remediation activities"), sablono.interpreter.option.call(null, {"value":"F"}, "F : Construction"), sablono.interpreter.option.call(null, {"value":"G"}, "G : Wholesale and retail trade; repair of motor vehicles and motorcycles"), sablono.interpreter.option.call(null, {"value":"H"}, "H : Transportation and storage"), sablono.interpreter.option.call(null, {"value":"I"}, "I : Accommodation and food service activities"), sablono.interpreter.option.call(null, 
  {"value":"J"}, "J : Information and communication"), sablono.interpreter.option.call(null, {"value":"K"}, "K : Financial and insurance activities"), sablono.interpreter.option.call(null, {"value":"L"}, "L : Real estate activities"), sablono.interpreter.option.call(null, {"value":"M"}, "M : Professional, scientific and technical activities"), sablono.interpreter.option.call(null, {"value":"N"}, "N : Administrative and support service activities"), sablono.interpreter.option.call(null, {"value":"O"}, 
  "O : Public administration and defence; compulsory social security"), sablono.interpreter.option.call(null, {"value":"P"}, "P : Education"), sablono.interpreter.option.call(null, {"value":"Q"}, "Q : Human health and social work activities"), sablono.interpreter.option.call(null, {"value":"R"}, "R : Arts, entertainment and recreation"), sablono.interpreter.option.call(null, {"value":"S"}, "S : Other service activities"), sablono.interpreter.option.call(null, {"value":"T"}, "T : Activities of households as employers"), 
  sablono.interpreter.option.call(null, {"value":"U"}, "U : Activities of extraterritorial organisations and bodies"))))));
};
clustermap.components.filter.filter_component = function filter_component(p__16655, owner) {
  var map__16664 = p__16655;
  var map__16664__$1 = cljs.core.seq_QMARK_.call(null, map__16664) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16664) : map__16664;
  var props = map__16664__$1;
  var map__16665 = cljs.core.get.call(null, map__16664__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__16665__$1 = cljs.core.seq_QMARK_.call(null, map__16665) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16665) : map__16665;
  var filter_spec = map__16665__$1;
  var components = cljs.core.get.call(null, map__16665__$1, new cljs.core.Keyword(null, "components", "components", -1073188942));
  var filter_by_view = cljs.core.get.call(null, map__16665__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var compiled = cljs.core.get.call(null, map__16665__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var bounds = cljs.core.get.call(null, map__16664__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.filter.t16666 !== "undefined") {
  } else {
    clustermap.components.filter.t16666 = function(filter_component, owner, filter_by_view, props, filter_spec, compiled, p__16655, bounds, components, map__16665, map__16664, meta16667) {
      this.filter_component = filter_component;
      this.owner = owner;
      this.filter_by_view = filter_by_view;
      this.props = props;
      this.filter_spec = filter_spec;
      this.compiled = compiled;
      this.p__16655 = p__16655;
      this.bounds = bounds;
      this.components = components;
      this.map__16665 = map__16665;
      this.map__16664 = map__16664;
      this.meta16667 = meta16667;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.filter.t16666.cljs$lang$type = true;
    clustermap.components.filter.t16666.cljs$lang$ctorStr = "clustermap.components.filter/t16666";
    clustermap.components.filter.t16666.cljs$lang$ctorPrWriter = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.filter/t16666");
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t16666.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.filter.t16666.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_, p__16669, next_state) {
        var self__ = this;
        var map__16670 = p__16669;
        var map__16670__$1 = cljs.core.seq_QMARK_.call(null, map__16670) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16670) : map__16670;
        var map__16671 = cljs.core.get.call(null, map__16670__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__16671__$1 = cljs.core.seq_QMARK_.call(null, map__16671) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16671) : map__16671;
        var next_components = cljs.core.get.call(null, map__16671__$1, new cljs.core.Keyword(null, "components", "components", -1073188942));
        var next_filter_by_view = cljs.core.get.call(null, map__16671__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_compiled = cljs.core.get.call(null, map__16671__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var next_bounds = cljs.core.get.call(null, map__16670__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not_EQ_.call(null, next_components, self__.components);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var and__3546__auto__ = next_filter_by_view;
              if (cljs.core.truth_(and__3546__auto__)) {
                return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
              } else {
                return and__3546__auto__;
              }
            }
          }
        }())) {
          return om.core.update_BANG_.call(null, self__.filter_spec, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "compiled", "compiled", 850043082)], null), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, om.core._value, cljs.core.vals.call(null, next_components)))));
        } else {
          return null;
        }
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t16666.prototype.om$core$IRenderState$ = true;
    clustermap.components.filter.t16666.prototype.om$core$IRenderState$render_state$arity$2 = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_, state) {
        var self__ = this;
        var ___$1 = this;
        return clustermap.components.filter.render.call(null, self__.props, self__.owner, state);
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t16666.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_16668) {
        var self__ = this;
        var _16668__$1 = this;
        return self__.meta16667;
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t16666.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_16668, meta16667__$1) {
        var self__ = this;
        var _16668__$1 = this;
        return new clustermap.components.filter.t16666(self__.filter_component, self__.owner, self__.filter_by_view, self__.props, self__.filter_spec, self__.compiled, self__.p__16655, self__.bounds, self__.components, self__.map__16665, self__.map__16664, meta16667__$1);
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.__GT_t16666 = function(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function __GT_t16666(filter_component__$1, owner__$1, filter_by_view__$1, props__$1, filter_spec__$1, compiled__$1, p__16655__$1, bounds__$1, components__$1, map__16665__$2, map__16664__$2, meta16667) {
        return new clustermap.components.filter.t16666(filter_component__$1, owner__$1, filter_by_view__$1, props__$1, filter_spec__$1, compiled__$1, p__16655__$1, bounds__$1, components__$1, map__16665__$2, map__16664__$2, meta16667);
      };
    }(map__16664, map__16664__$1, props, map__16665, map__16665__$1, filter_spec, components, filter_by_view, compiled, bounds);
  }
  return new clustermap.components.filter.t16666(filter_component, owner, filter_by_view, props, filter_spec, compiled, p__16655, bounds, components, map__16665__$1, map__16664__$1, null);
};
goog.provide("clustermap.components.mount");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.mount.make_sequential = function make_sequential(v) {
  if (v == null) {
    return null;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, v)) {
      return v;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null);
    }
  }
};
clustermap.components.mount.extract_paths_STAR_ = function extract_paths_STAR_(path, paths, cursor) {
  var _STAR_read_enabled_STAR_17206 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = path;
      if (cljs.core.truth_(and__3546__auto__)) {
        return paths;
      } else {
        return and__3546__auto__;
      }
    }())) {
      throw cljs.core.ex_info.call(null, cljs.core.print_str.call(null, "can't give both :path and :paths : ", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null));
    } else {
      if (cljs.core.truth_(path)) {
        return cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path));
      } else {
        if (paths == null) {
          return cursor;
        } else {
          if (cljs.core.sequential_QMARK_.call(null, paths)) {
            var iter__4283__auto__ = function(_STAR_read_enabled_STAR_17206) {
              return function iter__17207(s__17208) {
                return new cljs.core.LazySeq(null, function(_STAR_read_enabled_STAR_17206) {
                  return function() {
                    var s__17208__$1 = s__17208;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__17208__$1);
                      if (temp__4126__auto__) {
                        var s__17208__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__17208__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17208__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__17210 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__17209 = 0;
                            while (true) {
                              if (i__17209 < size__4282__auto__) {
                                var path__$1 = cljs.core._nth.call(null, c__4281__auto__, i__17209);
                                cljs.core.chunk_append.call(null, b__17210, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1)));
                                var G__17219 = i__17209 + 1;
                                i__17209 = G__17219;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17210), iter__17207.call(null, cljs.core.chunk_rest.call(null, s__17208__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17210), null);
                          }
                        } else {
                          var path__$1 = cljs.core.first.call(null, s__17208__$2);
                          return cljs.core.cons.call(null, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1)), iter__17207.call(null, cljs.core.rest.call(null, s__17208__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(_STAR_read_enabled_STAR_17206), null, null);
              };
            }(_STAR_read_enabled_STAR_17206);
            return iter__4283__auto__.call(null, paths);
          } else {
            if (cljs.core.map_QMARK_.call(null, paths)) {
              return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                var iter__4283__auto__ = function(_STAR_read_enabled_STAR_17206) {
                  return function iter__17211(s__17212) {
                    return new cljs.core.LazySeq(null, function(_STAR_read_enabled_STAR_17206) {
                      return function() {
                        var s__17212__$1 = s__17212;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__17212__$1);
                          if (temp__4126__auto__) {
                            var s__17212__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__17212__$2)) {
                              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__17212__$2);
                              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                              var b__17214 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                              if (function() {
                                var i__17213 = 0;
                                while (true) {
                                  if (i__17213 < size__4282__auto__) {
                                    var vec__17217 = cljs.core._nth.call(null, c__4281__auto__, i__17213);
                                    var key = cljs.core.nth.call(null, vec__17217, 0, null);
                                    var path__$1 = cljs.core.nth.call(null, vec__17217, 1, null);
                                    cljs.core.chunk_append.call(null, b__17214, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1))], null));
                                    var G__17220 = i__17213 + 1;
                                    i__17213 = G__17220;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17214), iter__17211.call(null, cljs.core.chunk_rest.call(null, s__17212__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17214), null);
                              }
                            } else {
                              var vec__17218 = cljs.core.first.call(null, s__17212__$2);
                              var key = cljs.core.nth.call(null, vec__17218, 0, null);
                              var path__$1 = cljs.core.nth.call(null, vec__17218, 1, null);
                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1))], null), iter__17211.call(null, cljs.core.rest.call(null, s__17212__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(_STAR_read_enabled_STAR_17206), null, null);
                  };
                }(_STAR_read_enabled_STAR_17206);
                return iter__4283__auto__.call(null, paths);
              }());
            } else {
              throw cljs.core.ex_info.call(null, cljs.core.print_str.call(null, "what are those paths ? :", paths), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null));
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17206;
  }
};
clustermap.components.mount.extract_paths = function extract_paths(cname, path, paths, cursor) {
  var x = clustermap.components.mount.extract_paths_STAR_.call(null, path, paths, cursor);
  if (cljs.core.truth_(x)) {
    return x;
  } else {
    console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["WARNING: nil cursor", cname, path, paths], null)));
    return null;
  }
};
clustermap.components.mount.mount = function() {
  var mount__delegate = function(cname, f, value, p__17221) {
    var map__17223 = p__17221;
    var map__17223__$1 = cljs.core.seq_QMARK_.call(null, map__17223) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17223) : map__17223;
    var options = map__17223__$1;
    var paths = cljs.core.get.call(null, map__17223__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
    var path = cljs.core.get.call(null, map__17223__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
    var target = cljs.core.get.call(null, map__17223__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
    var target__$1 = typeof target === "string" || target instanceof cljs.core.Keyword ? document.getElementById(cljs.core.name.call(null, target)) : target;
    var cursor_fn = cljs.core.partial.call(null, clustermap.components.mount.extract_paths, cname, path, paths);
    var options__$1 = cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "paths", "paths", -1807389588)), new cljs.core.Keyword(null, "target", "target", 253001721), target__$1), new cljs.core.Keyword(null, "fn", "fn", -1175266204), cursor_fn);
    return om.core.root.call(null, f, value, options__$1);
  };
  var mount = function(cname, f, value, var_args) {
    var p__17221 = null;
    if (arguments.length > 3) {
      p__17221 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return mount__delegate.call(this, cname, f, value, p__17221);
  };
  mount.cljs$lang$maxFixedArity = 3;
  mount.cljs$lang$applyTo = function(arglist__17224) {
    var cname = cljs.core.first(arglist__17224);
    arglist__17224 = cljs.core.next(arglist__17224);
    var f = cljs.core.first(arglist__17224);
    arglist__17224 = cljs.core.next(arglist__17224);
    var value = cljs.core.first(arglist__17224);
    var p__17221 = cljs.core.rest(arglist__17224);
    return mount__delegate(cname, f, value, p__17221);
  };
  mount.cljs$core$IFn$_invoke$arity$variadic = mount__delegate;
  return mount;
}();
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj22366 = {};
  return obj22366;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = secretary.core.route_matches[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = secretary.core.route_matches["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj22368 = {};
  return obj22368;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = secretary.core.route_value[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = secretary.core.route_value["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj22370 = {};
  return obj22370;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = secretary.core.render_route[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = secretary.core.render_route["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = secretary.core.render_route[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = secretary.core.render_route["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("encode-pair", function(method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__, hierarchy__4428__auto__) {
    return function(p__22371) {
      var vec__22372 = p__22371;
      var k = cljs.core.nth.call(null, vec__22372, 0, null);
      var v = cljs.core.nth.call(null, vec__22372, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
      } else {
        if (function() {
          var or__3558__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var G__22374 = v;
            if (G__22374) {
              var bit__4208__auto__ = G__22374.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4208__auto__ || G__22374.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__22374.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__22374);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__22374);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
        } else {
          return null;
        }
      }
    };
  }(method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__, hierarchy__4428__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[]";
  };
  var key_index__2 = function(k, index) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "]";
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__22375) {
  var vec__22376 = p__22375;
  var k = cljs.core.nth.call(null, vec__22376, 0, null);
  var v = cljs.core.nth.call(null, vec__22376, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__22376, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__22376, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__22377) {
  var vec__22378 = p__22377;
  var k = cljs.core.nth.call(null, vec__22378, 0, null);
  var v = cljs.core.nth.call(null, vec__22378, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__22378, k, v) {
    return function(p__22379) {
      var vec__22380 = p__22379;
      var ik = cljs.core.nth.call(null, vec__22380, 0, null);
      var iv = cljs.core.nth.call(null, vec__22380, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__22378, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__22381) {
  var vec__22382 = p__22381;
  var k = cljs.core.nth.call(null, vec__22382, 0, null);
  var v = cljs.core.nth.call(null, vec__22382, 1, null);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.encode.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)));
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__22385) {
      var vec__22386 = p__22385;
      var _ = cljs.core.nth.call(null, vec__22386, 0, null);
      var part = cljs.core.nth.call(null, vec__22386, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__22388 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__22388, 0, null);
  var key = cljs.core.nth.call(null, vec__22388, 1, null);
  var path = cljs.core.nth.call(null, vec__22388, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__22390 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__22390, 0, null);
      var v = cljs.core.nth.call(null, vec__22390, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + "\\" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__22394) {
    var vec__22395 = p__22394;
    var re = cljs.core.nth.call(null, vec__22395, 0, null);
    var action = cljs.core.nth.call(null, vec__22395, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__22396 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__22396, 0, null);
      var c = cljs.core.nth.call(null, vec__22396, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__22399 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__22399, 0, null);
      var vec__22400 = cljs.core.nth.call(null, vec__22399, 1, null);
      var r = cljs.core.nth.call(null, vec__22400, 0, null);
      var p = cljs.core.nth.call(null, vec__22400, 1, null);
      var G__22401 = s__$2;
      var G__22402 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r);
      var G__22403 = cljs.core.conj.call(null, params, p);
      s__$1 = G__22401;
      pattern = G__22402;
      params = G__22403;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + "$"), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__22409 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__22409, 0, null);
  var params = cljs.core.nth.call(null, vec__22409, 1, null);
  if (typeof secretary.core.t22410 !== "undefined") {
  } else {
    secretary.core.t22410 = function(params, re, vec__22409, clauses, orig_route, compile_route, meta22411) {
      this.params = params;
      this.re = re;
      this.vec__22409 = vec__22409;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta22411 = meta22411;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t22410.cljs$lang$type = true;
    secretary.core.t22410.cljs$lang$ctorStr = "secretary.core/t22410";
    secretary.core.t22410.cljs$lang$ctorPrWriter = function(clauses, vec__22409, re, params) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "secretary.core/t22410");
      };
    }(clauses, vec__22409, re, params);
    secretary.core.t22410.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t22410.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__22409, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__22413 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__22413, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__22413, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__22409, re, params);
    secretary.core.t22410.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t22410.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__22409, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__22409, re, params);
    secretary.core.t22410.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__22409, re, params) {
      return function(_22412) {
        var self__ = this;
        var _22412__$1 = this;
        return self__.meta22411;
      };
    }(clauses, vec__22409, re, params);
    secretary.core.t22410.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__22409, re, params) {
      return function(_22412, meta22411__$1) {
        var self__ = this;
        var _22412__$1 = this;
        return new secretary.core.t22410(self__.params, self__.re, self__.vec__22409, self__.clauses, self__.orig_route, self__.compile_route, meta22411__$1);
      };
    }(clauses, vec__22409, re, params);
    secretary.core.__GT_t22410 = function(clauses, vec__22409, re, params) {
      return function __GT_t22410(params__$1, re__$1, vec__22409__$1, clauses__$1, orig_route__$1, compile_route__$1, meta22411) {
        return new secretary.core.t22410(params__$1, re__$1, vec__22409__$1, clauses__$1, orig_route__$1, compile_route__$1, meta22411);
      };
    }(clauses, vec__22409, re, params);
  }
  return new secretary.core.t22410(params, re, vec__22409, clauses, orig_route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__22415 = obj;
      if (G__22415) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__22415.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__22415.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__22415);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__22415);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__22416) {
    var obj = cljs.core.first(arglist__22416);
    var args = cljs.core.rest(arglist__22416);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__22419) {
      var vec__22420 = p__22419;
      var x = cljs.core.nth.call(null, vec__22420, 0, null);
      var _ = cljs.core.nth.call(null, vec__22420, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__22423) {
    var vec__22424 = p__22423;
    var compiled_route = cljs.core.nth.call(null, vec__22424, 0, null);
    var action = cljs.core.nth.call(null, vec__22424, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function prefix() {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)));
};
secretary.core.uri_without_prefix = function uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.prefix.call(null))), "");
};
secretary.core.uri_with_leading_slash = function uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(uri);
  }
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__22427 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__22427, 0, null);
  var query_string = cljs.core.nth.call(null, vec__22427, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__22428 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__22428__$1 = cljs.core.seq_QMARK_.call(null, map__22428) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22428) : map__22428;
  var params = cljs.core.get.call(null, map__22428__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action = cljs.core.get.call(null, map__22428__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var action__$1 = function() {
    var or__3558__auto__ = action;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__22431) {
    var vec__22432 = p__22431;
    var key = cljs.core.nth.call(null, vec__22432, 0, null);
    var validation = cljs.core.nth.call(null, vec__22432, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__22433, route) {
  var vec__22434 = p__22433;
  var route_string = cljs.core.nth.call(null, vec__22434, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__22434, 1);
  var vec__22435 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__22435, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__22435, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (secretary.core.params_valid_QMARK_.call(null, params, validations__$1)) {
    return params;
  } else {
    return null;
  }
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__22436 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__22436, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__22436, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__22437) {
  var vec__22438 = p__22437;
  var route_string = cljs.core.nth.call(null, vec__22438, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__22438, 1);
  var vec__22439 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__22439, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__22439, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__22440, params) {
  var vec__22441 = p__22440;
  var route_string = cljs.core.nth.call(null, vec__22441, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__22441, 1);
  var vec__22442 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__22442, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__22442, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__22443 = params;
  var map__22443__$1 = cljs.core.seq_QMARK_.call(null, map__22443) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22443) : map__22443;
  var m = map__22443__$1;
  var query_params = cljs.core.get.call(null, map__22443__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__22443, map__22443__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__22443, map__22443__$1, m, query_params, a));
  var path__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path);
  var temp__4124__auto__ = function() {
    var and__3546__auto__ = query_params;
    if (cljs.core.truth_(and__3546__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3546__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var query_string = temp__4124__auto__;
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path__$1) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_string);
  } else {
    return path__$1;
  }
};
goog.provide("clustermap.components.color_scale");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.formats.color");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.color");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.color_scale.color_scale_component = function color_scale_component(threshold_colors, owner) {
  if (typeof clustermap.components.color_scale.t16468 !== "undefined") {
  } else {
    clustermap.components.color_scale.t16468 = function(owner, threshold_colors, color_scale_component, meta16469) {
      this.owner = owner;
      this.threshold_colors = threshold_colors;
      this.color_scale_component = color_scale_component;
      this.meta16469 = meta16469;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.color_scale.t16468.cljs$lang$type = true;
    clustermap.components.color_scale.t16468.cljs$lang$ctorStr = "clustermap.components.color-scale/t16468";
    clustermap.components.color_scale.t16468.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.color-scale/t16468");
    };
    clustermap.components.color_scale.t16468.prototype.om$core$IRender$ = true;
    clustermap.components.color_scale.t16468.prototype.om$core$IRender$render$arity$1 = function(this__9504__auto__) {
      var self__ = this;
      var this__9504__auto____$1 = this;
      return React.DOM.div({"className":"color-scale"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, cljs.core.into_array.call(null, function() {
        var iter__4283__auto__ = function(this__9504__auto____$1) {
          return function iter__16471(s__16472) {
            return new cljs.core.LazySeq(null, function(this__9504__auto____$1) {
              return function() {
                var s__16472__$1 = s__16472;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__16472__$1);
                  if (temp__4126__auto__) {
                    var s__16472__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__16472__$2)) {
                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__16472__$2);
                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                      var b__16474 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                      if (function() {
                        var i__16473 = 0;
                        while (true) {
                          if (i__16473 < size__4282__auto__) {
                            var vec__16477 = cljs.core._nth.call(null, c__4281__auto__, i__16473);
                            var threshold = cljs.core.nth.call(null, vec__16477, 0, null);
                            var color = cljs.core.nth.call(null, vec__16477, 1, null);
                            cljs.core.chunk_append.call(null, b__16474, React.DOM.div({"className":"tbl-cell", "style":{"backgroundColor":color, "color":clustermap.formats.color.stand_out_color.call(null, color)}}, sablono.interpreter.interpret.call(null, clustermap.formats.money.readable.call(null, threshold, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "", new cljs.core.Keyword(null, "default", "default", -1987822328), ""))));
                            var G__16479 = i__16473 + 1;
                            i__16473 = G__16479;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16474), iter__16471.call(null, cljs.core.chunk_rest.call(null, s__16472__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16474), null);
                      }
                    } else {
                      var vec__16478 = cljs.core.first.call(null, s__16472__$2);
                      var threshold = cljs.core.nth.call(null, vec__16478, 0, null);
                      var color = cljs.core.nth.call(null, vec__16478, 1, null);
                      return cljs.core.cons.call(null, React.DOM.div({"className":"tbl-cell", "style":{"backgroundColor":color, "color":clustermap.formats.color.stand_out_color.call(null, color)}}, sablono.interpreter.interpret.call(null, clustermap.formats.money.readable.call(null, threshold, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "", new cljs.core.Keyword(null, "default", "default", -1987822328), ""))), iter__16471.call(null, 
                      cljs.core.rest.call(null, s__16472__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(this__9504__auto____$1), null, null);
          };
        }(this__9504__auto____$1);
        return iter__4283__auto__.call(null, self__.threshold_colors);
      }()))));
    };
    clustermap.components.color_scale.t16468.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16470) {
      var self__ = this;
      var _16470__$1 = this;
      return self__.meta16469;
    };
    clustermap.components.color_scale.t16468.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16470, meta16469__$1) {
      var self__ = this;
      var _16470__$1 = this;
      return new clustermap.components.color_scale.t16468(self__.owner, self__.threshold_colors, self__.color_scale_component, meta16469__$1);
    };
    clustermap.components.color_scale.__GT_t16468 = function __GT_t16468(owner__$1, threshold_colors__$1, color_scale_component__$1, meta16469) {
      return new clustermap.components.color_scale.t16468(owner__$1, threshold_colors__$1, color_scale_component__$1, meta16469);
    };
  }
  return new clustermap.components.color_scale.t16468(owner, threshold_colors, color_scale_component, null);
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return-1;
    }
    var l = tret.length;
    if (cl == l && ci >= 0 && cl >= 0) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (;te;te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx;
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond);
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return!!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw "";
          }
          var r = root[qsa](tq);
          if (goog.userAgent.IE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx;
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te;te = arr[x];x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (goog.userAgent.IE && arr.commentStrip) {
        try {
          for (var x = 1, te;te = arr[x];x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te;te = arr[x];x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, root) {
    if (!query) {
      return[];
    }
    if (query.constructor == Array) {
      return(query);
    }
    if (!goog.isString(query)) {
      return[query];
    }
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return[];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr);
  };
  var sel__2 = function(base, expr) {
    if (typeof domina.css.t24355 !== "undefined") {
    } else {
      domina.css.t24355 = function(expr, base, sel, meta24356) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta24356 = meta24356;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.css.t24355.cljs$lang$type = true;
      domina.css.t24355.cljs$lang$ctorStr = "domina.css/t24355";
      domina.css.t24355.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "domina.css/t24355");
      };
      domina.css.t24355.prototype.domina$DomContent$ = true;
      domina.css.t24355.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__24350_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__24350_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base));
      };
      domina.css.t24355.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__24351_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__24351_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base))));
      };
      domina.css.t24355.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24357) {
        var self__ = this;
        var _24357__$1 = this;
        return self__.meta24356;
      };
      domina.css.t24355.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24357, meta24356__$1) {
        var self__ = this;
        var _24357__$1 = this;
        return new domina.css.t24355(self__.expr, self__.base, self__.sel, meta24356__$1);
      };
      domina.css.__GT_t24355 = function __GT_t24355(expr__$1, base__$1, sel__$1, meta24356) {
        return new domina.css.t24355(expr__$1, base__$1, sel__$1, meta24356);
      };
    }
    return new domina.css.t24355(expr, base, sel, null);
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel;
}();
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3546__auto__)) {
      return doc.setProperty;
    } else {
      return and__3546__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__24810 = i + 1;
        var G__24811 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__24810;
        acc = G__24811;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t24815 !== "undefined") {
    } else {
      domina.xpath.t24815 = function(expr, base, xpath, meta24816) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta24816 = meta24816;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t24815.cljs$lang$type = true;
      domina.xpath.t24815.cljs$lang$ctorStr = "domina.xpath/t24815";
      domina.xpath.t24815.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "domina.xpath/t24815");
      };
      domina.xpath.t24815.prototype.domina$DomContent$ = true;
      domina.xpath.t24815.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t24815.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t24815.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24817) {
        var self__ = this;
        var _24817__$1 = this;
        return self__.meta24816;
      };
      domina.xpath.t24815.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24817, meta24816__$1) {
        var self__ = this;
        var _24817__$1 = this;
        return new domina.xpath.t24815(self__.expr, self__.base, self__.xpath, meta24816__$1);
      };
      domina.xpath.__GT_t24815 = function __GT_t24815(expr__$1, base__$1, xpath__$1, meta24816) {
        return new domina.xpath.t24815(expr__$1, base__$1, xpath__$1, meta24816);
      };
    }
    return new domina.xpath.t24815(expr, base, xpath, null);
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("clustermap.nav");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("domina.css");
goog.require("domina");
goog.require("jayq.core");
goog.require("domina");
goog.require("cljs.core.async");
goog.require("domina.events");
goog.require("domina.events");
goog.require("jayq.core");
goog.require("domina.css");
goog.require("domina.xpath");
goog.require("domina.xpath");
clustermap.nav.init_bootstrap_tooltips = function init_bootstrap_tooltips() {
  return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']").tooltip();
};
clustermap.nav.handle_toggle_nav_search = function handle_toggle_nav_search() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav .search \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(e) {
    var target = domina.events.target.call(null, e);
    var parent = domina.xpath.xpath.call(null, target, "..");
    domina.events.prevent_default.call(null, e);
    domina.toggle_class_BANG_.call(null, parent, "open");
    return jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, domina.css.sel.call(null, "#search")))).toggle();
  });
};
clustermap.nav.handle_hide_show_map_report = function handle_hide_show_map_report() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#map-report \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(e) {
    var target = domina.events.target.call(null, e);
    var mr = domina.css.sel.call(null, "#map-report");
    domina.events.prevent_default.call(null, e);
    if (cljs.core.truth_(domina.has_class_QMARK_.call(null, mr, "open"))) {
      domina.remove_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "-270px"], null), 400);
    } else {
      domina.add_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "0px"], null), 400);
    }
  });
};
clustermap.nav.body_view_classes = new cljs.core.PersistentArrayMap(null, 2, ["map", "view-map", "lists", "view-lists"], null);
clustermap.nav.change_view = function change_view(view) {
  if (cljs.core.truth_(cljs.core.get.call(null, clustermap.nav.body_view_classes, view))) {
  } else {
    throw new Error("unknown view: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view));
  }
  var body = domina.css.sel.call(null, "body");
  var target_selector = "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view);
  var target_li = domina.css.sel.call(null, target_selector);
  var ul = domina.xpath.xpath.call(null, target_li, "..");
  var active_li = domina.css.sel.call(null, ul, "\x3e .active");
  domina.remove_class_BANG_.call(null, active_li, "active");
  domina.add_class_BANG_.call(null, target_li, "active");
  var seq__17951_17957 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__17952_17958 = null;
  var count__17953_17959 = 0;
  var i__17954_17960 = 0;
  while (true) {
    if (i__17954_17960 < count__17953_17959) {
      var vec__17955_17961 = cljs.core._nth.call(null, chunk__17952_17958, i__17954_17960);
      var v_17962 = cljs.core.nth.call(null, vec__17955_17961, 0, null);
      var body_class_17963 = cljs.core.nth.call(null, vec__17955_17961, 1, null);
      if (cljs.core._EQ_.call(null, v_17962, view)) {
        domina.add_class_BANG_.call(null, body, body_class_17963);
      } else {
        domina.remove_class_BANG_.call(null, body, body_class_17963);
      }
      var G__17964 = seq__17951_17957;
      var G__17965 = chunk__17952_17958;
      var G__17966 = count__17953_17959;
      var G__17967 = i__17954_17960 + 1;
      seq__17951_17957 = G__17964;
      chunk__17952_17958 = G__17965;
      count__17953_17959 = G__17966;
      i__17954_17960 = G__17967;
      continue;
    } else {
      var temp__4126__auto___17968 = cljs.core.seq.call(null, seq__17951_17957);
      if (temp__4126__auto___17968) {
        var seq__17951_17969__$1 = temp__4126__auto___17968;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17951_17969__$1)) {
          var c__4314__auto___17970 = cljs.core.chunk_first.call(null, seq__17951_17969__$1);
          var G__17971 = cljs.core.chunk_rest.call(null, seq__17951_17969__$1);
          var G__17972 = c__4314__auto___17970;
          var G__17973 = cljs.core.count.call(null, c__4314__auto___17970);
          var G__17974 = 0;
          seq__17951_17957 = G__17971;
          chunk__17952_17958 = G__17972;
          count__17953_17959 = G__17973;
          i__17954_17960 = G__17974;
          continue;
        } else {
          var vec__17956_17975 = cljs.core.first.call(null, seq__17951_17969__$1);
          var v_17976 = cljs.core.nth.call(null, vec__17956_17975, 0, null);
          var body_class_17977 = cljs.core.nth.call(null, vec__17956_17975, 1, null);
          if (cljs.core._EQ_.call(null, v_17976, view)) {
            domina.add_class_BANG_.call(null, body, body_class_17977);
          } else {
            domina.remove_class_BANG_.call(null, body, body_class_17977);
          }
          var G__17978 = cljs.core.next.call(null, seq__17951_17969__$1);
          var G__17979 = null;
          var G__17980 = 0;
          var G__17981 = 0;
          seq__17951_17957 = G__17978;
          chunk__17952_17958 = G__17979;
          count__17953_17959 = G__17980;
          i__17954_17960 = G__17981;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return jayq.core.$.call(null, document).trigger("clustermap-change-view");
};
clustermap.nav.handle_view_switches = function handle_view_switches(comm) {
  var seq__17988 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__17989 = null;
  var count__17990 = 0;
  var i__17991 = 0;
  while (true) {
    if (i__17991 < count__17990) {
      var vec__17992 = cljs.core._nth.call(null, chunk__17989, i__17991);
      var v = cljs.core.nth.call(null, vec__17992, 0, null);
      var _ = cljs.core.nth.call(null, vec__17992, 1, null);
      domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__17988, chunk__17989, count__17990, i__17991, vec__17992, v, _) {
        return function(e) {
          domina.events.prevent_default.call(null, e);
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), v], null));
        };
      }(seq__17988, chunk__17989, count__17990, i__17991, vec__17992, v, _));
      var G__17994 = seq__17988;
      var G__17995 = chunk__17989;
      var G__17996 = count__17990;
      var G__17997 = i__17991 + 1;
      seq__17988 = G__17994;
      chunk__17989 = G__17995;
      count__17990 = G__17996;
      i__17991 = G__17997;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__17988);
      if (temp__4126__auto__) {
        var seq__17988__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17988__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__17988__$1);
          var G__17998 = cljs.core.chunk_rest.call(null, seq__17988__$1);
          var G__17999 = c__4314__auto__;
          var G__18000 = cljs.core.count.call(null, c__4314__auto__);
          var G__18001 = 0;
          seq__17988 = G__17998;
          chunk__17989 = G__17999;
          count__17990 = G__18000;
          i__17991 = G__18001;
          continue;
        } else {
          var vec__17993 = cljs.core.first.call(null, seq__17988__$1);
          var v = cljs.core.nth.call(null, vec__17993, 0, null);
          var _ = cljs.core.nth.call(null, vec__17993, 1, null);
          domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__17988, chunk__17989, count__17990, i__17991, vec__17993, v, _, seq__17988__$1, temp__4126__auto__) {
            return function(e) {
              domina.events.prevent_default.call(null, e);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), v], null));
            };
          }(seq__17988, chunk__17989, count__17990, i__17991, vec__17993, v, _, seq__17988__$1, temp__4126__auto__));
          var G__18002 = cljs.core.next.call(null, seq__17988__$1);
          var G__18003 = null;
          var G__18004 = 0;
          var G__18005 = 0;
          seq__17988 = G__18002;
          chunk__17989 = G__18003;
          count__17990 = G__18004;
          i__17991 = G__18005;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.nav.init = function init(comm) {
  clustermap.nav.init_bootstrap_tooltips.call(null);
  clustermap.nav.handle_toggle_nav_search.call(null);
  clustermap.nav.handle_hide_show_map_report.call(null);
  return clustermap.nav.handle_view_switches.call(null, comm);
};
goog.provide("clustermap.components.page_title");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.page_title.describe_type = function describe_type(type) {
  var pred__17228 = cljs.core._EQ_;
  var expr__17229 = type;
  if (cljs.core.truth_(pred__17228.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__17229))) {
    return "Investor-backed company";
  } else {
    if (cljs.core.truth_(pred__17228.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__17229))) {
      return "Investor";
    } else {
      if (cljs.core.truth_(pred__17228.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__17229))) {
        return "Constituency";
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__17229));
      }
    }
  }
};
clustermap.components.page_title.page_title_component = function page_title_component(p__17231, owner) {
  var map__17242 = p__17231;
  var map__17242__$1 = cljs.core.seq_QMARK_.call(null, map__17242) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17242) : map__17242;
  var selection = map__17242__$1;
  var value = cljs.core.get.call(null, map__17242__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var type = cljs.core.get.call(null, map__17242__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var map__17243 = om.core.get_shared.call(null, owner);
  var map__17243__$1 = cljs.core.seq_QMARK_.call(null, map__17243) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17243) : map__17243;
  var view_path_fn = cljs.core.get.call(null, map__17243__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502));
  var path_fn = cljs.core.get.call(null, map__17243__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__17243__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var type_descr = function() {
    var G__17244 = selection;
    var G__17244__$1 = G__17244 == null ? null : (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__17244);
    var G__17244__$2 = G__17244__$1 == null ? null : clustermap.components.page_title.describe_type.call(null, G__17244__$1);
    return G__17244__$2;
  }();
  var name = function() {
    var G__17245 = selection;
    var G__17245__$1 = G__17245 == null ? null : (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(G__17245);
    var G__17245__$2 = G__17245__$1 == null ? null : (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__17245__$1);
    return G__17245__$2;
  }();
  var url = function() {
    var G__17246 = selection;
    var G__17246__$1 = G__17246 == null ? null : (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(G__17246);
    var G__17246__$2 = G__17246__$1 == null ? null : (new cljs.core.Keyword(null, "web_url", "web_url", 2107881046)).cljs$core$IFn$_invoke$arity$1(G__17246__$1);
    return G__17246__$2;
  }();
  if (typeof clustermap.components.page_title.t17247 !== "undefined") {
  } else {
    clustermap.components.page_title.t17247 = function(selection, owner, path_fn, type_descr, map__17243, value, name, map__17242, comm, page_title_component, type, view_path_fn, p__17231, url, meta17248) {
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.type_descr = type_descr;
      this.map__17243 = map__17243;
      this.value = value;
      this.name = name;
      this.map__17242 = map__17242;
      this.comm = comm;
      this.page_title_component = page_title_component;
      this.type = type;
      this.view_path_fn = view_path_fn;
      this.p__17231 = p__17231;
      this.url = url;
      this.meta17248 = meta17248;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.page_title.t17247.cljs$lang$type = true;
    clustermap.components.page_title.t17247.cljs$lang$ctorStr = "clustermap.components.page-title/t17247";
    clustermap.components.page_title.t17247.cljs$lang$ctorPrWriter = function(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.page-title/t17247");
      };
    }(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type);
    clustermap.components.page_title.t17247.prototype.om$core$IRender$ = true;
    clustermap.components.page_title.t17247.prototype.om$core$IRender$render$arity$1 = function(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"id":"page-title"}, React.DOM.a({"className":"btn btn-link", "href":self__.view_path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461))}, "View on map"), sablono.interpreter.interpret.call(null, cljs.core.truth_(self__.type_descr) ? clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn) : null), function() {
          var attrs17250 = function() {
            var or__3558__auto__ = self__.type_descr;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "All investor-backed companies";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h2, cljs.core.map_QMARK_.call(null, attrs17250) ? sablono.interpreter.attributes.call(null, attrs17250) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17250) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs17250)], null)));
        }(), function() {
          var attrs17251 = function() {
            var or__3558__auto__ = self__.name;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "UK wide";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs17251) ? sablono.interpreter.attributes.call(null, attrs17251) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs17251) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324)) ? new cljs.core.PersistentVector(null, 
          6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", -480607843)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 1372996762)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs17251), sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324)) ? new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", -480607843)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 
          1372996762)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null)));
        }(), cljs.core.truth_(self__.url) ? React.DOM.a({"href":self__.url, "target":"_blank"}, sablono.interpreter.interpret.call(null, self__.url)) : null);
      };
    }(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type);
    clustermap.components.page_title.t17247.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type) {
      return function(_17249) {
        var self__ = this;
        var _17249__$1 = this;
        return self__.meta17248;
      };
    }(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type);
    clustermap.components.page_title.t17247.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type) {
      return function(_17249, meta17248__$1) {
        var self__ = this;
        var _17249__$1 = this;
        return new clustermap.components.page_title.t17247(self__.selection, self__.owner, self__.path_fn, self__.type_descr, self__.map__17243, self__.value, self__.name, self__.map__17242, self__.comm, self__.page_title_component, self__.type, self__.view_path_fn, self__.p__17231, self__.url, meta17248__$1);
      };
    }(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type);
    clustermap.components.page_title.__GT_t17247 = function(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type) {
      return function __GT_t17247(selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__17243__$2, value__$1, name__$1, map__17242__$2, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, p__17231__$1, url__$1, meta17248) {
        return new clustermap.components.page_title.t17247(selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__17243__$2, value__$1, name__$1, map__17242__$2, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, p__17231__$1, url__$1, meta17248);
      };
    }(map__17243, map__17243__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__17242, map__17242__$1, selection, value, type);
  }
  return new clustermap.components.page_title.t17247(selection, owner, path_fn__$1, type_descr, map__17243__$1, value, name, map__17242__$1, comm, page_title_component, type, view_path_fn, p__17231, url, null);
};
clustermap.components.page_title.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.om.burrow.call(null, clustermap.components.page_title.page_title_component, new cljs.core.Keyword(null, "selection", "selection", 975998651)), app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id)], null));
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", -1170142052);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", -1170142052));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_22751 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_22751;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name)) + '\x3d"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.escape_html.call(null, value)) + '"';
};
hiccups.runtime.render_attribute = function render_attribute(p__22752) {
  var vec__22754 = p__22752;
  var name = cljs.core.nth.call(null, vec__22754, 0, null);
  var value = cljs.core.nth.call(null, vec__22754, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name));
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      return hiccups.runtime.xml_attribute.call(null, name, value);
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__22755) {
  var vec__22758 = p__22755;
  var tag = cljs.core.nth.call(null, vec__22758, 0, null);
  var content = cljs.core.nthnext.call(null, vec__22758, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid tag name";
  } else {
  }
  var vec__22759 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__22759, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__22759, 1, null);
  var id = cljs.core.nth.call(null, vec__22759, 2, null);
  var class$ = cljs.core.nth.call(null, vec__22759, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__22761 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__22761, 0, null);
  var attrs = cljs.core.nth.call(null, vec__22761, 1, null);
  var content = cljs.core.nth.call(null, vec__22761, 2, null);
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = content;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, content)) + "\x3c/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "\x3e";
  } else {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.end_tag.call(null));
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      return hiccups.runtime.as_str.call(null, x);
    }
  }
};
goog.provide("clustermap.components.map");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("clustermap.boundarylines");
goog.require("clustermap.data.colorchooser");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.boundarylines");
goog.require("jayq.core");
goog.require("clustermap.data.colorchooser");
goog.require("om.core");
goog.require("om.core");
goog.require("hiccups.runtime");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.map.ticket = cljs.core.atom.call(null, 0);
clustermap.components.map.next_ticket = function next_ticket() {
  return cljs.core.swap_BANG_.call(null, clustermap.components.map.ticket, cljs.core.inc);
};
clustermap.components.map.bounds_array = function bounds_array(bounds) {
  if (bounds instanceof L.LatLngBounds) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bounds.getSouth(), bounds.getWest()], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bounds.getNorth(), bounds.getEast()], null)], null);
  } else {
    return bounds;
  }
};
clustermap.components.map.geojson_point_bounds = function geojson_point_bounds(longlats) {
  var s = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.last, longlats));
  var w = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.first, longlats));
  var n = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.last, longlats));
  var e = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.first, longlats));
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = s;
    if (cljs.core.truth_(and__3546__auto__)) {
      var and__3546__auto____$1 = w;
      if (cljs.core.truth_(and__3546__auto____$1)) {
        var and__3546__auto____$2 = n;
        if (cljs.core.truth_(and__3546__auto____$2)) {
          return e;
        } else {
          return and__3546__auto____$2;
        }
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }())) {
    return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, w], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, e], null)], null)));
  } else {
    return null;
  }
};
clustermap.components.map.locate_map = function locate_map(m, initial_bounds) {
  return m.fitBounds(cljs.core.clj__GT_js.call(null, initial_bounds), cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["paddingTopLeft", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), "paddingBottomRight", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null)));
};
clustermap.components.map.api_key = function() {
  var or__3558__auto__ = function() {
    var G__16916 = config;
    var G__16916__$1 = G__16916 == null ? null : G__16916.components;
    var G__16916__$2 = G__16916__$1 == null ? null : G__16916__$1.map;
    var G__16916__$3 = G__16916__$2 == null ? null : G__16916__$2.api_key;
    return G__16916__$3;
  }();
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "mccraigmccraig.h4f921b9";
  }
}();
clustermap.components.map.create_map = function create_map(id_or_el, initial_bounds) {
  var m = L.map.call(null, id_or_el, {"maxZoom":19, "zoomControl":false});
  var tiles = L.mapbox.tileLayer.call(null, clustermap.components.map.api_key, {"detectRetina":cljs.core.not.call(null, config.repl)});
  var zoom = L.control.zoom.call(null, {"position":"bottomright"});
  m.addLayer(tiles);
  m.addControl(zoom);
  clustermap.components.map.locate_map.call(null, m, initial_bounds);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747), m, new cljs.core.Keyword(null, "markers", "markers", -246919693), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "paths", "paths", -1807389588), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY)], 
  null);
};
clustermap.components.map.pan_to_show = function() {
  var pan_to_show__delegate = function(m, all_bounds) {
    if (cljs.core.truth_(cljs.core.not_empty.call(null, all_bounds))) {
      var fb = cljs.core.first.call(null, all_bounds);
      var fb_copy = new L.LatLngBounds(fb.getSouthWest(), fb.getNorthEast());
      var super_bounds = cljs.core.reduce.call(null, function(fb, fb_copy) {
        return function(sb, bounds) {
          return sb.extend(bounds);
        };
      }(fb, fb_copy), fb_copy, cljs.core.rest.call(null, all_bounds));
      return m.fitBounds(super_bounds);
    } else {
      return null;
    }
  };
  var pan_to_show = function(m, var_args) {
    var all_bounds = null;
    if (arguments.length > 1) {
      all_bounds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pan_to_show__delegate.call(this, m, all_bounds);
  };
  pan_to_show.cljs$lang$maxFixedArity = 1;
  pan_to_show.cljs$lang$applyTo = function(arglist__16917) {
    var m = cljs.core.first(arglist__16917);
    var all_bounds = cljs.core.rest(arglist__16917);
    return pan_to_show__delegate(m, all_bounds);
  };
  pan_to_show.cljs$core$IFn$_invoke$arity$variadic = pan_to_show__delegate;
  return pan_to_show;
}();
clustermap.components.map.marker_popup_content = function marker_popup_content(path_fn, location_sites) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs16919 = cljs.core.map.call(null, function(site) {
      return "\x3cli\x3e\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), site), new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), 
      null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(site))) + "\x3c/a\x3e\x3c/li\x3e";
    }, location_sites);
    if (cljs.core.map_QMARK_.call(null, attrs16919)) {
      return "\x3cul" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), "map-marker-popup-location-list"], null), attrs16919))) + "\x3e\x3c/ul\x3e";
    } else {
      return'\x3cul class\x3d"map-marker-popup-location-list"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs16919)) + "\x3c/ul\x3e";
    }
  }());
};
clustermap.components.map.create_marker = function create_marker(path_fn, leaflet_map, location_sites) {
  var temp__4124__auto__ = function() {
    var G__16922 = location_sites;
    var G__16922__$1 = G__16922 == null ? null : cljs.core.first.call(null, G__16922);
    var G__16922__$2 = G__16922__$1 == null ? null : (new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(G__16922__$1);
    var G__16922__$3 = G__16922__$2 == null ? null : cljs.core.reverse.call(null, G__16922__$2);
    var G__16922__$4 = G__16922__$3 == null ? null : cljs.core.clj__GT_js.call(null, G__16922__$3);
    return G__16922__$4;
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var latlong = temp__4124__auto__;
    var icon = L.divIcon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", -1983287057), "map-marker", new cljs.core.Keyword(null, "iconSize", "iconSize", 253109071), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 28], null), new cljs.core.Keyword(null, "iconAnchor", "iconAnchor", 970343173), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 14], 
    null), new cljs.core.Keyword(null, "popupAnchor", "popupAnchor", 931949236), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -8], null)], null)));
    var marker = L.marker(latlong, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "icon", "icon", 1679606541), icon], null)));
    var popup_content = clustermap.components.map.marker_popup_content.call(null, path_fn, location_sites);
    marker.bindPopup(popup_content);
    marker.addTo(leaflet_map);
    return marker;
  } else {
    return console.log("missing location: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var sb__4485__auto__ = new goog.string.StringBuffer;
      var _STAR_print_fn_STAR_16923_16924 = cljs.core._STAR_print_fn_STAR_;
      try {
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_fn_STAR_16923_16924, sb__4485__auto__, temp__4124__auto__) {
          return function(x__4486__auto__) {
            return sb__4485__auto__.append(x__4486__auto__);
          };
        }(_STAR_print_fn_STAR_16923_16924, sb__4485__auto__, temp__4124__auto__);
        cljs.core.pr.call(null, location_sites);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_16923_16924;
      }
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4485__auto__);
    }()));
  }
};
clustermap.components.map.update_marker = function update_marker(path_fn, leaflet_map, marker, location) {
  marker.setPopupContent(clustermap.components.map.marker_popup_content.call(null, path_fn, location));
  return marker;
};
clustermap.components.map.remove_marker = function remove_marker(leaflet_map, marker) {
  return leaflet_map.removeLayer(marker);
};
clustermap.components.map.update_markers = function update_markers(path_fn, leaflet_map, markers_atom, new_locations) {
  var markers = cljs.core.deref.call(null, markers_atom);
  var marker_keys = cljs.core.set.call(null, cljs.core.keys.call(null, markers));
  var location_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_locations));
  var _ = console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, location_keys), location_keys], null)));
  var update_marker_keys = clojure.set.intersection.call(null, marker_keys, location_keys);
  var new_marker_keys = clojure.set.difference.call(null, location_keys, marker_keys);
  var remove_marker_keys = clojure.set.difference.call(null, marker_keys, location_keys);
  var new_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.create_marker.call(null, path_fn, leaflet_map, cljs.core.get_in.call(null, new_locations, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "records", "records", 1326822832)], null)))], null);
    };
  }(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys), new_marker_keys));
  var updated_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.update_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, markers, k), cljs.core.get_in.call(null, new_locations, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "records", "records", 1326822832)], null)))], null);
    };
  }(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers), update_marker_keys));
  var ___$1 = function() {
    var seq__16929 = cljs.core.seq.call(null, remove_marker_keys);
    var chunk__16930 = null;
    var count__16931 = 0;
    var i__16932 = 0;
    while (true) {
      if (i__16932 < count__16931) {
        var k = cljs.core._nth.call(null, chunk__16930, i__16932);
        clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
        var G__16933 = seq__16929;
        var G__16934 = chunk__16930;
        var G__16935 = count__16931;
        var G__16936 = i__16932 + 1;
        seq__16929 = G__16933;
        chunk__16930 = G__16934;
        count__16931 = G__16935;
        i__16932 = G__16936;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__16929);
        if (temp__4126__auto__) {
          var seq__16929__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16929__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__16929__$1);
            var G__16937 = cljs.core.chunk_rest.call(null, seq__16929__$1);
            var G__16938 = c__4314__auto__;
            var G__16939 = cljs.core.count.call(null, c__4314__auto__);
            var G__16940 = 0;
            seq__16929 = G__16937;
            chunk__16930 = G__16938;
            count__16931 = G__16939;
            i__16932 = G__16940;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__16929__$1);
            clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
            var G__16941 = cljs.core.next.call(null, seq__16929__$1);
            var G__16942 = null;
            var G__16943 = 0;
            var G__16944 = 0;
            seq__16929 = G__16941;
            chunk__16930 = G__16942;
            count__16931 = G__16943;
            i__16932 = G__16944;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  return cljs.core.reset_BANG_.call(null, markers_atom, cljs.core.merge.call(null, updated_markers, new_markers));
};
clustermap.components.map.postgis_envelope__GT_latlngbounds = function postgis_envelope__GT_latlngbounds(envelope) {
  var map__16953 = cljs.core.js__GT_clj.call(null, envelope);
  var map__16953__$1 = cljs.core.seq_QMARK_.call(null, map__16953) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16953) : map__16953;
  var clj_envelope = map__16953__$1;
  var vec__16954 = cljs.core.get.call(null, map__16953__$1, "coordinates");
  var vec__16955 = cljs.core.nth.call(null, vec__16954, 0, null);
  var vec__16956 = cljs.core.nth.call(null, vec__16955, 0, null);
  var miny0 = cljs.core.nth.call(null, vec__16956, 0, null);
  var minx0 = cljs.core.nth.call(null, vec__16956, 1, null);
  var vec__16957 = cljs.core.nth.call(null, vec__16955, 1, null);
  var maxy1 = cljs.core.nth.call(null, vec__16957, 0, null);
  var minx1 = cljs.core.nth.call(null, vec__16957, 1, null);
  var vec__16958 = cljs.core.nth.call(null, vec__16955, 2, null);
  var maxy2 = cljs.core.nth.call(null, vec__16958, 0, null);
  var maxx2 = cljs.core.nth.call(null, vec__16958, 1, null);
  var vec__16959 = cljs.core.nth.call(null, vec__16955, 3, null);
  var miny3 = cljs.core.nth.call(null, vec__16959, 0, null);
  var maxx3 = cljs.core.nth.call(null, vec__16959, 1, null);
  var vec__16960 = cljs.core.nth.call(null, vec__16955, 4, null);
  var miny4 = cljs.core.nth.call(null, vec__16960, 0, null);
  var minx4 = cljs.core.nth.call(null, vec__16960, 1, null);
  var inner = vec__16955;
  var coords = vec__16954;
  return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [minx0, miny0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [maxx2, maxy2], null)], null)));
};
clustermap.components.map.style_leaflet_path = function style_leaflet_path(leaflet_path, p__16961) {
  var map__16963 = p__16961;
  var map__16963__$1 = cljs.core.seq_QMARK_.call(null, map__16963) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16963) : map__16963;
  var fill_color = cljs.core.get.call(null, map__16963__$1, new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903));
  var highlighted = cljs.core.get.call(null, map__16963__$1, new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733));
  var selected = cljs.core.get.call(null, map__16963__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = selected;
    if (cljs.core.truth_(and__3546__auto__)) {
      return highlighted;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#000000", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 2, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
    619211981), .6], null)));
  } else {
    if (cljs.core.truth_(selected)) {
      return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#8c2d04", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 1, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
      619211981), .6], null)));
    } else {
      if (cljs.core.truth_(highlighted)) {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#000000", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 2, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), false], null)));
      } else {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#8c2d04", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 1, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 0, new cljs.core.Keyword(null, "fill", "fill", 883462889), false, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
        619211981), 0], null)));
      }
    }
  }
};
clustermap.components.map.create_path = function create_path(comm, leaflet_map, boundaryline_id, js_boundaryline, p__16964) {
  var map__16966 = p__16964;
  var map__16966__$1 = cljs.core.seq_QMARK_.call(null, map__16966) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16966) : map__16966;
  var path_attrs = map__16966__$1;
  var selected = cljs.core.get.call(null, map__16966__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
  var tolerance = js_boundaryline["tolerance"];
  var bounds = clustermap.components.map.postgis_envelope__GT_latlngbounds.call(null, js_boundaryline["envelope"]);
  var leaflet_path = L.geoJson(js_boundaryline["geojson"]);
  clustermap.components.map.style_leaflet_path.call(null, leaflet_path, path_attrs);
  leaflet_path.addTo(leaflet_map);
  leaflet_path.on("click", function(tolerance, bounds, leaflet_path, map__16966, map__16966__$1, path_attrs, selected) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), boundaryline_id], null)], null));
    };
  }(tolerance, bounds, leaflet_path, map__16966, map__16966__$1, path_attrs, selected));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), boundaryline_id, new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818), tolerance, new cljs.core.Keyword(null, "selected", "selected", 574897764), selected, new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390), leaflet_path, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null);
};
clustermap.components.map.fetch_create_path = function fetch_create_path(comm, leaflet_map, boundaryline_id, tolerance, js_boundaryline, path_attrs) {
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, boundaryline_id, js_boundaryline, path_attrs);
};
clustermap.components.map.replace_path = function replace_path(comm, leaflet_map, boundaryline_id, old_path, js_boundaryline, path_attrs) {
  leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(old_path));
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(old_path), js_boundaryline, path_attrs);
};
clustermap.components.map.update_path = function update_path(comm, leaflet_map, p__16967, tolerance, js_boundaryline, path_attrs) {
  var map__16969 = p__16967;
  var map__16969__$1 = cljs.core.seq_QMARK_.call(null, map__16969) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16969) : map__16969;
  var path = map__16969__$1;
  var boundaryline_id = cljs.core.get.call(null, map__16969__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  if (cljs.core.not_EQ_.call(null, tolerance, (new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818)).cljs$core$IFn$_invoke$arity$1(path))) {
    return clustermap.components.map.replace_path.call(null, comm, leaflet_map, boundaryline_id, path, js_boundaryline, path_attrs);
  } else {
    clustermap.components.map.style_leaflet_path.call(null, (new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(path), path_attrs);
    return path;
  }
};
clustermap.components.map.delete_path = function delete_path(leaflet_map, path) {
  return leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(path));
};
clustermap.components.map.update_paths = function update_paths(comm, fetch_boundarylines_fn, leaflet_map, paths_atom, path_selections_atom, new_path_highlights, new_selection_paths) {
  var paths = cljs.core.deref.call(null, paths_atom);
  var path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, paths));
  var old_selection_path_keys = cljs.core.deref.call(null, path_selections_atom);
  var new_selection_path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_selection_paths));
  var live_path_keys = clojure.set.union.call(null, new_selection_path_keys, new_path_highlights);
  var create_path_keys = clojure.set.difference.call(null, live_path_keys, path_keys);
  var delete_path_keys = clojure.set.difference.call(null, path_keys, live_path_keys);
  var update_path_keys = clojure.set.intersection.call(null, path_keys, live_path_keys);
  var _ = console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "create", "create", -1301499256), create_path_keys, new cljs.core.Keyword(null, "delete", "delete", -1768633620), delete_path_keys, new cljs.core.Keyword(null, "update", "update", 1045576396), update_path_keys], null)));
  var vec__16983 = fetch_boundarylines_fn.call(null, clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()), leaflet_map.getZoom(), new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), live_path_keys);
  var tolerance_paths = cljs.core.nth.call(null, vec__16983, 0, null);
  var notifychan = cljs.core.nth.call(null, vec__16983, 1, null);
  var created_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan) {
    return function(p__16984) {
      var vec__16985 = p__16984;
      var k = cljs.core.nth.call(null, vec__16985, 0, null);
      var tolerance = cljs.core.nth.call(null, vec__16985, 1, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__16985, 2, null);
      return clustermap.components.map.fetch_create_path.call(null, comm, leaflet_map, k, tolerance, js_boundaryline, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903), new_selection_paths.call(null, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733), cljs.core.contains_QMARK_.call(null, 
      new_path_highlights, k)], null));
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan), cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan) {
    return function(k) {
      var vec__16986 = cljs.core.get.call(null, tolerance_paths, k);
      var tolerance = cljs.core.nth.call(null, vec__16986, 0, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__16986, 1, null);
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = k;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = tolerance;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return js_boundaryline;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, tolerance, js_boundaryline], null);
      } else {
        return null;
      }
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan), create_path_keys)));
  var updated_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths) {
    return function(p__16987) {
      var vec__16988 = p__16987;
      var k = cljs.core.nth.call(null, vec__16988, 0, null);
      var tolerance = cljs.core.nth.call(null, vec__16988, 1, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__16988, 2, null);
      return clustermap.components.map.update_path.call(null, comm, leaflet_map, cljs.core.get.call(null, paths, k), tolerance, js_boundaryline, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903), new_selection_paths.call(null, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733), cljs.core.contains_QMARK_.call(null, 
      new_path_highlights, k)], null));
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths), cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths) {
    return function(k) {
      var vec__16989 = cljs.core.get.call(null, tolerance_paths, k);
      var tolerance = cljs.core.nth.call(null, vec__16989, 0, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__16989, 1, null);
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = k;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = tolerance;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return js_boundaryline;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, tolerance, js_boundaryline], null);
      } else {
        return null;
      }
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths), update_path_keys)));
  var ___$1 = function() {
    var seq__16990 = cljs.core.seq.call(null, delete_path_keys);
    var chunk__16991 = null;
    var count__16992 = 0;
    var i__16993 = 0;
    while (true) {
      if (i__16993 < count__16992) {
        var k = cljs.core._nth.call(null, chunk__16991, i__16993);
        var temp__4124__auto___16996 = cljs.core.get.call(null, paths, k);
        if (cljs.core.truth_(temp__4124__auto___16996)) {
          var path_16997 = temp__4124__auto___16996;
          clustermap.components.map.delete_path.call(null, leaflet_map, path_16997);
        } else {
        }
        var G__16998 = seq__16990;
        var G__16999 = chunk__16991;
        var G__17000 = count__16992;
        var G__17001 = i__16993 + 1;
        seq__16990 = G__16998;
        chunk__16991 = G__16999;
        count__16992 = G__17000;
        i__16993 = G__17001;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__16990);
        if (temp__4126__auto__) {
          var seq__16990__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16990__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__16990__$1);
            var G__17002 = cljs.core.chunk_rest.call(null, seq__16990__$1);
            var G__17003 = c__4314__auto__;
            var G__17004 = cljs.core.count.call(null, c__4314__auto__);
            var G__17005 = 0;
            seq__16990 = G__17002;
            chunk__16991 = G__17003;
            count__16992 = G__17004;
            i__16993 = G__17005;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__16990__$1);
            var temp__4124__auto___17006 = cljs.core.get.call(null, paths, k);
            if (cljs.core.truth_(temp__4124__auto___17006)) {
              var path_17007 = temp__4124__auto___17006;
              clustermap.components.map.delete_path.call(null, leaflet_map, path_17007);
            } else {
            }
            var G__17008 = cljs.core.next.call(null, seq__16990__$1);
            var G__17009 = null;
            var G__17010 = 0;
            var G__17011 = 0;
            seq__16990 = G__17008;
            chunk__16991 = G__17009;
            count__16992 = G__17010;
            i__16993 = G__17011;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  var new_paths = cljs.core.reduce.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths, updated_paths, ___$1) {
    return function(m, p__16994) {
      var map__16995 = p__16994;
      var map__16995__$1 = cljs.core.seq_QMARK_.call(null, map__16995) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16995) : map__16995;
      var path = map__16995__$1;
      var id = cljs.core.get.call(null, map__16995__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      return cljs.core.assoc.call(null, m, id, path);
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__16983, tolerance_paths, notifychan, created_paths, updated_paths, ___$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.concat.call(null, created_paths, updated_paths)));
  cljs.core.reset_BANG_.call(null, path_selections_atom, new_selection_path_keys);
  cljs.core.reset_BANG_.call(null, paths_atom, new_paths);
  return notifychan;
};
clustermap.components.map.constituency_marker_popup_content = function constituency_marker_popup_content(path_fn, constituency) {
  var bl_id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(constituency);
  var bl_name = (new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383)).cljs$core$IFn$_invoke$arity$1(constituency);
  return "\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), bl_id, new cljs.core.Keyword(null, 
  "compact_name", "compact_name", 1525822383), bl_name], null)), new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs17013 = bl_name;
    if (cljs.core.map_QMARK_.call(null, attrs17013)) {
      return "\x3cspan" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), "map-marker-constituency-name"], null), attrs17013))) + "\x3e\x3c/span\x3e";
    } else {
      return'\x3cspan class\x3d"map-marker-constituency-name"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs17013)) + "\x3c/span\x3e";
    }
  }()) + "\x3c/a\x3e";
};
clustermap.components.map.choose_boundaryline_collection = function choose_boundaryline_collection(threshold_collections, zoom) {
  return cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.reverse.call(null, cljs.core.filter.call(null, function(p__17016) {
    var vec__17017 = p__17016;
    var tz = cljs.core.nth.call(null, vec__17017, 0, null);
    var collection = cljs.core.nth.call(null, vec__17017, 1, null);
    return zoom >= tz;
  }, threshold_collections))));
};
clustermap.components.map.request_aggregation_data = function request_aggregation_data(resource, index, index_type, blcoll, variable, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.boundaryline_aggregation, index, index_type, blcoll, variable, filter, bounds);
};
clustermap.components.map.request_point_data = function request_point_data(resource, index, index_type, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.location_lists, index, index_type, "!postcode", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!name", "!location", "!latest_employee_count", "!latest_turnover"], null), 1E3, filter, bounds);
};
clustermap.components.map.map_component = function map_component(p__17018, owner) {
  var map__17057 = p__17018;
  var map__17057__$1 = cljs.core.seq_QMARK_.call(null, map__17057) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17057) : map__17057;
  var cursor_data = map__17057__$1;
  var map__17058 = cljs.core.get.call(null, map__17057__$1, new cljs.core.Keyword(null, "map-state", "map-state", -1227493550));
  var map__17058__$1 = cljs.core.seq_QMARK_.call(null, map__17058) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17058) : map__17058;
  var cursor = map__17058__$1;
  var data = cljs.core.get.call(null, map__17058__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var point_data = cljs.core.get.call(null, map__17058__$1, new cljs.core.Keyword(null, "point-data", "point-data", -1294572970));
  var boundaryline_collections = cljs.core.get.call(null, map__17058__$1, new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980));
  var map__17059 = cljs.core.get.call(null, map__17058__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__17059__$1 = cljs.core.seq_QMARK_.call(null, map__17059) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17059) : map__17059;
  var threshold_colors = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983));
  var boundaryline_agg = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775));
  var colorchooser = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729));
  var boundaryline_collection = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936));
  var zoom = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "zoom", "zoom", -1827487038));
  var bounds = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  var initial_bounds = cljs.core.get.call(null, map__17059__$1, new cljs.core.Keyword(null, "initial-bounds", "initial-bounds", -1404401542));
  var filter = cljs.core.get.call(null, map__17057__$1, new cljs.core.Keyword(null, "filter", "filter", -948537934));
  if (typeof clustermap.components.map.t17060 !== "undefined") {
  } else {
    clustermap.components.map.t17060 = function(colorchooser, initial_bounds, owner, data, zoom, p__17018, cursor_data, map_component, boundaryline_collections, cursor, threshold_colors, bounds, boundaryline_collection, filter, map__17058, map__17057, point_data, boundaryline_agg, map__17059, meta17061) {
      this.colorchooser = colorchooser;
      this.initial_bounds = initial_bounds;
      this.owner = owner;
      this.data = data;
      this.zoom = zoom;
      this.p__17018 = p__17018;
      this.cursor_data = cursor_data;
      this.map_component = map_component;
      this.boundaryline_collections = boundaryline_collections;
      this.cursor = cursor;
      this.threshold_colors = threshold_colors;
      this.bounds = bounds;
      this.boundaryline_collection = boundaryline_collection;
      this.filter = filter;
      this.map__17058 = map__17058;
      this.map__17057 = map__17057;
      this.point_data = point_data;
      this.boundaryline_agg = boundaryline_agg;
      this.map__17059 = map__17059;
      this.meta17061 = meta17061;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map.t17060.cljs$lang$type = true;
    clustermap.components.map.t17060.cljs$lang$ctorStr = "clustermap.components.map/t17060";
    clustermap.components.map.t17060.cljs$lang$ctorPrWriter = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.map/t17060");
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.om$core$IWillUnmount$ = true;
    clustermap.components.map.t17060.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var map__17063 = om.core.get_state.call(null, self__.owner);
        var map__17063__$1 = cljs.core.seq_QMARK_.call(null, map__17063) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17063) : map__17063;
        var point_data_resource = cljs.core.get.call(null, map__17063__$1, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097));
        var aggregation_data_resource = cljs.core.get.call(null, map__17063__$1, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689));
        clustermap.ordered_resource.close.call(null, aggregation_data_resource);
        return clustermap.ordered_resource.close.call(null, point_data_resource);
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map.t17060.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$, p__17064, p__17065) {
        var self__ = this;
        var map__17066 = p__17064;
        var map__17066__$1 = cljs.core.seq_QMARK_.call(null, map__17066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17066) : map__17066;
        var next_cursor_data = map__17066__$1;
        var map__17067 = cljs.core.get.call(null, map__17066__$1, new cljs.core.Keyword(null, "map-state", "map-state", -1227493550));
        var map__17067__$1 = cljs.core.seq_QMARK_.call(null, map__17067) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17067) : map__17067;
        var next_cursor = map__17067__$1;
        var next_data = cljs.core.get.call(null, map__17067__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
        var next_point_data = cljs.core.get.call(null, map__17067__$1, new cljs.core.Keyword(null, "point-data", "point-data", -1294572970));
        var next_boundaryline_collections = cljs.core.get.call(null, map__17067__$1, new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980));
        var map__17068 = cljs.core.get.call(null, map__17067__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__17068__$1 = cljs.core.seq_QMARK_.call(null, map__17068) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17068) : map__17068;
        var next_zoom = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "zoom", "zoom", -1827487038));
        var next_bounds = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var next_boundaryline_collection = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936));
        var next_colorchooser = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729));
        var next_boundaryline_agg = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775));
        var next_threshold_colors = cljs.core.get.call(null, map__17068__$1, new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983));
        var next_filter = cljs.core.get.call(null, map__17066__$1, new cljs.core.Keyword(null, "filter", "filter", -948537934));
        var map__17069 = p__17065;
        var map__17069__$1 = cljs.core.seq_QMARK_.call(null, map__17069) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17069) : map__17069;
        var map__17070 = cljs.core.get.call(null, map__17069__$1, new cljs.core.Keyword(null, "map", "map", 1371690461));
        var map__17070__$1 = cljs.core.seq_QMARK_.call(null, map__17070) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17070) : map__17070;
        var next_markers = cljs.core.get.call(null, map__17070__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var next_paths = cljs.core.get.call(null, map__17070__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
        var next_path_selections = cljs.core.get.call(null, map__17070__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033));
        var next_path_highlights = cljs.core.get.call(null, map__17069__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
        var next_aggregation_data_resource = cljs.core.get.call(null, map__17069__$1, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689));
        var next_point_data_resource = cljs.core.get.call(null, map__17069__$1, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097));
        var this$__$1 = this;
        var map__17071 = om.core.get_shared.call(null, self__.owner);
        var map__17071__$1 = cljs.core.seq_QMARK_.call(null, map__17071) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17071) : map__17071;
        var point_in_boundarylines_fn = cljs.core.get.call(null, map__17071__$1, new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614));
        var fetch_boundarylines_fn = cljs.core.get.call(null, map__17071__$1, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393));
        var link_fn = cljs.core.get.call(null, map__17071__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
        var path_fn = cljs.core.get.call(null, map__17071__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var comm = cljs.core.get.call(null, map__17071__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        var map__17072 = om.core.get_state.call(null, self__.owner);
        var map__17072__$1 = cljs.core.seq_QMARK_.call(null, map__17072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17072) : map__17072;
        var map__17073 = cljs.core.get.call(null, map__17072__$1, new cljs.core.Keyword(null, "map", "map", 1371690461));
        var map__17073__$1 = cljs.core.seq_QMARK_.call(null, map__17073) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17073) : map__17073;
        var path_selections = cljs.core.get.call(null, map__17073__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033));
        var paths = cljs.core.get.call(null, map__17073__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
        var markers = cljs.core.get.call(null, map__17073__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var leaflet_map = cljs.core.get.call(null, map__17073__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747));
        var pan_pending = cljs.core.get.call(null, map__17072__$1, new cljs.core.Keyword(null, "pan-pending", "pan-pending", -1898979779));
        var path_highlights = cljs.core.get.call(null, map__17072__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = next_zoom;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_zoom, self__.zoom) && cljs.core.not_EQ_.call(null, next_zoom, leaflet_map.getZoom());
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          leaflet_map.setZoom(next_zoom);
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = next_bounds;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds) && cljs.core.not_EQ_.call(null, next_bounds, clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          leaflet_map.fitBounds(cljs.core.clj__GT_js.call(null, next_bounds));
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = self__.boundaryline_collections;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_boundaryline_collection, clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()));
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["change-collection", clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom())], null)));
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936)], null), clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()));
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = next_boundaryline_collection;
          if (cljs.core.truth_(and__3546__auto__)) {
            var or__3558__auto__ = function() {
              var and__3546__auto____$1 = next_boundaryline_agg;
              if (cljs.core.truth_(and__3546__auto____$1)) {
                return cljs.core.not_EQ_.call(null, next_boundaryline_agg, self__.boundaryline_agg);
              } else {
                return and__3546__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return cljs.core.not_EQ_.call(null, next_filter, self__.filter) || cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          var ticket_17095 = clustermap.components.map.next_ticket.call(null);
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "ticket", "ticket", 1810559700)], null), ticket_17095);
          clustermap.components.map.request_aggregation_data.call(null, next_aggregation_data_resource, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), (new cljs.core.Keyword(null, "index-type", "index-type", 500383962)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()), (new cljs.core.Keyword(null, "variable", 
          "variable", -281346492)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), om.core._value.call(null, next_filter), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
          clustermap.components.map.request_point_data.call(null, next_point_data_resource, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), (new cljs.core.Keyword(null, "index-type", "index-type", 500383962)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), om.core._value.call(null, next_filter), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        } else {
        }
        if (cljs.core.not_EQ_.call(null, next_data, self__.data) || cljs.core.not_EQ_.call(null, next_colorchooser, self__.colorchooser)) {
          var vec__17074_17096 = clustermap.data.colorchooser.choose.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(next_colorchooser), cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "scale", "scale", -230427353)).cljs$core$IFn$_invoke$arity$1(next_colorchooser)), new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "variable", "variable", -281346492)).cljs$core$IFn$_invoke$arity$1(next_colorchooser)), 
          (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(next_data));
          var new_threshold_colors_17097 = cljs.core.nth.call(null, vec__17074_17096, 0, null);
          var selection_path_colours_17098 = cljs.core.nth.call(null, vec__17074_17096, 1, null);
          var update_paths_invocation_17099 = function(vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, next_cursor_data, map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, 
          map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, 
          threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
            return function() {
              return clustermap.components.map.update_paths.call(null, comm, cljs.core.partial.call(null, fetch_boundarylines_fn, next_boundaryline_collection), leaflet_map, next_paths, next_path_selections, next_path_highlights, selection_path_colours_17098);
            };
          }(vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, next_cursor_data, map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, 
          next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, 
          colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
          if (cljs.core.not_EQ_.call(null, new_threshold_colors_17097, next_threshold_colors)) {
            om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983)], null), new_threshold_colors_17097);
          } else {
          }
          var temp__4126__auto___17100 = update_paths_invocation_17099.call(null);
          if (cljs.core.truth_(temp__4126__auto___17100)) {
            var notify_chan_17101 = temp__4126__auto___17100;
            var c__5708__auto___17102 = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, 
            next_cursor_data, map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, 
            cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
              return function() {
                var f__5709__auto__ = function() {
                  var switch__5693__auto__ = function(c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, 
                  next_cursor_data, map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, 
                  cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
                    return function(state_17079) {
                      var state_val_17080 = state_17079[1];
                      if (state_val_17080 === 2) {
                        var inst_17076 = state_17079[2];
                        var inst_17077 = update_paths_invocation_17099.call(null);
                        var state_17079__$1 = function() {
                          var statearr_17081 = state_17079;
                          statearr_17081[7] = inst_17076;
                          return statearr_17081;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17079__$1, inst_17077);
                      } else {
                        if (state_val_17080 === 1) {
                          var state_17079__$1 = state_17079;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17079__$1, 2, notify_chan_17101);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, next_cursor_data, map__17067, map__17067__$1, 
                  next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, 
                  cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
                  return function(switch__5693__auto__, c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, 
                  next_cursor_data, map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, 
                  cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
                    return function() {
                      var state_machine__5694__auto__ = null;
                      var state_machine__5694__auto____0 = function() {
                        var statearr_17085 = [null, null, null, null, null, null, null, null];
                        statearr_17085[0] = state_machine__5694__auto__;
                        statearr_17085[1] = 1;
                        return statearr_17085;
                      };
                      var state_machine__5694__auto____1 = function(state_17079) {
                        while (true) {
                          var ret_value__5695__auto__ = function() {
                            try {
                              while (true) {
                                var result__5696__auto__ = switch__5693__auto__.call(null, state_17079);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__5696__auto__;
                                }
                                break;
                              }
                            } catch (e17086) {
                              if (e17086 instanceof Object) {
                                var ex__5697__auto__ = e17086;
                                var statearr_17087_17103 = state_17079;
                                statearr_17087_17103[5] = ex__5697__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17079);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e17086;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__17104 = state_17079;
                            state_17079 = G__17104;
                            continue;
                          } else {
                            return ret_value__5695__auto__;
                          }
                          break;
                        }
                      };
                      state_machine__5694__auto__ = function(state_17079) {
                        switch(arguments.length) {
                          case 0:
                            return state_machine__5694__auto____0.call(this);
                          case 1:
                            return state_machine__5694__auto____1.call(this, state_17079);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
                      state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
                      return state_machine__5694__auto__;
                    }();
                  }(switch__5693__auto__, c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, next_cursor_data, 
                  map__17067, map__17067__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, cursor_data, 
                  map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
                }();
                var state__5710__auto__ = function() {
                  var statearr_17088 = f__5709__auto__.call(null);
                  statearr_17088[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___17102;
                  return statearr_17088;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
              };
            }(c__5708__auto___17102, notify_chan_17101, temp__4126__auto___17100, vec__17074_17096, new_threshold_colors_17097, selection_path_colours_17098, update_paths_invocation_17099, map__17071, map__17071__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__17072, map__17072__$1, map__17073, map__17073__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__17066, map__17066__$1, next_cursor_data, map__17067, map__17067__$1, 
            next_cursor, next_data, next_point_data, next_boundaryline_collections, map__17068, map__17068__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__17069, map__17069__$1, map__17070, map__17070__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, 
            data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
          } else {
          }
        } else {
        }
        if (cljs.core.not_EQ_.call(null, next_point_data, self__.point_data)) {
          return clustermap.components.map.update_markers.call(null, path_fn, leaflet_map, next_markers, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(next_point_data));
        } else {
          return null;
        }
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.om$core$IDidMount$ = true;
    clustermap.components.map.t17060.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        var map__17089 = clustermap.components.map.create_map.call(null, node, self__.initial_bounds);
        var map__17089__$1 = cljs.core.seq_QMARK_.call(null, map__17089) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17089) : map__17089;
        var map = map__17089__$1;
        var path = cljs.core.get.call(null, map__17089__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
        var markers = cljs.core.get.call(null, map__17089__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var leaflet_map = cljs.core.get.call(null, map__17089__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747));
        var map__17090 = om.core.get_shared.call(null, self__.owner);
        var map__17090__$1 = cljs.core.seq_QMARK_.call(null, map__17090) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17090) : map__17090;
        var path_fn = cljs.core.get.call(null, map__17090__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var link_fn = cljs.core.get.call(null, map__17090__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
        var point_in_boundarylines_fn = cljs.core.get.call(null, map__17090__$1, new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614));
        var fetch_boundarylines_fn = cljs.core.get.call(null, map__17090__$1, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393));
        var comm = cljs.core.get.call(null, map__17090__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038)], null), leaflet_map.getZoom());
        om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "map", "map", 1371690461), map);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411), cljs.core.PersistentHashSet.EMPTY);
        leaflet_map.on("moveend", function(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            console.log("moveend");
            om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038)], null), leaflet_map.getZoom());
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
          };
        }(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("popupopen", function(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var popup_el = e.popup._container;
            var marker_popup_location_list_cnt = jayq.core.$.call(null, popup_el).find(".map-marker-popup-location-list").length;
            if (marker_popup_location_list_cnt > 0) {
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134), true);
            } else {
            }
            return jayq.core.$.call(null, popup_el).on("mousemove", function(popup_el, marker_popup_location_list_cnt, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, 
            zoom, bounds, initial_bounds, filter) {
              return function(e__$1) {
                e__$1.preventDefault();
                return false;
              };
            }(popup_el, marker_popup_location_list_cnt, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
          };
        }(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("popupclose", function(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134), null);
          };
        }(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("mousemove", function(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var lat = e.latlng.lat;
            var lng = e.latlng.lng;
            var hits = point_in_boundarylines_fn.call(null, lng, lat);
            var highlight_hit = cljs.core.first.call(null, hits);
            var highlight_path_id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(highlight_hit);
            var highlight_path_ids = cljs.core.truth_(highlight_path_id) ? cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [highlight_path_id], null)) : null;
            var old_path_highlights = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = highlight_hit;
              if (cljs.core.truth_(and__3546__auto__)) {
                return cljs.core.not_EQ_.call(null, old_path_highlights, highlight_path_ids) && cljs.core.not.call(null, om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134)));
              } else {
                return and__3546__auto__;
              }
            }())) {
              var G__17091_17105 = L.popup();
              G__17091_17105.setLatLng(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lat, lng], null)));
              G__17091_17105.setContent(clustermap.components.map.constituency_marker_popup_content.call(null, path_fn, highlight_hit));
              G__17091_17105.openOn(leaflet_map);
            } else {
            }
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411), highlight_path_ids);
          };
        }(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("click", function(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var hits = point_in_boundarylines_fn.call(null, e.latlng.lng, e.latlng.lat);
            var boundaryline_id = function() {
              var G__17092 = hits;
              var G__17092__$1 = G__17092 == null ? null : cljs.core.first.call(null, G__17092);
              var G__17092__$2 = G__17092__$1 == null ? null : (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(G__17092__$1);
              return G__17092__$2;
            }();
            if (cljs.core.truth_(boundaryline_id)) {
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), boundaryline_id], null)], null));
            } else {
              return null;
            }
          };
        }(node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        var adr_17106 = clustermap.ordered_resource.make_discard_stale_resource.call(null, "aggregation-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689), adr_17106);
        clustermap.ordered_resource.retrieve_responses.call(null, adr_17106, function(adr_17106, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, 
        zoom, bounds, initial_bounds, filter) {
          return function(data__$2) {
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377)], null), data__$2);
          };
        }(adr_17106, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        var pdr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "point-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097), pdr);
        return clustermap.ordered_resource.retrieve_responses.call(null, pdr, function(pdr, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, 
        bounds, initial_bounds, filter) {
          return function(point_data__$2) {
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point-data", "point-data", -1294572970)], null), point_data__$2);
          };
        }(pdr, node, map__17089, map__17089__$1, map, path, markers, leaflet_map, map__17090, map__17090__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.om$core$IRender$ = true;
    clustermap.components.map.t17060.prototype.om$core$IRender$render$arity$1 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"map", "ref":"map"});
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(_17062) {
        var self__ = this;
        var _17062__$1 = this;
        return self__.meta17061;
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t17060.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(_17062, meta17061__$1) {
        var self__ = this;
        var _17062__$1 = this;
        return new clustermap.components.map.t17060(self__.colorchooser, self__.initial_bounds, self__.owner, self__.data, self__.zoom, self__.p__17018, self__.cursor_data, self__.map_component, self__.boundaryline_collections, self__.cursor, self__.threshold_colors, self__.bounds, self__.boundaryline_collection, self__.filter, self__.map__17058, self__.map__17057, self__.point_data, self__.boundaryline_agg, self__.map__17059, meta17061__$1);
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.__GT_t17060 = function(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function __GT_t17060(colorchooser__$1, initial_bounds__$1, owner__$1, data__$1, zoom__$1, p__17018__$1, cursor_data__$1, map_component__$1, boundaryline_collections__$1, cursor__$1, threshold_colors__$1, bounds__$1, boundaryline_collection__$1, filter__$1, map__17058__$2, map__17057__$2, point_data__$1, boundaryline_agg__$1, map__17059__$2, meta17061) {
        return new clustermap.components.map.t17060(colorchooser__$1, initial_bounds__$1, owner__$1, data__$1, zoom__$1, p__17018__$1, cursor_data__$1, map_component__$1, boundaryline_collections__$1, cursor__$1, threshold_colors__$1, bounds__$1, boundaryline_collection__$1, filter__$1, map__17058__$2, map__17057__$2, point_data__$1, boundaryline_agg__$1, map__17059__$2, meta17061);
      };
    }(map__17057, map__17057__$1, cursor_data, map__17058, map__17058__$1, cursor, data, point_data, boundaryline_collections, map__17059, map__17059__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
  }
  return new clustermap.components.map.t17060(colorchooser, initial_bounds, owner, data, zoom, p__17018, cursor_data, map_component, boundaryline_collections, cursor, threshold_colors, bounds, boundaryline_collection, filter, map__17058__$1, map__17057__$1, point_data, boundaryline_agg, map__17059__$1, null);
};
goog.provide("clustermap.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.number");
goog.require("clustermap.boundarylines");
goog.require("clustermap.data.colorchooser");
goog.require("clustermap.components.mount");
goog.require("secretary.core");
goog.require("clustermap.components.map");
goog.require("clustermap.nav");
goog.require("om.dom");
goog.require("clustermap.components.timeline_chart");
goog.require("goog.history.EventType");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("clustermap.routes");
goog.require("clustermap.components.table");
goog.require("om.dom");
goog.require("clustermap.components.table");
goog.require("clustermap.api");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.full_report");
goog.require("cljs.core.async");
goog.require("clustermap.components.select_chooser");
goog.require("clustermap.components.select_chooser");
goog.require("goog.History");
goog.require("goog.events");
goog.require("clustermap.boundarylines");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.color_scale");
goog.require("clustermap.formats.time");
goog.require("clustermap.components.search");
goog.require("clustermap.components.map_report");
goog.require("clustermap.data.colorchooser");
goog.require("clustermap.components.filter");
goog.require("clustermap.components.mount");
goog.require("clustermap.components.map_report");
goog.require("clustermap.routes");
goog.require("clustermap.components.full_report");
goog.require("clustermap.components.search");
goog.require("om.core");
goog.require("om.core");
goog.require("secretary.core");
goog.require("clustermap.components.page_title");
goog.require("clustermap.formats.time");
goog.require("clustermap.components.color_scale");
goog.require("clustermap.components.filter");
goog.require("clustermap.nav");
goog.require("clojure.string");
goog.require("clustermap.components.timeline_chart");
goog.require("clustermap.components.page_title");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("clustermap.components.map");
goog.require("clustermap.formats.money");
goog.require("clustermap.api");
clustermap.app.state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "collections", "collections", -2114643505), new cljs.core.PersistentArrayMap(null, 3, ["uk_boroughs", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), 
null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), "uk_wards", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), "uk_regions", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null)], null), new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "components", 
"components", -1073188942), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255), false, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), null, new cljs.core.Keyword(null, "compiled", "compiled", 850043082), null], null), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "geoport", "geoport", 534549910), 
new cljs.core.Keyword(null, "datasource", "datasource", -246060221), "companies", new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "uk_regions"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, "uk_counties"], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, "uk_boroughs"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, "uk_wards"], null)], null), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "initial-bounds", "initial-bounds", -1404401542), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[59.54, 2.3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [49.29, -11.29], null)], null), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038), null, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), null, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936), null, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, "index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "key", "key", -1516042587), "boundaryline_id", new cljs.core.Keyword(null, "variable", "variable", -281346492), "!latest_employee_count"], null), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "Oranges", "Oranges", 1752319702), new cljs.core.Keyword(null, "9", "9", 1664767314)], null), new cljs.core.Keyword(null, "scale", "scale", -230427353), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.Keyword(null, "sum", "sum", 136986814)], 
null)], null), new cljs.core.Keyword(null, "data", "data", -232669377), null], null), new cljs.core.Keyword(null, "map-report", "map-report", -254073588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, 
"index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "variables", "variables", 1563680814), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_employee_count", "!latest_turnover"], null)], null)], null), new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251), null], null), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, "index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", 
-1853433972), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), "desc"], null)], null), new cljs.core.Keyword(null, "from", "from", 1815293044), 0, new cljs.core.Keyword(null, "size", "size", 1098693007), 50, new cljs.core.Keyword(null, "columns", "columns", 1998437288), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"!name", "!name", 1164538490), "Name"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "!postcode", "!postcode", 1728852280), "Postcode"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "!formation_date", "!formation_date", -1967327335), "Formation date", function(p1__15869_SHARP_) {
  return clustermap.formats.time.format_date.call(null, p1__15869_SHARP_);
}], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "!latest_accounts_date", "!latest_accounts_date", -259857093), "Filing date", function(p1__15870_SHARP_) {
  return clustermap.formats.time.format_date.call(null, p1__15870_SHARP_);
}], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "!latest_employee_count", "!latest_employee_count", -1445524938), "Employees", function(p1__15871_SHARP_) {
  return clustermap.formats.number.readable.call(null, p1__15871_SHARP_, new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0);
}], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", -1853433972), "Turnover", function(p1__15872_SHARP_) {
  return clustermap.formats.money.readable.call(null, p1__15872_SHARP_, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 3, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "");
}], null)], null)], null), new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), null], null), new cljs.core.Keyword(null, "turnover-timeline", "turnover-timeline", 905445027), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "timeline", "timeline", 192903161), new cljs.core.Keyword(null, "datasource", "datasource", -246060221), "company_accounts", new cljs.core.Keyword(null, "controls", "controls", 1340701452), 
new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "index", "index", -1531685915), "company-accounts", new cljs.core.Keyword(null, "index-type", "index-type", 500383962), "accounts", new cljs.core.Keyword(null, "time-variable", "time-variable", -1643449307), "?accounts_date", new cljs.core.Keyword(null, "measure-variables", "measure-variables", 893431199), "!turnover", new cljs.core.Keyword(null, "interval", "interval", 1708495417), "year"], null), new cljs.core.Keyword(null, 
"timeline-data", "timeline-data", -163143548), null], null), new cljs.core.Keyword(null, "view", "view", 1247994814), new cljs.core.Keyword(null, "map", "map", 1371690461)], null));
clustermap.app.new_state = function new_state(state, path_values) {
  return cljs.core.reduce.call(null, function(s, p__15875) {
    var vec__15876 = p__15875;
    var key_or_path = cljs.core.nth.call(null, vec__15876, 0, null);
    var value_or_fn = cljs.core.nth.call(null, vec__15876, 1, null);
    var path = cljs.core.sequential_QMARK_.call(null, key_or_path) ? key_or_path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_path], null);
    return cljs.core.update_in.call(null, s, path, cljs.core.fn_QMARK_.call(null, value_or_fn) ? value_or_fn : function(path, vec__15876, key_or_path, value_or_fn) {
      return function(ov) {
        return value_or_fn;
      };
    }(path, vec__15876, key_or_path, value_or_fn));
  }, state, path_values);
};
clustermap.app.set_state = function() {
  var set_state__delegate = function(p__15877) {
    var map__15879 = p__15877;
    var map__15879__$1 = cljs.core.seq_QMARK_.call(null, map__15879) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15879) : map__15879;
    var path_values = map__15879__$1;
    return cljs.core.swap_BANG_.call(null, clustermap.app.state, clustermap.app.new_state, path_values);
  };
  var set_state = function(var_args) {
    var p__15877 = null;
    if (arguments.length > 0) {
      p__15877 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_state__delegate.call(this, p__15877);
  };
  set_state.cljs$lang$maxFixedArity = 0;
  set_state.cljs$lang$applyTo = function(arglist__15880) {
    var p__15877 = cljs.core.seq(arglist__15880);
    return set_state__delegate(p__15877);
  };
  set_state.cljs$core$IFn$_invoke$arity$variadic = set_state__delegate;
  return set_state;
}();
clustermap.app.get_state = function() {
  var get_state__delegate = function(path) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, clustermap.app.state), cljs.core.flatten.call(null, path));
  };
  var get_state = function(var_args) {
    var path = null;
    if (arguments.length > 0) {
      path = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return get_state__delegate.call(this, path);
  };
  get_state.cljs$lang$maxFixedArity = 0;
  get_state.cljs$lang$applyTo = function(arglist__15881) {
    var path = cljs.core.seq(arglist__15881);
    return get_state__delegate(path);
  };
  get_state.cljs$core$IFn$_invoke$arity$variadic = get_state__delegate;
  return get_state;
}();
clustermap.app.bl_collections = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["uk_regions", "uk_boroughs", "uk_wards"], null);
clustermap.app.load_boundaryline_collection_indexes = function load_boundaryline_collection_indexes() {
  var seq__15886 = cljs.core.seq.call(null, clustermap.app.bl_collections);
  var chunk__15887 = null;
  var count__15888 = 0;
  var i__15889 = 0;
  while (true) {
    if (i__15889 < count__15888) {
      var blcoll = cljs.core._nth.call(null, chunk__15887, i__15889);
      clustermap.boundarylines.fetch_boundaryline_collection_index.call(null, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), blcoll);
      var G__15890 = seq__15886;
      var G__15891 = chunk__15887;
      var G__15892 = count__15888;
      var G__15893 = i__15889 + 1;
      seq__15886 = G__15890;
      chunk__15887 = G__15891;
      count__15888 = G__15892;
      i__15889 = G__15893;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15886);
      if (temp__4126__auto__) {
        var seq__15886__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15886__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15886__$1);
          var G__15894 = cljs.core.chunk_rest.call(null, seq__15886__$1);
          var G__15895 = c__4314__auto__;
          var G__15896 = cljs.core.count.call(null, c__4314__auto__);
          var G__15897 = 0;
          seq__15886 = G__15894;
          chunk__15887 = G__15895;
          count__15888 = G__15896;
          i__15889 = G__15897;
          continue;
        } else {
          var blcoll = cljs.core.first.call(null, seq__15886__$1);
          clustermap.boundarylines.fetch_boundaryline_collection_index.call(null, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), blcoll);
          var G__15898 = cljs.core.next.call(null, seq__15886__$1);
          var G__15899 = null;
          var G__15900 = 0;
          var G__15901 = 0;
          seq__15886 = G__15898;
          chunk__15887 = G__15899;
          count__15888 = G__15900;
          i__15889 = G__15901;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.app.load_all_investment_stats = function load_all_investment_stats() {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_15921) {
            var state_val_15922 = state_15921[1];
            if (state_val_15922 === 2) {
              var inst_15918 = state_15921[2];
              var inst_15919 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 1476039495), inst_15918);
              var state_15921__$1 = state_15921;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15921__$1, inst_15919);
            } else {
              if (state_val_15922 === 1) {
                var inst_15916 = clustermap.api.investment_stats.call(null);
                var state_15921__$1 = state_15921;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15921__$1, 2, inst_15916);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_15926 = [null, null, null, null, null, null, null];
              statearr_15926[0] = state_machine__5694__auto__;
              statearr_15926[1] = 1;
              return statearr_15926;
            };
            var state_machine__5694__auto____1 = function(state_15921) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_15921);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e15927) {
                    if (e15927 instanceof Object) {
                      var ex__5697__auto__ = e15927;
                      var statearr_15928_15930 = state_15921;
                      statearr_15928_15930[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15921);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15927;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15931 = state_15921;
                  state_15921 = G__15931;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_15921) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_15921);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_15929 = f__5709__auto__.call(null);
        statearr_15929[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_15929;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.process_search_results = function process_search_results(results) {
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "search-results", "search-results", 306464634), cljs.core.js__GT_clj.call(null, results));
};
clustermap.app.process_selection = function process_selection(p__15932, type) {
  var vec__15934 = p__15932;
  var selection = cljs.core.nth.call(null, vec__15934, 0, null);
  var selection_investment_stats = cljs.core.nth.call(null, vec__15934, 1, null);
  var selection_investment_account_timelines = cljs.core.nth.call(null, vec__15934, 2, null);
  var selection_investment_aggs = cljs.core.nth.call(null, vec__15934, 3, null);
  var selection_investments = cljs.core.nth.call(null, vec__15934, 4, null);
  var selection_portfolio_company_locations = cljs.core.nth.call(null, vec__15934, 5, null);
  clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "value", "value", 305978217), selection], null), new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", -1048685843), selection_investment_stats, new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 
  2127671062), selection_investment_account_timelines, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479), selection_investment_aggs, new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610), selection_investments, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", -1948963855));
  return selection_portfolio_company_locations;
};
clustermap.app.make_selection = function make_selection(p__15935) {
  var vec__15940 = p__15935;
  var type = cljs.core.nth.call(null, vec__15940, 0, null);
  var id = cljs.core.nth.call(null, vec__15940, 1, null);
  var selector = cljs.core.truth_(type) ? new cljs.core.PersistentArrayMap.fromArray([type, id], true, false) : cljs.core.PersistentArrayMap.EMPTY;
  var old_selector = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state));
  if (cljs.core.not_EQ_.call(null, selector, old_selector)) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selector", "selector", 762528866), selector);
    var pred__15941 = cljs.core._EQ_;
    var expr__15942 = type;
    if (cljs.core.truth_(pred__15941.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__15942))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.portfolio_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
      selector)], null), type], null);
    } else {
      if (cljs.core.truth_(pred__15941.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__15942))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.investor_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
        selector)], null), type], null);
      } else {
        if (cljs.core.truth_(pred__15941.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__15942))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.constituency.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
          selector)], null), type], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), null], null), type], null);
        }
      }
    }
  } else {
    return null;
  }
};
clustermap.app.change_view = function change_view(view) {
  var view__$1 = cljs.core.keyword.call(null, view);
  if (cljs.core.not_EQ_.call(null, view__$1, (new cljs.core.Keyword(null, "view", "view", 1247994814)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state)))) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "view", "view", 1247994814), view__$1);
    return clustermap.nav.change_view.call(null, cljs.core.name.call(null, view__$1));
  } else {
    return null;
  }
};
clustermap.app.history = new goog.History;
clustermap.app.set_route = function set_route(view, type, id) {
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = type;
    if (cljs.core.truth_(and__3546__auto__)) {
      return id;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, function() {
      var or__3558__auto__ = view;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "map";
      }
    }())) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, type)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)));
  } else {
    if (cljs.core.truth_(view)) {
      return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view)));
    } else {
      return clustermap.app.history.setToken("");
    }
  }
};
clustermap.app.parse_route = function parse_route() {
  var fragment = clustermap.app.history.getToken();
  var vec__15947 = cljs.core.re_matches.call(null, /\/([^\/]+)(?:\/([^\/]+)\/(.+))?$/, fragment);
  var _ = cljs.core.nth.call(null, vec__15947, 0, null);
  var view = cljs.core.nth.call(null, vec__15947, 1, null);
  var type = cljs.core.nth.call(null, vec__15947, 2, null);
  var id = cljs.core.nth.call(null, vec__15947, 3, null);
  var type__$1 = function() {
    var G__15948 = type;
    var G__15948__$1 = G__15948 == null ? null : clojure.string.trim.call(null, G__15948);
    var G__15948__$2 = G__15948__$1 == null ? null : cljs.core.count.call(null, G__15948__$1);
    return G__15948__$2;
  }() > 0 ? clojure.string.trim.call(null, type) : null;
  var id__$1 = function() {
    var G__15949 = id;
    var G__15949__$1 = G__15949 == null ? null : clojure.string.trim.call(null, G__15949);
    var G__15949__$2 = G__15949__$1 == null ? null : cljs.core.count.call(null, G__15949__$1);
    return G__15949__$2;
  }() > 0 ? clojure.string.trim.call(null, id) : null;
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "view", "view", 1247994814), view, new cljs.core.Keyword(null, "type", "type", 1174270348), type__$1, new cljs.core.Keyword(null, "id", "id", -1388402092), id__$1], null);
};
clustermap.app.change_view_path = cljs.core.partial.call(null, clustermap.routes.path_for_view, clustermap.app.parse_route);
clustermap.app.set_selection_route = function set_selection_route(p__15950) {
  var vec__15953 = p__15950;
  var type = cljs.core.nth.call(null, vec__15953, 0, null);
  var id = cljs.core.nth.call(null, vec__15953, 1, null);
  var map__15954 = clustermap.app.parse_route.call(null);
  var map__15954__$1 = cljs.core.seq_QMARK_.call(null, map__15954) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15954) : map__15954;
  var view = cljs.core.get.call(null, map__15954__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.set_view_route = function set_view_route(view) {
  var map__15956 = clustermap.app.parse_route.call(null);
  var map__15956__$1 = cljs.core.seq_QMARK_.call(null, map__15956) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15956) : map__15956;
  var id = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var type = cljs.core.get.call(null, map__15956__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.update_selection_investment_aggs_table_view = function update_selection_investment_aggs_table_view(table_view) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_15989) {
            var state_val_15990 = state_15989[1];
            if (state_val_15990 === 2) {
              var inst_15980 = state_15989[7];
              var inst_15986 = state_15989[2];
              var inst_15987 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", -1031011048), inst_15980, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479), inst_15986);
              var state_15989__$1 = state_15989;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15989__$1, inst_15987);
            } else {
              if (state_val_15990 === 1) {
                var inst_15980 = state_15989[7];
                var inst_15978 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_15979 = (new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", -1031011048)).cljs$core$IFn$_invoke$arity$1(inst_15978);
                var inst_15980__$1 = cljs.core.merge.call(null, inst_15979, table_view);
                var inst_15981 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_15982 = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(inst_15981);
                var inst_15983 = cljs.core.merge.call(null, inst_15982, inst_15980__$1);
                var inst_15984 = clustermap.api.investment_aggs.call(null, inst_15983);
                var state_15989__$1 = function() {
                  var statearr_15991 = state_15989;
                  statearr_15991[7] = inst_15980__$1;
                  return statearr_15991;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15989__$1, 2, inst_15984);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_15995 = [null, null, null, null, null, null, null, null];
              statearr_15995[0] = state_machine__5694__auto__;
              statearr_15995[1] = 1;
              return statearr_15995;
            };
            var state_machine__5694__auto____1 = function(state_15989) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_15989);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e15996) {
                    if (e15996 instanceof Object) {
                      var ex__5697__auto__ = e15996;
                      var statearr_15997_15999 = state_15989;
                      statearr_15997_15999[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15989);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15996;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16000 = state_15989;
                  state_15989 = G__16000;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_15989) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_15989);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_15998 = f__5709__auto__.call(null);
        statearr_15998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_15998;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.update_selection_investments_table_view = function update_selection_investments_table_view(table_view) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_16033) {
            var state_val_16034 = state_16033[1];
            if (state_val_16034 === 2) {
              var inst_16024 = state_16033[7];
              var inst_16030 = state_16033[2];
              var inst_16031 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 1654650362), inst_16024, new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610), inst_16030);
              var state_16033__$1 = state_16033;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16033__$1, inst_16031);
            } else {
              if (state_val_16034 === 1) {
                var inst_16024 = state_16033[7];
                var inst_16022 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_16023 = (new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 1654650362)).cljs$core$IFn$_invoke$arity$1(inst_16022);
                var inst_16024__$1 = cljs.core.merge.call(null, inst_16023, table_view);
                var inst_16025 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_16026 = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(inst_16025);
                var inst_16027 = cljs.core.merge.call(null, inst_16026, inst_16024__$1);
                var inst_16028 = clustermap.api.investments.call(null, inst_16027);
                var state_16033__$1 = function() {
                  var statearr_16035 = state_16033;
                  statearr_16035[7] = inst_16024__$1;
                  return statearr_16035;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16033__$1, 2, inst_16028);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_16039 = [null, null, null, null, null, null, null, null];
              statearr_16039[0] = state_machine__5694__auto__;
              statearr_16039[1] = 1;
              return statearr_16039;
            };
            var state_machine__5694__auto____1 = function(state_16033) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_16033);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e16040) {
                    if (e16040 instanceof Object) {
                      var ex__5697__auto__ = e16040;
                      var statearr_16041_16043 = state_16033;
                      statearr_16041_16043[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16033);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16040;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16044 = state_16033;
                  state_16033 = G__16044;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_16033) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_16033);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_16042 = f__5709__auto__.call(null);
        statearr_16042[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_16042;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.event_handlers = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "search", "search", 1564939822), clustermap.api.ordered_api.call(null, clustermap.api.search, clustermap.app.process_search_results), new cljs.core.Keyword(null, "select", "select", 1147833503), clustermap.app.set_selection_route, new cljs.core.Keyword(null, "route-select", "route-select", 1501475360), clustermap.api.ordered_api.call(null, clustermap.app.make_selection, clustermap.app.process_selection), 
new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), clustermap.app.set_view_route, new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), clustermap.app.change_view, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), clustermap.app.update_selection_investment_aggs_table_view, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 
1261701637), clustermap.app.update_selection_investments_table_view], null);
clustermap.app.handle_event = function handle_event(type, val) {
  var handler = cljs.core.get.call(null, clustermap.app.event_handlers, type);
  if (cljs.core.not.call(null, handler)) {
    throw new Error("no handler for event-type: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));
  } else {
  }
  return handler.call(null, val);
};
clustermap.app.init_routes = function init_routes(comm) {
  var action__9531__auto___16061 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__16053 = params__9532__auto__;
      var map__16053__$1 = cljs.core.seq_QMARK_.call(null, map__16053) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16053) : map__16053;
      return null;
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__16054 = params__9532__auto__;
        return null;
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "", action__9531__auto___16061);
  var action__9531__auto___16062 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__16055 = params__9532__auto__;
      var map__16055__$1 = cljs.core.seq_QMARK_.call(null, map__16055) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16055) : map__16055;
      return null;
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__16056 = params__9532__auto__;
        return null;
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/", action__9531__auto___16062);
  var action__9531__auto___16063 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__16057 = params__9532__auto__;
      var map__16057__$1 = cljs.core.seq_QMARK_.call(null, map__16057) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16057) : map__16057;
      var view = cljs.core.get.call(null, map__16057__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__16058 = params__9532__auto__;
        var view = cljs.core.nth.call(null, vec__16058, 0, null);
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view", action__9531__auto___16063);
  var action__9531__auto___16064 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__16059 = params__9532__auto__;
      var map__16059__$1 = cljs.core.seq_QMARK_.call(null, map__16059) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16059) : map__16059;
      var id = cljs.core.get.call(null, map__16059__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      var type = cljs.core.get.call(null, map__16059__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
      var view = cljs.core.get.call(null, map__16059__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__16060 = params__9532__auto__;
        var view = cljs.core.nth.call(null, vec__16060, 0, null);
        var type = cljs.core.nth.call(null, vec__16060, 1, null);
        var id = cljs.core.nth.call(null, vec__16060, 2, null);
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view/:type/:id", action__9531__auto___16064);
  goog.events.listen(clustermap.app.history, goog.history.EventType.NAVIGATE, function(e) {
    var token = e.token;
    clustermap.ganalytics.send_pageview.call(null, token);
    return secretary.core.dispatch_BANG_.call(null, token);
  });
  return clustermap.app.history.setEnabled(true);
};
clustermap.app.init = function init() {
  var comm = cljs.core.async.chan.call(null);
  var path_fn = clustermap.routes.path_for;
  var link_fn = clustermap.routes.link_for;
  var shared = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), path_fn, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), link_fn, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502), clustermap.app.change_view_path, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393), cljs.core.partial.call(null, clustermap.boundarylines.get_or_fetch_best_boundarylines, 
  clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)), new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614), cljs.core.partial.call(null, clustermap.boundarylines.point_in_boundarylines, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), new cljs.core.Keyword(null, "uk_boroughs", "uk_boroughs", 800727440))], null);
  clustermap.nav.init.call(null, comm);
  clustermap.app.init_routes.call(null, comm);
  clustermap.app.load_boundaryline_collection_indexes.call(null);
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), clustermap.components.map.map_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "map-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map-state", "map-state", -1227493550), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461)], null), new cljs.core.Keyword(null, "filter", "filter", -948537934), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.Keyword(null, "compiled", "compiled", 850043082)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "map-report", "map-report", -254073588), clustermap.components.map_report.map_report_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "map-report-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", 
  -1101318648), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452)], null), new cljs.core.Keyword(null, "map-report", 
  "map-report", -254073588), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map-report", "map-report", -254073588)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "search", "search", 1564939822), clustermap.components.filter.filter_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "search-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "var-select", "var-select", -284006595), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Variable", new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_employee_count", "Employee count"], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_turnover", "Turnover"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "variable-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), 
  new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "stat-select", "stat-select", 587769134), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Statistic", new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sum", "Sum"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["max", "Maximum"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["avg", "Mean"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["boundaryline_id_doc_count", "Count"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "stat-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, 
  "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "scale-select", "scale-select", 1690031490), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Scale", new cljs.core.Keyword(null, "scale", "scale", -230427353), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["log", "Log"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear", "Linear"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "scale-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 
  1340701452), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "color-scale", "color-scale", -2117745622), clustermap.components.color_scale.color_scale_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "color-scale-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "table", "table", -564943036), clustermap.components.table.table_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "full-report-table", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "table-state", "table-state", -1662785974), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036)], null), new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "turnover-timeline", "turnover-timeline", 905445027), clustermap.components.timeline_chart.timeline_chart, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "turnover-timeline", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "timeline-chart", 
  "timeline-chart", 494939956), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "turnover-timeline", "turnover-timeline", 905445027)], null), new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), 
  new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null)], null));
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, comm, path_fn, link_fn, shared) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, comm, path_fn, link_fn, shared) {
          return function(state_16111) {
            var state_val_16112 = state_16111[1];
            if (state_val_16112 === 7) {
              var inst_16100 = state_16111[2];
              var inst_16101 = cljs.core.nth.call(null, inst_16100, 0, null);
              var inst_16102 = cljs.core.nth.call(null, inst_16100, 1, null);
              var inst_16103 = clustermap.app.handle_event.call(null, inst_16101, inst_16102);
              var state_16111__$1 = function() {
                var statearr_16113 = state_16111;
                statearr_16113[7] = inst_16103;
                return statearr_16113;
              }();
              var statearr_16114_16127 = state_16111__$1;
              statearr_16114_16127[2] = null;
              statearr_16114_16127[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16112 === 6) {
                var inst_16107 = state_16111[2];
                var state_16111__$1 = state_16111;
                var statearr_16115_16128 = state_16111__$1;
                statearr_16115_16128[2] = inst_16107;
                statearr_16115_16128[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16112 === 5) {
                  var state_16111__$1 = state_16111;
                  var statearr_16116_16129 = state_16111__$1;
                  statearr_16116_16129[2] = null;
                  statearr_16116_16129[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16112 === 4) {
                    var state_16111__$1 = state_16111;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16111__$1, 7, comm);
                  } else {
                    if (state_val_16112 === 3) {
                      var inst_16109 = state_16111[2];
                      var state_16111__$1 = state_16111;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16111__$1, inst_16109);
                    } else {
                      if (state_val_16112 === 2) {
                        var state_16111__$1 = state_16111;
                        var statearr_16117_16130 = state_16111__$1;
                        statearr_16117_16130[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16112 === 1) {
                          var state_16111__$1 = state_16111;
                          var statearr_16119_16131 = state_16111__$1;
                          statearr_16119_16131[2] = null;
                          statearr_16119_16131[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__, comm, path_fn, link_fn, shared);
        return function(switch__5693__auto__, c__5708__auto__, comm, path_fn, link_fn, shared) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_16123 = [null, null, null, null, null, null, null, null];
              statearr_16123[0] = state_machine__5694__auto__;
              statearr_16123[1] = 1;
              return statearr_16123;
            };
            var state_machine__5694__auto____1 = function(state_16111) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_16111);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e16124) {
                    if (e16124 instanceof Object) {
                      var ex__5697__auto__ = e16124;
                      var statearr_16125_16132 = state_16111;
                      statearr_16125_16132[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16111);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16124;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16133 = state_16111;
                  state_16111 = G__16133;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_16111) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_16111);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, comm, path_fn, link_fn, shared);
      }();
      var state__5710__auto__ = function() {
        var statearr_16126 = f__5709__auto__.call(null);
        statearr_16126[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_16126;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, comm, path_fn, link_fn, shared));
  return c__5708__auto__;
};
goog.provide("figwheel.client");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("goog.net.jsloader");
goog.require("goog.net.jsloader");
figwheel.client.log = function() {
  var log__delegate = function(p__23801, args) {
    var map__23803 = p__23801;
    var map__23803__$1 = cljs.core.seq_QMARK_.call(null, map__23803) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23803) : map__23803;
    var debug = cljs.core.get.call(null, map__23803__$1, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
    if (cljs.core.truth_(debug)) {
      return console.log(cljs.core.to_array.call(null, args));
    } else {
      return null;
    }
  };
  var log = function(p__23801, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log__delegate.call(this, p__23801, args);
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__23804) {
    var p__23801 = cljs.core.first(arglist__23804);
    var args = cljs.core.rest(arglist__23804);
    return log__delegate(p__23801, args);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
figwheel.client.reload_host = function reload_host(p__23805) {
  var map__23807 = p__23805;
  var map__23807__$1 = cljs.core.seq_QMARK_.call(null, map__23807) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23807) : map__23807;
  var websocket_url = cljs.core.get.call(null, map__23807__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  return cljs.core.first.call(null, clojure.string.split.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, websocket_url, /^ws:/, ""), /^\/\//, ""), /\//));
};
figwheel.client.add_cache_buster = function add_cache_buster(url) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(url) + "?rel\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new Date).getTime());
};
figwheel.client.js_reload = function js_reload(p__23808, callback) {
  var map__23810 = p__23808;
  var map__23810__$1 = cljs.core.seq_QMARK_.call(null, map__23810) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23810) : map__23810;
  var msg = map__23810__$1;
  var dependency_file = cljs.core.get.call(null, map__23810__$1, new cljs.core.Keyword(null, "dependency-file", "dependency-file", -1682436382));
  var namespace = cljs.core.get.call(null, map__23810__$1, new cljs.core.Keyword(null, "namespace", "namespace", -377510372));
  var request_url = cljs.core.get.call(null, map__23810__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = dependency_file;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return goog.isProvided_(namespace);
    }
  }())) {
    return goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, request_url)).addCallback(function(map__23810, map__23810__$1, msg, dependency_file, namespace, request_url) {
      return function() {
        return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
      };
    }(map__23810, map__23810__$1, msg, dependency_file, namespace, request_url));
  } else {
    return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
  }
};
figwheel.client.reload_js_file = function reload_js_file(file_msg) {
  var out = cljs.core.async.chan.call(null);
  figwheel.client.js_reload.call(null, file_msg, function(out) {
    return function(url) {
      cljs.core.async.put_BANG_.call(null, out, url);
      return cljs.core.async.close_BANG_.call(null, out);
    };
  }(out));
  return out;
};
figwheel.client.load_all_js_files = function load_all_js_files(files) {
  return cljs.core.async.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.async.filter_LT_.call(null, cljs.core.identity, cljs.core.async.merge.call(null, cljs.core.mapv.call(null, figwheel.client.reload_js_file, files))));
};
figwheel.client.add_request_url = function add_request_url(p__23811, p__23812) {
  var map__23815 = p__23811;
  var map__23815__$1 = cljs.core.seq_QMARK_.call(null, map__23815) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23815) : map__23815;
  var opts = map__23815__$1;
  var url_rewriter = cljs.core.get.call(null, map__23815__$1, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838));
  var map__23816 = p__23812;
  var map__23816__$1 = cljs.core.seq_QMARK_.call(null, map__23816) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23816) : map__23816;
  var d = map__23816__$1;
  var file = cljs.core.get.call(null, map__23816__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596), url_rewriter.call(null, "//" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(figwheel.client.reload_host.call(null, opts)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)));
};
figwheel.client.add_request_urls = function add_request_urls(opts, files) {
  return cljs.core.map.call(null, cljs.core.partial.call(null, figwheel.client.add_request_url, opts), files);
};
figwheel.client.reload_js_files = function reload_js_files(p__23817, p__23818) {
  var map__23860 = p__23817;
  var map__23860__$1 = cljs.core.seq_QMARK_.call(null, map__23860) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23860) : map__23860;
  var opts = map__23860__$1;
  var on_jsload = cljs.core.get.call(null, map__23860__$1, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602));
  var before_jsload = cljs.core.get.call(null, map__23860__$1, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128));
  var map__23861 = p__23818;
  var map__23861__$1 = cljs.core.seq_QMARK_.call(null, map__23861) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23861) : map__23861;
  var files = cljs.core.get.call(null, map__23861__$1, new cljs.core.Keyword(null, "files", "files", -472457450));
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files) {
          return function(state_23884) {
            var state_val_23885 = state_23884[1];
            if (state_val_23885 === 6) {
              var inst_23866 = state_23884[7];
              var inst_23875 = state_23884[2];
              var inst_23876 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_23877 = [inst_23866];
              var inst_23878 = new cljs.core.PersistentVector(null, 1, 5, inst_23876, inst_23877, null);
              var inst_23879 = cljs.core.apply.call(null, on_jsload, inst_23878);
              var state_23884__$1 = function() {
                var statearr_23886 = state_23884;
                statearr_23886[8] = inst_23875;
                return statearr_23886;
              }();
              var statearr_23887_23901 = state_23884__$1;
              statearr_23887_23901[2] = inst_23879;
              statearr_23887_23901[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23885 === 5) {
                var inst_23882 = state_23884[2];
                var state_23884__$1 = state_23884;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23884__$1, inst_23882);
              } else {
                if (state_val_23885 === 4) {
                  var state_23884__$1 = state_23884;
                  var statearr_23888_23902 = state_23884__$1;
                  statearr_23888_23902[2] = null;
                  statearr_23888_23902[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23885 === 3) {
                    var inst_23866 = state_23884[7];
                    var inst_23869 = console.debug("Figwheel: loaded these files");
                    var inst_23870 = cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), inst_23866);
                    var inst_23871 = cljs.core.prn_str.call(null, inst_23870);
                    var inst_23872 = console.log(inst_23871);
                    var inst_23873 = cljs.core.async.timeout.call(null, 10);
                    var state_23884__$1 = function() {
                      var statearr_23889 = state_23884;
                      statearr_23889[9] = inst_23869;
                      statearr_23889[10] = inst_23872;
                      return statearr_23889;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23884__$1, 6, inst_23873);
                  } else {
                    if (state_val_23885 === 2) {
                      var inst_23866 = state_23884[7];
                      var inst_23866__$1 = state_23884[2];
                      var inst_23867 = cljs.core.not_empty.call(null, inst_23866__$1);
                      var state_23884__$1 = function() {
                        var statearr_23890 = state_23884;
                        statearr_23890[7] = inst_23866__$1;
                        return statearr_23890;
                      }();
                      if (cljs.core.truth_(inst_23867)) {
                        var statearr_23891_23903 = state_23884__$1;
                        statearr_23891_23903[1] = 3;
                      } else {
                        var statearr_23892_23904 = state_23884__$1;
                        statearr_23892_23904[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23885 === 1) {
                        var inst_23862 = before_jsload.call(null, files);
                        var inst_23863 = figwheel.client.add_request_urls.call(null, opts, files);
                        var inst_23864 = figwheel.client.load_all_js_files.call(null, inst_23863);
                        var state_23884__$1 = function() {
                          var statearr_23893 = state_23884;
                          statearr_23893[11] = inst_23862;
                          return statearr_23893;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23884__$1, 2, inst_23864);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files);
        return function(switch__5693__auto__, c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_23897 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23897[0] = state_machine__5694__auto__;
              statearr_23897[1] = 1;
              return statearr_23897;
            };
            var state_machine__5694__auto____1 = function(state_23884) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_23884);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e23898) {
                    if (e23898 instanceof Object) {
                      var ex__5697__auto__ = e23898;
                      var statearr_23899_23905 = state_23884;
                      statearr_23899_23905[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23884);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23898;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23906 = state_23884;
                  state_23884 = G__23906;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_23884) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_23884);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files);
      }();
      var state__5710__auto__ = function() {
        var statearr_23900 = f__5709__auto__.call(null);
        statearr_23900[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_23900;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, map__23860, map__23860__$1, opts, on_jsload, before_jsload, map__23861, map__23861__$1, files));
  return c__5708__auto__;
};
figwheel.client.current_links = function current_links() {
  return Array.prototype.slice.call(document.getElementsByTagName("link"));
};
figwheel.client.truncate_url = function truncate_url(url) {
  return clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, cljs.core.first.call(null, clojure.string.split.call(null, url, /\?/)), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location.protocol) + "//", ""), "http://", ""), "https://", ""), /^\/\//, ""), /[^\\/]*/, "");
};
figwheel.client.matches_file_QMARK_ = function matches_file_QMARK_(p__23907, link_href) {
  var map__23909 = p__23907;
  var map__23909__$1 = cljs.core.seq_QMARK_.call(null, map__23909) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23909) : map__23909;
  var request_url = cljs.core.get.call(null, map__23909__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__23909__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var trunc_href = figwheel.client.truncate_url.call(null, link_href);
  return cljs.core._EQ_.call(null, file, trunc_href) || cljs.core._EQ_.call(null, figwheel.client.truncate_url.call(null, request_url), trunc_href);
};
figwheel.client.get_correct_link = function get_correct_link(f_data) {
  return cljs.core.some.call(null, function(l) {
    if (figwheel.client.matches_file_QMARK_.call(null, f_data, l.href)) {
      return l;
    } else {
      return null;
    }
  }, figwheel.client.current_links.call(null));
};
figwheel.client.clone_link = function clone_link(link, url) {
  var clone = document.createElement("link");
  clone.rel = "stylesheet";
  clone.media = link.media;
  clone.disabled = link.disabled;
  clone.href = figwheel.client.add_cache_buster.call(null, url);
  return clone;
};
figwheel.client.create_link = function create_link(url) {
  var link = document.createElement("link");
  link.rel = "stylesheet";
  link.href = figwheel.client.add_cache_buster.call(null, url);
  return link;
};
figwheel.client.add_link_to_doc = function() {
  var add_link_to_doc = null;
  var add_link_to_doc__1 = function(new_link) {
    return document.getElementsByTagName("head")[0].appendChild(new_link);
  };
  var add_link_to_doc__2 = function(orig_link, klone) {
    var parent = orig_link.parentNode;
    if (cljs.core._EQ_.call(null, orig_link, parent.lastChild)) {
      parent.appendChild(klone);
    } else {
      parent.insertBefore(klone, orig_link.nextSibling);
    }
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, parent) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, parent) {
            return function(state_23930) {
              var state_val_23931 = state_23930[1];
              if (state_val_23931 === 2) {
                var inst_23927 = state_23930[2];
                var inst_23928 = parent.removeChild(orig_link);
                var state_23930__$1 = function() {
                  var statearr_23932 = state_23930;
                  statearr_23932[7] = inst_23927;
                  return statearr_23932;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23930__$1, inst_23928);
              } else {
                if (state_val_23931 === 1) {
                  var inst_23925 = cljs.core.async.timeout.call(null, 200);
                  var state_23930__$1 = state_23930;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23930__$1, 2, inst_23925);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, parent);
          return function(switch__5693__auto__, c__5708__auto__, parent) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_23936 = [null, null, null, null, null, null, null, null];
                statearr_23936[0] = state_machine__5694__auto__;
                statearr_23936[1] = 1;
                return statearr_23936;
              };
              var state_machine__5694__auto____1 = function(state_23930) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_23930);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e23937) {
                      if (e23937 instanceof Object) {
                        var ex__5697__auto__ = e23937;
                        var statearr_23938_23940 = state_23930;
                        statearr_23938_23940[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23930);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23937;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23941 = state_23930;
                    state_23930 = G__23941;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_23930) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_23930);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, parent);
        }();
        var state__5710__auto__ = function() {
          var statearr_23939 = f__5709__auto__.call(null);
          statearr_23939[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_23939;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, parent));
    return c__5708__auto__;
  };
  add_link_to_doc = function(orig_link, klone) {
    switch(arguments.length) {
      case 1:
        return add_link_to_doc__1.call(this, orig_link);
      case 2:
        return add_link_to_doc__2.call(this, orig_link, klone);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_link_to_doc.cljs$core$IFn$_invoke$arity$1 = add_link_to_doc__1;
  add_link_to_doc.cljs$core$IFn$_invoke$arity$2 = add_link_to_doc__2;
  return add_link_to_doc;
}();
figwheel.client.reload_css_file = function reload_css_file(p__23942) {
  var map__23944 = p__23942;
  var map__23944__$1 = cljs.core.seq_QMARK_.call(null, map__23944) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23944) : map__23944;
  var f_data = map__23944__$1;
  var request_url = cljs.core.get.call(null, map__23944__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__23944__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var temp__4124__auto__ = figwheel.client.get_correct_link.call(null, f_data);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var link = temp__4124__auto__;
    return figwheel.client.add_link_to_doc.call(null, link, figwheel.client.clone_link.call(null, link, request_url));
  } else {
    return figwheel.client.add_link_to_doc.call(null, figwheel.client.create_link.call(null, request_url));
  }
};
figwheel.client.reload_css_files = function reload_css_files(p__23945, files_msg) {
  var map__23967 = p__23945;
  var map__23967__$1 = cljs.core.seq_QMARK_.call(null, map__23967) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23967) : map__23967;
  var opts = map__23967__$1;
  var on_cssload = cljs.core.get.call(null, map__23967__$1, new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318));
  var seq__23968_23988 = cljs.core.seq.call(null, figwheel.client.add_request_urls.call(null, opts, (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg)));
  var chunk__23969_23989 = null;
  var count__23970_23990 = 0;
  var i__23971_23991 = 0;
  while (true) {
    if (i__23971_23991 < count__23970_23990) {
      var f_23992 = cljs.core._nth.call(null, chunk__23969_23989, i__23971_23991);
      figwheel.client.reload_css_file.call(null, f_23992);
      var G__23993 = seq__23968_23988;
      var G__23994 = chunk__23969_23989;
      var G__23995 = count__23970_23990;
      var G__23996 = i__23971_23991 + 1;
      seq__23968_23988 = G__23993;
      chunk__23969_23989 = G__23994;
      count__23970_23990 = G__23995;
      i__23971_23991 = G__23996;
      continue;
    } else {
      var temp__4126__auto___23997 = cljs.core.seq.call(null, seq__23968_23988);
      if (temp__4126__auto___23997) {
        var seq__23968_23998__$1 = temp__4126__auto___23997;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23968_23998__$1)) {
          var c__4314__auto___23999 = cljs.core.chunk_first.call(null, seq__23968_23998__$1);
          var G__24000 = cljs.core.chunk_rest.call(null, seq__23968_23998__$1);
          var G__24001 = c__4314__auto___23999;
          var G__24002 = cljs.core.count.call(null, c__4314__auto___23999);
          var G__24003 = 0;
          seq__23968_23988 = G__24000;
          chunk__23969_23989 = G__24001;
          count__23970_23990 = G__24002;
          i__23971_23991 = G__24003;
          continue;
        } else {
          var f_24004 = cljs.core.first.call(null, seq__23968_23998__$1);
          figwheel.client.reload_css_file.call(null, f_24004);
          var G__24005 = cljs.core.next.call(null, seq__23968_23998__$1);
          var G__24006 = null;
          var G__24007 = 0;
          var G__24008 = 0;
          seq__23968_23988 = G__24005;
          chunk__23969_23989 = G__24006;
          count__23970_23990 = G__24007;
          i__23971_23991 = G__24008;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload) {
          return function(state_23978) {
            var state_val_23979 = state_23978[1];
            if (state_val_23979 === 2) {
              var inst_23974 = state_23978[2];
              var inst_23975 = (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg);
              var inst_23976 = on_cssload.call(null, inst_23975);
              var state_23978__$1 = function() {
                var statearr_23980 = state_23978;
                statearr_23980[7] = inst_23974;
                return statearr_23980;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23978__$1, inst_23976);
            } else {
              if (state_val_23979 === 1) {
                var inst_23972 = cljs.core.async.timeout.call(null, 100);
                var state_23978__$1 = state_23978;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23978__$1, 2, inst_23972);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload);
        return function(switch__5693__auto__, c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_23984 = [null, null, null, null, null, null, null, null];
              statearr_23984[0] = state_machine__5694__auto__;
              statearr_23984[1] = 1;
              return statearr_23984;
            };
            var state_machine__5694__auto____1 = function(state_23978) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_23978);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e23985) {
                    if (e23985 instanceof Object) {
                      var ex__5697__auto__ = e23985;
                      var statearr_23986_24009 = state_23978;
                      statearr_23986_24009[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23978);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23985;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24010 = state_23978;
                  state_23978 = G__24010;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_23978) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_23978);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload);
      }();
      var state__5710__auto__ = function() {
        var statearr_23987 = f__5709__auto__.call(null);
        statearr_23987[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_23987;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, map__23967, map__23967__$1, opts, on_cssload));
  return c__5708__auto__;
};
figwheel.client.compile_failed = function compile_failed(fail_msg, compile_fail_callback) {
  return compile_fail_callback.call(null, cljs.core.dissoc.call(null, fail_msg, new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)));
};
figwheel.client.figwheel_closure_import_script = function figwheel_closure_import_script(src) {
  if (cljs.core.truth_(goog.inHtmlDocument_())) {
    goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, src));
    return true;
  } else {
    return false;
  }
};
figwheel.client.patch_goog_base = function patch_goog_base() {
  goog.provide = goog.exportPath_;
  return goog.global.CLOSURE_IMPORT_SCRIPT = figwheel.client.figwheel_closure_import_script;
};
figwheel.client.watch_and_reload_STAR_ = function watch_and_reload_STAR_(p__24011) {
  var map__24016 = p__24011;
  var map__24016__$1 = cljs.core.seq_QMARK_.call(null, map__24016) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24016) : map__24016;
  var opts = map__24016__$1;
  var on_compile_fail = cljs.core.get.call(null, map__24016__$1, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036));
  var jsload_callback = cljs.core.get.call(null, map__24016__$1, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369));
  var websocket_url = cljs.core.get.call(null, map__24016__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  var retry_count = cljs.core.get.call(null, map__24016__$1, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875));
  console.debug("Figwheel: trying to open cljs reload socket");
  var socket = new WebSocket(websocket_url);
  socket.onmessage = function(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(msg_str) {
      var msg = cljs.reader.read_string.call(null, msg_str.data);
      var pred__24017 = cljs.core._EQ_;
      var expr__24018 = (new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)).cljs$core$IFn$_invoke$arity$1(msg);
      if (cljs.core.truth_(pred__24017.call(null, new cljs.core.Keyword(null, "files-changed", "files-changed", -1418200563), expr__24018))) {
        return figwheel.client.reload_js_files.call(null, opts, msg);
      } else {
        if (cljs.core.truth_(pred__24017.call(null, new cljs.core.Keyword(null, "css-files-changed", "css-files-changed", 720773874), expr__24018))) {
          return figwheel.client.reload_css_files.call(null, opts, msg);
        } else {
          if (cljs.core.truth_(pred__24017.call(null, new cljs.core.Keyword(null, "compile-failed", "compile-failed", -477639289), expr__24018))) {
            return figwheel.client.compile_failed.call(null, msg, on_compile_fail);
          } else {
            return null;
          }
        }
      }
    };
  }(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onopen = function(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.patch_goog_base.call(null);
      return console.debug("Figwheel: socket connection established");
    };
  }(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onclose = function(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.log.call(null, opts, "Figwheel: socket closed or failed to open");
      if (retry_count > 0) {
        return window.setTimeout(function(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
          return function() {
            return watch_and_reload_STAR_.call(null, cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), retry_count - 1));
          };
        }(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count), 2E3);
      } else {
        return null;
      }
    };
  }(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  return socket.onerror = function(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      return figwheel.client.log.call(null, opts, "Figwheel: socket error ");
    };
  }(socket, map__24016, map__24016__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
};
figwheel.client.default_on_jsload = function default_on_jsload(url) {
  return document.querySelector("body").dispatchEvent(new CustomEvent("figwheel.js-reload", function() {
    var obj24023 = {"detail":url};
    return obj24023;
  }()));
};
figwheel.client.get_essential_messages = function get_essential_messages(ed) {
  if (cljs.core.truth_(ed)) {
    return cljs.core.cons.call(null, cljs.core.select_keys.call(null, ed, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "message", "message", -406056002), new cljs.core.Keyword(null, "class", "class", -2030961996)], null)), get_essential_messages.call(null, (new cljs.core.Keyword(null, "cause", "cause", 231901252)).cljs$core$IFn$_invoke$arity$1(ed)));
  } else {
    return null;
  }
};
figwheel.client.error_msg_format = function error_msg_format(p__24024) {
  var map__24026 = p__24024;
  var map__24026__$1 = cljs.core.seq_QMARK_.call(null, map__24026) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24026) : map__24026;
  var class$ = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
  var message = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(class$) + " : " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(message);
};
figwheel.client.format_messages = cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.map, figwheel.client.error_msg_format), figwheel.client.get_essential_messages);
figwheel.client.default_on_compile_fail = function default_on_compile_fail(p__24027) {
  var map__24033 = p__24027;
  var map__24033__$1 = cljs.core.seq_QMARK_.call(null, map__24033) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24033) : map__24033;
  var ed = map__24033__$1;
  var exception_data = cljs.core.get.call(null, map__24033__$1, new cljs.core.Keyword(null, "exception-data", "exception-data", -512474886));
  var formatted_exception = cljs.core.get.call(null, map__24033__$1, new cljs.core.Keyword(null, "formatted-exception", "formatted-exception", -116489026));
  console.debug("Figwheel: Compile Exception");
  var seq__24034_24038 = cljs.core.seq.call(null, figwheel.client.format_messages.call(null, exception_data));
  var chunk__24035_24039 = null;
  var count__24036_24040 = 0;
  var i__24037_24041 = 0;
  while (true) {
    if (i__24037_24041 < count__24036_24040) {
      var msg_24042 = cljs.core._nth.call(null, chunk__24035_24039, i__24037_24041);
      console.log(msg_24042);
      var G__24043 = seq__24034_24038;
      var G__24044 = chunk__24035_24039;
      var G__24045 = count__24036_24040;
      var G__24046 = i__24037_24041 + 1;
      seq__24034_24038 = G__24043;
      chunk__24035_24039 = G__24044;
      count__24036_24040 = G__24045;
      i__24037_24041 = G__24046;
      continue;
    } else {
      var temp__4126__auto___24047 = cljs.core.seq.call(null, seq__24034_24038);
      if (temp__4126__auto___24047) {
        var seq__24034_24048__$1 = temp__4126__auto___24047;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24034_24048__$1)) {
          var c__4314__auto___24049 = cljs.core.chunk_first.call(null, seq__24034_24048__$1);
          var G__24050 = cljs.core.chunk_rest.call(null, seq__24034_24048__$1);
          var G__24051 = c__4314__auto___24049;
          var G__24052 = cljs.core.count.call(null, c__4314__auto___24049);
          var G__24053 = 0;
          seq__24034_24038 = G__24050;
          chunk__24035_24039 = G__24051;
          count__24036_24040 = G__24052;
          i__24037_24041 = G__24053;
          continue;
        } else {
          var msg_24054 = cljs.core.first.call(null, seq__24034_24048__$1);
          console.log(msg_24054);
          var G__24055 = cljs.core.next.call(null, seq__24034_24048__$1);
          var G__24056 = null;
          var G__24057 = 0;
          var G__24058 = 0;
          seq__24034_24038 = G__24055;
          chunk__24035_24039 = G__24056;
          count__24036_24040 = G__24057;
          i__24037_24041 = G__24058;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ed;
};
figwheel.client.default_before_load = function default_before_load(files) {
  console.debug("Figwheel: loading files");
  return files;
};
figwheel.client.default_on_cssload = function default_on_cssload(files) {
  console.debug("Figwheel: loaded CSS files");
  console.log(cljs.core.prn_str.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), files)));
  return files;
};
figwheel.client.watch_and_reload_with_opts = function watch_and_reload_with_opts(opts) {
  if (cljs.core.truth_(figwheel.client.hasOwnProperty("watch_and_reload_singleton"))) {
    return null;
  } else {
    figwheel.client.watch_and_reload_singleton = figwheel.client.watch_and_reload_STAR_.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), 100, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), figwheel.client.default_on_jsload, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602), function() {
      var or__3558__auto__ = (new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369)).cljs$core$IFn$_invoke$arity$1(opts);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return figwheel.client.default_on_jsload;
      }
    }(), new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318), figwheel.client.default_on_cssload, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128), figwheel.client.default_before_load, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036), figwheel.client.default_on_compile_fail, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838), cljs.core.identity, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), 
    "ws://" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location.host) + "/figwheel-ws"], null), opts));
  }
};
figwheel.client.watch_and_reload = function() {
  var watch_and_reload__delegate = function(p__24059) {
    var map__24061 = p__24059;
    var map__24061__$1 = cljs.core.seq_QMARK_.call(null, map__24061) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24061) : map__24061;
    var opts = map__24061__$1;
    return figwheel.client.watch_and_reload_with_opts.call(null, opts);
  };
  var watch_and_reload = function(var_args) {
    var p__24059 = null;
    if (arguments.length > 0) {
      p__24059 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return watch_and_reload__delegate.call(this, p__24059);
  };
  watch_and_reload.cljs$lang$maxFixedArity = 0;
  watch_and_reload.cljs$lang$applyTo = function(arglist__24062) {
    var p__24059 = cljs.core.seq(arglist__24062);
    return watch_and_reload__delegate(p__24059);
  };
  watch_and_reload.cljs$core$IFn$_invoke$arity$variadic = watch_and_reload__delegate;
  return watch_and_reload;
}();
goog.provide("clustermap.core");
goog.require("cljs.core");
goog.require("clustermap.app");
goog.require("clustermap.app");
goog.require("figwheel.client");
goog.require("figwheel.client");
goog.require("weasel.repl");
goog.require("weasel.repl");
clustermap.core.init = function init() {
  return clustermap.app.init.call(null);
};
if (cljs.core.truth_(config.repl)) {
  weasel.repl.connect.call(null, "ws://localhost:9001", new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
  figwheel.client.watch_and_reload.call(null, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), "ws://localhost:3449/figwheel-ws", new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), function() {
    return console.log("reloaded");
  });
  clustermap.core.init.call(null);
} else {
  clustermap.core.init.call(null);
}
;goog.provide("clustermap.async");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.async.map_async = function() {
  var map_async__delegate = function(f, colls) {
    var coll_chs = cljs.core.map.call(null, function(coll) {
      var ch = cljs.core.async.chan.call(null);
      cljs.core.async.onto_chan.call(null, ch, coll);
      return ch;
    }, colls);
    return cljs.core.async.map.call(null, f, coll_chs);
  };
  var map_async = function(f, var_args) {
    var colls = null;
    if (arguments.length > 1) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map_async__delegate.call(this, f, colls);
  };
  map_async.cljs$lang$maxFixedArity = 1;
  map_async.cljs$lang$applyTo = function(arglist__16134) {
    var f = cljs.core.first(arglist__16134);
    var colls = cljs.core.rest(arglist__16134);
    return map_async__delegate(f, colls);
  };
  map_async.cljs$core$IFn$_invoke$arity$variadic = map_async__delegate;
  return map_async;
}();
clustermap.async.dorun_async = function() {
  var dorun_async__delegate = function(ch, p__16135) {
    var map__16195 = p__16135;
    var map__16195__$1 = cljs.core.seq_QMARK_.call(null, map__16195) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16195) : map__16195;
    var delay = cljs.core.get.call(null, map__16195__$1, new cljs.core.Keyword(null, "delay", "delay", -574225219));
    var log = cljs.core.get.call(null, map__16195__$1, new cljs.core.Keyword(null, "log", "log", -1595516004));
    var c__5708__auto___16254 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___16254, map__16195, map__16195__$1, delay, log) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___16254, map__16195, map__16195__$1, delay, log) {
            return function(state_16224) {
              var state_val_16225 = state_16224[1];
              if (state_val_16225 === 7) {
                var inst_16215 = state_16224[2];
                var state_16224__$1 = state_16224;
                if (cljs.core.truth_(inst_16215)) {
                  var statearr_16226_16255 = state_16224__$1;
                  statearr_16226_16255[1] = 15;
                } else {
                  var statearr_16227_16256 = state_16224__$1;
                  statearr_16227_16256[1] = 16;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16225 === 1) {
                  var state_16224__$1 = state_16224;
                  var statearr_16228_16257 = state_16224__$1;
                  statearr_16228_16257[2] = null;
                  statearr_16228_16257[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16225 === 4) {
                    var inst_16198 = state_16224[7];
                    var inst_16198__$1 = state_16224[2];
                    var state_16224__$1 = function() {
                      var statearr_16229 = state_16224;
                      statearr_16229[7] = inst_16198__$1;
                      return statearr_16229;
                    }();
                    if (cljs.core.truth_(inst_16198__$1)) {
                      var statearr_16230_16258 = state_16224__$1;
                      statearr_16230_16258[1] = 5;
                    } else {
                      var statearr_16231_16259 = state_16224__$1;
                      statearr_16231_16259[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16225 === 15) {
                      var state_16224__$1 = state_16224;
                      var statearr_16232_16260 = state_16224__$1;
                      statearr_16232_16260[2] = null;
                      statearr_16232_16260[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16225 === 13) {
                        var state_16224__$1 = state_16224;
                        var statearr_16233_16261 = state_16224__$1;
                        statearr_16233_16261[2] = null;
                        statearr_16233_16261[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16225 === 6) {
                          var state_16224__$1 = state_16224;
                          var statearr_16234_16262 = state_16224__$1;
                          statearr_16234_16262[2] = null;
                          statearr_16234_16262[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16225 === 17) {
                            var inst_16220 = state_16224[2];
                            var state_16224__$1 = state_16224;
                            var statearr_16235_16263 = state_16224__$1;
                            statearr_16235_16263[2] = inst_16220;
                            statearr_16235_16263[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16225 === 3) {
                              var inst_16222 = state_16224[2];
                              var state_16224__$1 = state_16224;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16224__$1, inst_16222);
                            } else {
                              if (state_val_16225 === 12) {
                                var inst_16198 = state_16224[7];
                                var inst_16208 = cljs.core.clj__GT_js.call(null, inst_16198);
                                var inst_16209 = console.log(inst_16208);
                                var state_16224__$1 = state_16224;
                                var statearr_16236_16264 = state_16224__$1;
                                statearr_16236_16264[2] = inst_16209;
                                statearr_16236_16264[1] = 14;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16225 === 2) {
                                  var state_16224__$1 = state_16224;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16224__$1, 4, ch);
                                } else {
                                  if (state_val_16225 === 11) {
                                    var inst_16203 = state_16224[2];
                                    var state_16224__$1 = state_16224;
                                    var statearr_16237_16265 = state_16224__$1;
                                    statearr_16237_16265[2] = inst_16203;
                                    statearr_16237_16265[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16225 === 9) {
                                      var state_16224__$1 = state_16224;
                                      var statearr_16238_16266 = state_16224__$1;
                                      statearr_16238_16266[2] = null;
                                      statearr_16238_16266[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16225 === 5) {
                                        var state_16224__$1 = state_16224;
                                        if (cljs.core.truth_(delay)) {
                                          var statearr_16239_16267 = state_16224__$1;
                                          statearr_16239_16267[1] = 8;
                                        } else {
                                          var statearr_16240_16268 = state_16224__$1;
                                          statearr_16240_16268[1] = 9;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16225 === 14) {
                                          var inst_16198 = state_16224[7];
                                          var inst_16212 = state_16224[2];
                                          var state_16224__$1 = function() {
                                            var statearr_16241 = state_16224;
                                            statearr_16241[8] = inst_16212;
                                            return statearr_16241;
                                          }();
                                          var statearr_16242_16269 = state_16224__$1;
                                          statearr_16242_16269[2] = inst_16198;
                                          statearr_16242_16269[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16225 === 16) {
                                            var state_16224__$1 = state_16224;
                                            var statearr_16243_16270 = state_16224__$1;
                                            statearr_16243_16270[2] = null;
                                            statearr_16243_16270[1] = 17;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16225 === 10) {
                                              var inst_16206 = state_16224[2];
                                              var state_16224__$1 = function() {
                                                var statearr_16244 = state_16224;
                                                statearr_16244[9] = inst_16206;
                                                return statearr_16244;
                                              }();
                                              if (cljs.core.truth_(log)) {
                                                var statearr_16245_16271 = state_16224__$1;
                                                statearr_16245_16271[1] = 12;
                                              } else {
                                                var statearr_16246_16272 = state_16224__$1;
                                                statearr_16246_16272[1] = 13;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16225 === 8) {
                                                var inst_16201 = cljs.core.async.timeout.call(null, delay);
                                                var state_16224__$1 = state_16224;
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16224__$1, 11, inst_16201);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___16254, map__16195, map__16195__$1, delay, log);
          return function(switch__5693__auto__, c__5708__auto___16254, map__16195, map__16195__$1, delay, log) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16250 = [null, null, null, null, null, null, null, null, null, null];
                statearr_16250[0] = state_machine__5694__auto__;
                statearr_16250[1] = 1;
                return statearr_16250;
              };
              var state_machine__5694__auto____1 = function(state_16224) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16224);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16251) {
                      if (e16251 instanceof Object) {
                        var ex__5697__auto__ = e16251;
                        var statearr_16252_16273 = state_16224;
                        statearr_16252_16273[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16224);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16251;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16274 = state_16224;
                    state_16224 = G__16274;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16224) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16224);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___16254, map__16195, map__16195__$1, delay, log);
        }();
        var state__5710__auto__ = function() {
          var statearr_16253 = f__5709__auto__.call(null);
          statearr_16253[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___16254;
          return statearr_16253;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___16254, map__16195, map__16195__$1, delay, log));
    return null;
  };
  var dorun_async = function(ch, var_args) {
    var p__16135 = null;
    if (arguments.length > 1) {
      p__16135 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dorun_async__delegate.call(this, ch, p__16135);
  };
  dorun_async.cljs$lang$maxFixedArity = 1;
  dorun_async.cljs$lang$applyTo = function(arglist__16275) {
    var ch = cljs.core.first(arglist__16275);
    var p__16135 = cljs.core.rest(arglist__16275);
    return dorun_async__delegate(ch, p__16135);
  };
  dorun_async.cljs$core$IFn$_invoke$arity$variadic = dorun_async__delegate;
  return dorun_async;
}();

//# sourceMappingURL=clustermap.js.map